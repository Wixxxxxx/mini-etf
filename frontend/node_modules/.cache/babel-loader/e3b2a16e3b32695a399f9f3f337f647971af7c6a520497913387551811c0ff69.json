{"ast":null,"code":"// Configuration for CLOB Trading System\nexport const CONFIG={// Safety Settings\nSAFETY:{// Force testnet only (recommended for development)\nFORCE_TESTNET_ONLY:true,// Show safety warnings\nSHOW_SAFETY_WARNINGS:true,// Block mainnet connections\nBLOCK_MAINNET:true,// Allowed testnet chain IDs\nALLOWED_TESTNETS:['0x5',// Goerli\n'0xaa36a7',// Sepolia\n'0x13881',// Mumbai\n'0x1a4',// Optimism Goerli\n'0x66eed'// Arbitrum Goerli\n]},// Network Configuration\nNETWORKS:{'0x1':{name:'Ethereum Mainnet',isTestnet:false,rpcUrl:'https://mainnet.infura.io/v3/',blockExplorer:'https://etherscan.io',warning:'⚠️ MAINNET - REAL FUNDS AT RISK!'},'0x5':{name:'Goerli Testnet',isTestnet:true,rpcUrl:'https://goerli.infura.io/v3/',blockExplorer:'https://goerli.etherscan.io',faucet:'https://goerlifaucet.com/'},'0xaa36a7':{name:'Sepolia Testnet',isTestnet:true,rpcUrl:'https://sepolia.infura.io/v3/',blockExplorer:'https://sepolia.etherscan.io',faucet:'https://sepoliafaucet.com/'},'0x13881':{name:'Mumbai Testnet',isTestnet:true,rpcUrl:'https://polygon-mumbai.infura.io/v3/',blockExplorer:'https://mumbai.polygonscan.com',faucet:'https://faucet.polygon.technology/'}},// API Configuration\nAPI:{BASE_URL:process.env.REACT_APP_API_URL||'http://localhost:3001',TIMEOUT:10000},// UI Configuration\nUI:{REFRESH_INTERVAL:5000,// 5 seconds\nMAX_ORDERS_DISPLAY:50,PRICE_PRECISION:4,QUANTITY_PRECISION:2}};// Helper functions\nexport const isTestnet=chainId=>{return CONFIG.SAFETY.ALLOWED_TESTNETS.includes(chainId);};export const getNetworkInfo=chainId=>{return CONFIG.NETWORKS[chainId]||{name:\"Unknown Network (\".concat(chainId,\")\"),isTestnet:false,warning:'⚠️ UNKNOWN NETWORK - PROCEED WITH CAUTION!'};};export const isNetworkAllowed=chainId=>{if(CONFIG.SAFETY.FORCE_TESTNET_ONLY){return isTestnet(chainId);}return true;};","map":{"version":3,"names":["CONFIG","SAFETY","FORCE_TESTNET_ONLY","SHOW_SAFETY_WARNINGS","BLOCK_MAINNET","ALLOWED_TESTNETS","NETWORKS","name","isTestnet","rpcUrl","blockExplorer","warning","faucet","API","BASE_URL","process","env","REACT_APP_API_URL","TIMEOUT","UI","REFRESH_INTERVAL","MAX_ORDERS_DISPLAY","PRICE_PRECISION","QUANTITY_PRECISION","chainId","includes","getNetworkInfo","concat","isNetworkAllowed"],"sources":["/Users/raymeind/mini-etf/frontend/src/config.js"],"sourcesContent":["// Configuration for CLOB Trading System\nexport const CONFIG = {\n  // Safety Settings\n  SAFETY: {\n    // Force testnet only (recommended for development)\n    FORCE_TESTNET_ONLY: true,\n    \n    // Show safety warnings\n    SHOW_SAFETY_WARNINGS: true,\n    \n    // Block mainnet connections\n    BLOCK_MAINNET: true,\n    \n    // Allowed testnet chain IDs\n    ALLOWED_TESTNETS: [\n      '0x5',      // Goerli\n      '0xaa36a7', // Sepolia\n      '0x13881',  // Mumbai\n      '0x1a4',    // Optimism Goerli\n      '0x66eed'   // Arbitrum Goerli\n    ]\n  },\n  \n  // Network Configuration\n  NETWORKS: {\n    '0x1': {\n      name: 'Ethereum Mainnet',\n      isTestnet: false,\n      rpcUrl: 'https://mainnet.infura.io/v3/',\n      blockExplorer: 'https://etherscan.io',\n      warning: '⚠️ MAINNET - REAL FUNDS AT RISK!'\n    },\n    '0x5': {\n      name: 'Goerli Testnet',\n      isTestnet: true,\n      rpcUrl: 'https://goerli.infura.io/v3/',\n      blockExplorer: 'https://goerli.etherscan.io',\n      faucet: 'https://goerlifaucet.com/'\n    },\n    '0xaa36a7': {\n      name: 'Sepolia Testnet',\n      isTestnet: true,\n      rpcUrl: 'https://sepolia.infura.io/v3/',\n      blockExplorer: 'https://sepolia.etherscan.io',\n      faucet: 'https://sepoliafaucet.com/'\n    },\n    '0x13881': {\n      name: 'Mumbai Testnet',\n      isTestnet: true,\n      rpcUrl: 'https://polygon-mumbai.infura.io/v3/',\n      blockExplorer: 'https://mumbai.polygonscan.com',\n      faucet: 'https://faucet.polygon.technology/'\n    }\n  },\n  \n  // API Configuration\n  API: {\n    BASE_URL: process.env.REACT_APP_API_URL || 'http://localhost:3001',\n    TIMEOUT: 10000\n  },\n  \n  // UI Configuration\n  UI: {\n    REFRESH_INTERVAL: 5000, // 5 seconds\n    MAX_ORDERS_DISPLAY: 50,\n    PRICE_PRECISION: 4,\n    QUANTITY_PRECISION: 2\n  }\n};\n\n// Helper functions\nexport const isTestnet = (chainId) => {\n  return CONFIG.SAFETY.ALLOWED_TESTNETS.includes(chainId);\n};\n\nexport const getNetworkInfo = (chainId) => {\n  return CONFIG.NETWORKS[chainId] || {\n    name: `Unknown Network (${chainId})`,\n    isTestnet: false,\n    warning: '⚠️ UNKNOWN NETWORK - PROCEED WITH CAUTION!'\n  };\n};\n\nexport const isNetworkAllowed = (chainId) => {\n  if (CONFIG.SAFETY.FORCE_TESTNET_ONLY) {\n    return isTestnet(chainId);\n  }\n  return true;\n}; "],"mappings":"AAAA;AACA,MAAO,MAAM,CAAAA,MAAM,CAAG,CACpB;AACAC,MAAM,CAAE,CACN;AACAC,kBAAkB,CAAE,IAAI,CAExB;AACAC,oBAAoB,CAAE,IAAI,CAE1B;AACAC,aAAa,CAAE,IAAI,CAEnB;AACAC,gBAAgB,CAAE,CAChB,KAAK,CAAO;AACZ,UAAU,CAAE;AACZ,SAAS,CAAG;AACZ,OAAO,CAAK;AACZ,SAAY;AAAA,CAEhB,CAAC,CAED;AACAC,QAAQ,CAAE,CACR,KAAK,CAAE,CACLC,IAAI,CAAE,kBAAkB,CACxBC,SAAS,CAAE,KAAK,CAChBC,MAAM,CAAE,+BAA+B,CACvCC,aAAa,CAAE,sBAAsB,CACrCC,OAAO,CAAE,kCACX,CAAC,CACD,KAAK,CAAE,CACLJ,IAAI,CAAE,gBAAgB,CACtBC,SAAS,CAAE,IAAI,CACfC,MAAM,CAAE,8BAA8B,CACtCC,aAAa,CAAE,6BAA6B,CAC5CE,MAAM,CAAE,2BACV,CAAC,CACD,UAAU,CAAE,CACVL,IAAI,CAAE,iBAAiB,CACvBC,SAAS,CAAE,IAAI,CACfC,MAAM,CAAE,+BAA+B,CACvCC,aAAa,CAAE,8BAA8B,CAC7CE,MAAM,CAAE,4BACV,CAAC,CACD,SAAS,CAAE,CACTL,IAAI,CAAE,gBAAgB,CACtBC,SAAS,CAAE,IAAI,CACfC,MAAM,CAAE,sCAAsC,CAC9CC,aAAa,CAAE,gCAAgC,CAC/CE,MAAM,CAAE,oCACV,CACF,CAAC,CAED;AACAC,GAAG,CAAE,CACHC,QAAQ,CAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,uBAAuB,CAClEC,OAAO,CAAE,KACX,CAAC,CAED;AACAC,EAAE,CAAE,CACFC,gBAAgB,CAAE,IAAI,CAAE;AACxBC,kBAAkB,CAAE,EAAE,CACtBC,eAAe,CAAE,CAAC,CAClBC,kBAAkB,CAAE,CACtB,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAf,SAAS,CAAIgB,OAAO,EAAK,CACpC,MAAO,CAAAxB,MAAM,CAACC,MAAM,CAACI,gBAAgB,CAACoB,QAAQ,CAACD,OAAO,CAAC,CACzD,CAAC,CAED,MAAO,MAAM,CAAAE,cAAc,CAAIF,OAAO,EAAK,CACzC,MAAO,CAAAxB,MAAM,CAACM,QAAQ,CAACkB,OAAO,CAAC,EAAI,CACjCjB,IAAI,qBAAAoB,MAAA,CAAsBH,OAAO,KAAG,CACpChB,SAAS,CAAE,KAAK,CAChBG,OAAO,CAAE,4CACX,CAAC,CACH,CAAC,CAED,MAAO,MAAM,CAAAiB,gBAAgB,CAAIJ,OAAO,EAAK,CAC3C,GAAIxB,MAAM,CAACC,MAAM,CAACC,kBAAkB,CAAE,CACpC,MAAO,CAAAM,SAAS,CAACgB,OAAO,CAAC,CAC3B,CACA,MAAO,KAAI,CACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}