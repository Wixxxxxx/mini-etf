{"ast":null,"code":"// Configuration for CLOB Trading System\nexport const CONFIG = {\n  // Safety Settings\n  SAFETY: {\n    // Force testnet only (recommended for development)\n    FORCE_TESTNET_ONLY: true,\n    // Show safety warnings\n    SHOW_SAFETY_WARNINGS: true,\n    // Block mainnet connections\n    BLOCK_MAINNET: true,\n    // Allowed testnet chain IDs\n    ALLOWED_TESTNETS: ['0x5',\n    // Goerli\n    '0xaa36a7',\n    // Sepolia\n    '0x13881',\n    // Mumbai\n    '0x1a4',\n    // Optimism Goerli\n    '0x66eed' // Arbitrum Goerli\n    ]\n  },\n  // Network Configuration\n  NETWORKS: {\n    '0x1': {\n      name: 'Ethereum Mainnet',\n      isTestnet: false,\n      rpcUrl: 'https://mainnet.infura.io/v3/',\n      blockExplorer: 'https://etherscan.io',\n      warning: '⚠️ MAINNET - REAL FUNDS AT RISK!'\n    },\n    '0x5': {\n      name: 'Goerli Testnet',\n      isTestnet: true,\n      rpcUrl: 'https://goerli.infura.io/v3/',\n      blockExplorer: 'https://goerli.etherscan.io',\n      faucet: 'https://goerlifaucet.com/'\n    },\n    '0xaa36a7': {\n      name: 'Sepolia Testnet',\n      isTestnet: true,\n      rpcUrl: 'https://sepolia.infura.io/v3/',\n      blockExplorer: 'https://sepolia.etherscan.io',\n      faucet: 'https://sepoliafaucet.com/'\n    },\n    '0x13881': {\n      name: 'Mumbai Testnet',\n      isTestnet: true,\n      rpcUrl: 'https://polygon-mumbai.infura.io/v3/',\n      blockExplorer: 'https://mumbai.polygonscan.com',\n      faucet: 'https://faucet.polygon.technology/'\n    }\n  },\n  // API Configuration\n  API: {\n    BASE_URL: process.env.REACT_APP_API_URL || 'http://localhost:3001',\n    TIMEOUT: 10000\n  },\n  // UI Configuration\n  UI: {\n    REFRESH_INTERVAL: 5000,\n    // 5 seconds\n    MAX_ORDERS_DISPLAY: 50,\n    PRICE_PRECISION: 4,\n    QUANTITY_PRECISION: 2\n  }\n};\n\n// Helper functions\nexport const isTestnet = chainId => {\n  return CONFIG.SAFETY.ALLOWED_TESTNETS.includes(chainId);\n};\nexport const getNetworkInfo = chainId => {\n  return CONFIG.NETWORKS[chainId] || {\n    name: `Unknown Network (${chainId})`,\n    isTestnet: false,\n    warning: '⚠️ UNKNOWN NETWORK - PROCEED WITH CAUTION!'\n  };\n};\nexport const isNetworkAllowed = chainId => {\n  if (CONFIG.SAFETY.FORCE_TESTNET_ONLY) {\n    return isTestnet(chainId);\n  }\n  return true;\n};","map":{"version":3,"names":["CONFIG","SAFETY","FORCE_TESTNET_ONLY","SHOW_SAFETY_WARNINGS","BLOCK_MAINNET","ALLOWED_TESTNETS","NETWORKS","name","isTestnet","rpcUrl","blockExplorer","warning","faucet","API","BASE_URL","process","env","REACT_APP_API_URL","TIMEOUT","UI","REFRESH_INTERVAL","MAX_ORDERS_DISPLAY","PRICE_PRECISION","QUANTITY_PRECISION","chainId","includes","getNetworkInfo","isNetworkAllowed"],"sources":["/Users/raymeind/mini-etf/frontend/src/config.js"],"sourcesContent":["// Configuration for CLOB Trading System\nexport const CONFIG = {\n  // Safety Settings\n  SAFETY: {\n    // Force testnet only (recommended for development)\n    FORCE_TESTNET_ONLY: true,\n    \n    // Show safety warnings\n    SHOW_SAFETY_WARNINGS: true,\n    \n    // Block mainnet connections\n    BLOCK_MAINNET: true,\n    \n    // Allowed testnet chain IDs\n    ALLOWED_TESTNETS: [\n      '0x5',      // Goerli\n      '0xaa36a7', // Sepolia\n      '0x13881',  // Mumbai\n      '0x1a4',    // Optimism Goerli\n      '0x66eed'   // Arbitrum Goerli\n    ]\n  },\n  \n  // Network Configuration\n  NETWORKS: {\n    '0x1': {\n      name: 'Ethereum Mainnet',\n      isTestnet: false,\n      rpcUrl: 'https://mainnet.infura.io/v3/',\n      blockExplorer: 'https://etherscan.io',\n      warning: '⚠️ MAINNET - REAL FUNDS AT RISK!'\n    },\n    '0x5': {\n      name: 'Goerli Testnet',\n      isTestnet: true,\n      rpcUrl: 'https://goerli.infura.io/v3/',\n      blockExplorer: 'https://goerli.etherscan.io',\n      faucet: 'https://goerlifaucet.com/'\n    },\n    '0xaa36a7': {\n      name: 'Sepolia Testnet',\n      isTestnet: true,\n      rpcUrl: 'https://sepolia.infura.io/v3/',\n      blockExplorer: 'https://sepolia.etherscan.io',\n      faucet: 'https://sepoliafaucet.com/'\n    },\n    '0x13881': {\n      name: 'Mumbai Testnet',\n      isTestnet: true,\n      rpcUrl: 'https://polygon-mumbai.infura.io/v3/',\n      blockExplorer: 'https://mumbai.polygonscan.com',\n      faucet: 'https://faucet.polygon.technology/'\n    }\n  },\n  \n  // API Configuration\n  API: {\n    BASE_URL: process.env.REACT_APP_API_URL || 'http://localhost:3001',\n    TIMEOUT: 10000\n  },\n  \n  // UI Configuration\n  UI: {\n    REFRESH_INTERVAL: 5000, // 5 seconds\n    MAX_ORDERS_DISPLAY: 50,\n    PRICE_PRECISION: 4,\n    QUANTITY_PRECISION: 2\n  }\n};\n\n// Helper functions\nexport const isTestnet = (chainId) => {\n  return CONFIG.SAFETY.ALLOWED_TESTNETS.includes(chainId);\n};\n\nexport const getNetworkInfo = (chainId) => {\n  return CONFIG.NETWORKS[chainId] || {\n    name: `Unknown Network (${chainId})`,\n    isTestnet: false,\n    warning: '⚠️ UNKNOWN NETWORK - PROCEED WITH CAUTION!'\n  };\n};\n\nexport const isNetworkAllowed = (chainId) => {\n  if (CONFIG.SAFETY.FORCE_TESTNET_ONLY) {\n    return isTestnet(chainId);\n  }\n  return true;\n}; "],"mappings":"AAAA;AACA,OAAO,MAAMA,MAAM,GAAG;EACpB;EACAC,MAAM,EAAE;IACN;IACAC,kBAAkB,EAAE,IAAI;IAExB;IACAC,oBAAoB,EAAE,IAAI;IAE1B;IACAC,aAAa,EAAE,IAAI;IAEnB;IACAC,gBAAgB,EAAE,CAChB,KAAK;IAAO;IACZ,UAAU;IAAE;IACZ,SAAS;IAAG;IACZ,OAAO;IAAK;IACZ,SAAS,CAAG;IAAA;EAEhB,CAAC;EAED;EACAC,QAAQ,EAAE;IACR,KAAK,EAAE;MACLC,IAAI,EAAE,kBAAkB;MACxBC,SAAS,EAAE,KAAK;MAChBC,MAAM,EAAE,+BAA+B;MACvCC,aAAa,EAAE,sBAAsB;MACrCC,OAAO,EAAE;IACX,CAAC;IACD,KAAK,EAAE;MACLJ,IAAI,EAAE,gBAAgB;MACtBC,SAAS,EAAE,IAAI;MACfC,MAAM,EAAE,8BAA8B;MACtCC,aAAa,EAAE,6BAA6B;MAC5CE,MAAM,EAAE;IACV,CAAC;IACD,UAAU,EAAE;MACVL,IAAI,EAAE,iBAAiB;MACvBC,SAAS,EAAE,IAAI;MACfC,MAAM,EAAE,+BAA+B;MACvCC,aAAa,EAAE,8BAA8B;MAC7CE,MAAM,EAAE;IACV,CAAC;IACD,SAAS,EAAE;MACTL,IAAI,EAAE,gBAAgB;MACtBC,SAAS,EAAE,IAAI;MACfC,MAAM,EAAE,sCAAsC;MAC9CC,aAAa,EAAE,gCAAgC;MAC/CE,MAAM,EAAE;IACV;EACF,CAAC;EAED;EACAC,GAAG,EAAE;IACHC,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;IAClEC,OAAO,EAAE;EACX,CAAC;EAED;EACAC,EAAE,EAAE;IACFC,gBAAgB,EAAE,IAAI;IAAE;IACxBC,kBAAkB,EAAE,EAAE;IACtBC,eAAe,EAAE,CAAC;IAClBC,kBAAkB,EAAE;EACtB;AACF,CAAC;;AAED;AACA,OAAO,MAAMf,SAAS,GAAIgB,OAAO,IAAK;EACpC,OAAOxB,MAAM,CAACC,MAAM,CAACI,gBAAgB,CAACoB,QAAQ,CAACD,OAAO,CAAC;AACzD,CAAC;AAED,OAAO,MAAME,cAAc,GAAIF,OAAO,IAAK;EACzC,OAAOxB,MAAM,CAACM,QAAQ,CAACkB,OAAO,CAAC,IAAI;IACjCjB,IAAI,EAAE,oBAAoBiB,OAAO,GAAG;IACpChB,SAAS,EAAE,KAAK;IAChBG,OAAO,EAAE;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMgB,gBAAgB,GAAIH,OAAO,IAAK;EAC3C,IAAIxB,MAAM,CAACC,MAAM,CAACC,kBAAkB,EAAE;IACpC,OAAOM,SAAS,CAACgB,OAAO,CAAC;EAC3B;EACA,OAAO,IAAI;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}