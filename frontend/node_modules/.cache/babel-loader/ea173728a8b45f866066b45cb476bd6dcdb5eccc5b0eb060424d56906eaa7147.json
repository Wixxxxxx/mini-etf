{"ast":null,"code":"import _objectSpread from\"/Users/raymeind/mini-etf/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{ethers}from'ethers';import{CONFIG,isTestnet,getNetworkInfo,isNetworkAllowed}from'./config';import ChainlinkFeeds from'./ChainlinkFeeds';import'./App.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[account,setAccount]=useState('');const[provider,setProvider]=useState(null);const[signer,setSigner]=useState(null);const[isConnected,setIsConnected]=useState(false);const[showWalletOptions,setShowWalletOptions]=useState(false);const[orders,setOrders]=useState([]);const[trades,setTrades]=useState([]);const[activeMarket,setActiveMarket]=useState('YES');// Track active market tab\nconst[availableWallets,setAvailableWallets]=useState([]);const[currentNetwork,setCurrentNetwork]=useState(null);const[orderBookData,setOrderBookData]=useState({bids:[],asks:[]});const[createdMarkets,setCreatedMarkets]=useState([]);// Store created prediction markets\nconst[selectedMarketId,setSelectedMarketId]=useState(null);// Currently selected market\nconst[orderForm,setOrderForm]=useState({market:'YES',side:'Buy',price:'',quantity:'',marketId:null// Will be set to selected prediction market ID\n});const[currentPage,setCurrentPage]=useState('trading');// 'trading' or 'feeds'\n// Detect available wallets on component mount\nuseEffect(()=>{detectAvailableWallets();// Load initial order book data\nif(orderForm.marketId){refreshOrderBook();}// Load created prediction markets from localStorage\nloadCreatedMarkets();},[]);// Load order book data when active market changes\nuseEffect(()=>{if(orderForm.marketId){refreshOrderBook();}},[activeMarket,orderForm.marketId]);// Auto-refresh order book every 3 seconds\nuseEffect(()=>{if(orderForm.marketId){const interval=setInterval(()=>{refreshOrderBook();},3000);return()=>clearInterval(interval);}},[orderForm.marketId]);// Auto-refresh user orders every 5 seconds\nuseEffect(()=>{if(isConnected&&account){const interval=setInterval(()=>{loadUserOrders();},5000);return()=>clearInterval(interval);}},[isConnected,account]);// Debug effect to log state changes\nuseEffect(()=>{console.log('=== CLOB STATE UPDATE ===');console.log('createdMarkets:',createdMarkets);console.log('selectedMarketId:',selectedMarketId);console.log('currentPage:',currentPage);console.log('=======================');},[createdMarkets,selectedMarketId,currentPage]);// Debug effect to monitor order book data changes\nuseEffect(()=>{var _orderBookData$bids,_orderBookData$asks;console.log('=== ORDER BOOK STATE CHANGE ===');console.log('orderBookData:',orderBookData);console.log('bids count:',(_orderBookData$bids=orderBookData.bids)===null||_orderBookData$bids===void 0?void 0:_orderBookData$bids.length);console.log('asks count:',(_orderBookData$asks=orderBookData.asks)===null||_orderBookData$asks===void 0?void 0:_orderBookData$asks.length);console.log('bids data:',orderBookData.bids);console.log('asks data:',orderBookData.asks);console.log('==============================');},[orderBookData]);// Function to load created prediction markets from localStorage\nconst loadCreatedMarkets=()=>{try{const stored=localStorage.getItem('createdMarkets');console.log('Raw localStorage data:',stored);if(stored){const markets=JSON.parse(stored);console.log('Parsed markets:',markets);console.log('Markets array length:',markets.length);setCreatedMarkets(markets);// If we have markets and none selected, select the first one\nif(markets.length>0&&!selectedMarketId){console.log('Setting first market as selected:',markets[0]);setSelectedMarketId(markets[0].id);// Also set the order form market ID\nsetOrderForm(prev=>_objectSpread(_objectSpread({},prev),{},{marketId:markets[0].id.toString()}));}}else{console.log('No markets found in localStorage');setCreatedMarkets([]);}}catch(error){console.error('Error loading created markets:',error);setCreatedMarkets([]);}};// Function to handle market selection\nconst handleMarketSelection=marketId=>{setSelectedMarketId(marketId);const selectedMarket=createdMarkets.find(m=>m.id===marketId);if(selectedMarket){console.log('Selected market:',selectedMarket);// Update order form with the selected market ID\nsetOrderForm(prev=>_objectSpread(_objectSpread({},prev),{},{marketId:marketId.toString()}));console.log('Updated order form:',orderForm);// Refresh order book for the new market\nrefreshOrderBook();}};// Function to get currently selected market\nconst getSelectedMarket=()=>{return createdMarkets.find(m=>m.id===selectedMarketId);};// Function to detect which wallets are available\nconst detectAvailableWallets=()=>{const wallets=[];if(typeof window.ethereum!=='undefined'){if(window.ethereum.isMetaMask){wallets.push({id:'metamask',name:'MetaMask',icon:'🦊',connect:connectMetaMask});}if(window.ethereum.isCoinbaseWallet){wallets.push({id:'coinbase',name:'Coinbase Wallet',icon:'🪙',connect:connectCoinbaseWallet});}if(window.ethereum.isTrust){wallets.push({id:'trust',name:'Trust Wallet',icon:'🛡️',connect:connectInjectedWallet});}if(window.ethereum.isTokenPocket){wallets.push({id:'tokenpocket',name:'TokenPocket',icon:'💼',connect:connectInjectedWallet});}// If no specific wallet is detected but ethereum is available, add generic option\nif(wallets.length===0){wallets.push({id:'generic',name:'Injected Wallet',icon:'💼',connect:connectInjectedWallet});}}setAvailableWallets(wallets);};// Connect to MetaMask\nconst connectMetaMask=async()=>{try{if(typeof window.ethereum!=='undefined'&&window.ethereum.isMetaMask){// Request account access\nconst accounts=await window.ethereum.request({method:'eth_requestAccounts'});// Check if we're on a testnet\nconst chainId=await window.ethereum.request({method:'eth_chainId'});const networkName=getNetworkInfo(chainId).name;setCurrentNetwork({chainId,name:networkName});if(!isTestnet(chainId)){const networkInfo=getNetworkInfo(chainId);alert(\"\\u26A0\\uFE0F SAFETY WARNING: You're connected to \".concat(networkInfo.name,\" (\").concat(chainId,\")!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch to a testnet like Sepolia, Goerli, or Mumbai before trading.\"));return;}if(!isNetworkAllowed(chainId)){alert(\"\\u26A0\\uFE0F NETWORK BLOCKED: \".concat(getNetworkInfo(chainId).name,\" is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.\"));return;}const provider=new ethers.BrowserProvider(window.ethereum);const signer=await provider.getSigner();setAccount(accounts[0]);setProvider(provider);setSigner(signer);setIsConnected(true);setShowWalletOptions(false);console.log(\"\\u2705 Connected to \".concat(networkName,\" testnet safely\"));// Load user orders after connecting\nsetTimeout(()=>{loadUserOrders();},1000);// Listen for network changes\nwindow.ethereum.on('chainChanged',async newChainId=>{const newNetworkInfo=getNetworkInfo(newChainId);setCurrentNetwork({chainId:newChainId,name:newNetworkInfo.name});if(!isTestnet(newChainId)){alert(\"\\u26A0\\uFE0F NETWORK CHANGED: You're now on \".concat(newNetworkInfo.name,\"!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch back to a testnet for safe testing.\"));}if(!isNetworkAllowed(newChainId)){alert(\"\\u26A0\\uFE0F NETWORK BLOCKED: \".concat(newNetworkInfo.name,\" is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.\"));}});}else{alert('MetaMask not found! Please install MetaMask extension.');}}catch(error){console.error('Error connecting to MetaMask:',error);alert('Failed to connect to MetaMask: '+error.message);}};// Connect to Coinbase Wallet\nconst connectCoinbaseWallet=async()=>{try{if(typeof window.ethereum!=='undefined'&&window.ethereum.isCoinbaseWallet){const provider=new ethers.BrowserProvider(window.ethereum);const accounts=await provider.send(\"eth_requestAccounts\",[]);const signer=await provider.getSigner();setProvider(provider);setSigner(signer);setAccount(accounts[0]);setIsConnected(true);setShowWalletOptions(false);}else{alert('Coinbase Wallet is not installed. Please install Coinbase Wallet first!');}}catch(error){console.error('Error connecting to Coinbase Wallet:',error);alert('Failed to connect to Coinbase Wallet');}};// Connect to any injected wallet\nconst connectInjectedWallet=async()=>{try{if(typeof window.ethereum!=='undefined'&&!window.ethereum.isMetaMask&&!window.ethereum.isCoinbaseWallet){// Request account access\nconst accounts=await window.ethereum.request({method:'eth_requestAccounts'});// Check if we're on a testnet\nconst chainId=await window.ethereum.request({method:'eth_chainId'});const networkName=getNetworkInfo(chainId).name;setCurrentNetwork({chainId,name:networkName});if(!isTestnet(chainId)){const networkInfo=getNetworkInfo(chainId);alert(\"\\u26A0\\uFE0F SAFETY WARNING: You're connected to \".concat(networkInfo.name,\" (\").concat(chainId,\")!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch to a testnet like Sepolia, Goerli, or Mumbai before trading.\"));return;}if(!isNetworkAllowed(chainId)){alert(\"\\u26A0\\uFE0F NETWORK BLOCKED: \".concat(getNetworkInfo(chainId).name,\" is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.\"));return;}const provider=new ethers.BrowserProvider(window.ethereum);const signer=await provider.getSigner();setAccount(accounts[0]);setProvider(provider);setSigner(signer);setIsConnected(true);setShowWalletOptions(false);console.log(\"\\u2705 Connected to \".concat(networkName,\" testnet safely\"));// Load user orders after connecting\nsetTimeout(()=>{loadUserOrders();},1000);// Listen for network changes\nwindow.ethereum.on('chainChanged',async newChainId=>{const newNetworkInfo=getNetworkInfo(newChainId);setCurrentNetwork({chainId:newChainId,name:newNetworkInfo.name});if(!isTestnet(newChainId)){alert(\"\\u26A0\\uFE0F NETWORK CHANGED: You're now on \".concat(newNetworkInfo.name,\"!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch back to a testnet for safe testing.\"));}if(!isNetworkAllowed(newChainId)){alert(\"\\u26A0\\uFE0F NETWORK BLOCKED: \".concat(newNetworkInfo.name,\" is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.\"));}});}else{alert('No injected wallet found!');}}catch(error){console.error('Error connecting to injected wallet:',error);alert('Failed to connect to wallet: '+error.message);}};// Disconnect wallet\nconst disconnectWallet=()=>{setAccount(null);setProvider(null);setSigner(null);setIsConnected(false);setShowWalletOptions(false);};// Handle market tab change\nconst handleMarketChange=market=>{setActiveMarket(market);setOrderForm(prev=>_objectSpread(_objectSpread({},prev),{},{market:market}));};// Handle form input changes\nconst handleInputChange=e=>{const{name,value}=e.target;setOrderForm(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));};// Place order\nconst placeOrder=async e=>{e.preventDefault();console.log('=== PLACING ORDER ===');console.log('Order form data:',orderForm);console.log('Selected market ID:',selectedMarketId);console.log('Active market:',activeMarket);console.log('=====================');if(!isConnected){alert('Please connect your wallet first');return;}if(!orderForm.marketId){alert('Please select a prediction market first');return;}if(!orderForm.price||!orderForm.quantity){alert('Please fill in all fields');return;}const price=parseFloat(orderForm.price);const quantity=parseInt(orderForm.quantity);if(price<0||price>1||quantity<=0||!Number.isInteger(quantity)){alert('Invalid price or quantity. Price must be between 0 and 1, quantity must be a positive integer.');return;}try{// Create order object for API\nconst orderData={marketId:orderForm.marketId,market:activeMarket,// Use activeMarket instead of orderForm.market\nside:orderForm.side,price:price,qty:quantity,user:account};// Call the actual CLOB backend API\nconst response=await fetch('http://localhost:3001/api/orders',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(orderData)});const result=await response.json();if(response.ok){// Add to orders list with backend order ID\nconst order={id:result.orderId,user:account,side:orderForm.side,price:price,qty:quantity,timestamp:Math.floor(Date.now()/1000),market:activeMarket,marketId:orderForm.marketId};setOrders(prev=>[...prev,order]);// Handle trades from the backend\nif(result.trades&&result.trades.length>0){setTrades(prev=>[...result.trades,...prev]);// Remove matched orders\nsetOrders(prev=>prev.filter(o=>o.id!==order.id));}// Reset form but keep the current market ID\nsetOrderForm(prev=>_objectSpread(_objectSpread({},prev),{},{price:'',quantity:''}));alert('Order placed successfully!');// Refresh order book data immediately and after a short delay\nrefreshOrderBook();setTimeout(()=>{refreshOrderBook();// Also refresh user orders\nloadUserOrders();},500);// Refresh again after 500ms to ensure backend has processed\n}else{alert(\"Failed to place order: \".concat(result.error||'Unknown error'));}}catch(error){console.error('Error placing order:',error);alert('Failed to place order. Please check your connection.');}};// Cancel order\nconst cancelOrder=async orderId=>{if(!account)return;try{console.log('Cancelling order:',orderId);const response=await fetch(\"http://localhost:3001/api/orders/\".concat(orderId),{method:'DELETE'});if(response.ok){console.log('Order cancelled successfully');// Remove the order from local state immediately\nsetOrders(prev=>prev.filter(o=>o.id!==orderId));// Refresh order book to reflect the cancellation\nrefreshOrderBook();// Also refresh after a short delay to ensure backend has processed\nsetTimeout(()=>{refreshOrderBook();loadUserOrders();// Reload user orders to ensure consistency\n},500);alert('Order cancelled successfully!');}else{const errorData=await response.json();console.error('Failed to cancel order:',errorData);alert(\"Failed to cancel order: \".concat(errorData.error||'Unknown error'));}}catch(error){console.error('Error cancelling order:',error);alert('Error cancelling order. Please try again.');}};// Get order book for a specific market\nconst getOrderBook=market=>{return orders.filter(o=>o.market===market);};// Refresh order book data from backend\nconst refreshOrderBook=async()=>{try{console.log('Refreshing order book for market:',activeMarket);console.log('Using marketId:',orderForm.marketId);console.log('Selected prediction market ID:',selectedMarketId);if(!orderForm.marketId){console.log('No market ID set, skipping order book refresh');return;}const response=await fetch(\"http://localhost:3001/api/markets/\".concat(orderForm.marketId,\"/orderbook?market=\").concat(activeMarket));if(response.ok){var _orderBookData$bids2,_orderBookData$asks2;const orderBookData=await response.json();console.log('Received order book data:',orderBookData);console.log('Raw bids:',orderBookData.bids);console.log('Raw asks:',orderBookData.asks);console.log('Bids type:',typeof orderBookData.bids,'Length:',(_orderBookData$bids2=orderBookData.bids)===null||_orderBookData$bids2===void 0?void 0:_orderBookData$bids2.length);console.log('Asks type:',typeof orderBookData.asks,'Length:',(_orderBookData$asks2=orderBookData.asks)===null||_orderBookData$asks2===void 0?void 0:_orderBookData$asks2.length);const processedData={bids:orderBookData.bids||[],asks:orderBookData.asks||[]};console.log('Processed order book data:',processedData);console.log('Processed bids type:',typeof processedData.bids,'Length:',processedData.bids.length);console.log('Processed asks type:',typeof processedData.asks,'Length:',processedData.asks.length);console.log('Processed bids content:',JSON.stringify(processedData.bids));console.log('Processed asks content:',JSON.stringify(processedData.asks));setOrderBookData(processedData);console.log('Order book state updated');// Verify the state was set correctly\nsetTimeout(()=>{console.log('Order book state after update:',orderBookData);},100);}else{console.error('Failed to fetch order book:',response.status,response.statusText);}}catch(error){console.error('Error refreshing order book:',error);}};// Load user orders from backend\nconst loadUserOrders=async()=>{if(!account)return;try{console.log('Loading user orders for account:',account);const response=await fetch(\"http://localhost:3001/api/users/\".concat(account,\"/orders\"));if(response.ok){const userOrders=await response.json();console.log('Received user orders:',userOrders);setOrders(userOrders||[]);}else{console.error('Failed to fetch user orders:',response.status,response.statusText);}}catch(error){console.error('Error loading user orders:',error);}};// Get best bid and ask for a market\nconst getBestPrices=market=>{const marketOrders=getOrderBook(market);const bids=marketOrders.filter(o=>o.side==='Buy').sort((a,b)=>b.price-a.price);const asks=marketOrders.filter(o=>o.side==='Sell').sort((a,b)=>a.price-b.price);return{bestBid:bids.length>0?bids[0].price:0,bestAsk:asks.length>0?asks[0].price:1};};// Helper functions for network safety\nconst switchToTestnet=async testnetName=>{try{if(!window.ethereum){alert('No wallet detected!');return;}let chainId;switch(testnetName){case'Sepolia':chainId='0xaa36a7';break;case'Goerli':chainId='0x5';break;case'Mumbai':chainId='0x13881';break;default:chainId='0xaa36a7';// Default to Sepolia\n}await window.ethereum.request({method:'wallet_switchEthereumChain',params:[{chainId}]});console.log(\"\\u2705 Switched to \".concat(testnetName,\" testnet\"));}catch(error){console.error('Error switching networks:',error);alert(\"Failed to switch to \".concat(testnetName,\": \").concat(error.message));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"app-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Mini-etf\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Central Limit Order Book for Binary Markets of ETFs\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"safety-banner\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"safety-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"safety-icon\",children:\"\\u26A0\\uFE0F\"}),/*#__PURE__*/_jsx(\"strong\",{children:\"SAFETY WARNING:\"}),\" This is a development/testing system. Only connect wallets with testnet accounts. Never use mainnet wallets with real funds!\",/*#__PURE__*/_jsx(\"span\",{className:\"safety-icon\",children:\"\\u26A0\\uFE0F\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"navigation\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"nav-button \".concat(currentPage==='trading'?'active':''),onClick:()=>setCurrentPage('trading'),children:\"\\uD83D\\uDCCA Trading\"}),/*#__PURE__*/_jsx(\"button\",{className:\"nav-button \".concat(currentPage==='feeds'?'active':''),onClick:()=>setCurrentPage('feeds'),children:\"\\uD83D\\uDD17 Chainlink Feeds\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"wallet-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDD10 Wallet Connection\"}),!isConnected?/*#__PURE__*/_jsxs(\"div\",{className:\"wallet-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"connect-button\",onClick:()=>setShowWalletOptions(!showWalletOptions),children:\"Connect Wallet\"}),showWalletOptions&&/*#__PURE__*/_jsxs(\"div\",{className:\"wallet-options\",children:[availableWallets.map(wallet=>/*#__PURE__*/_jsxs(\"button\",{className:\"wallet-option\",onClick:wallet.connect,children:[/*#__PURE__*/_jsx(\"span\",{className:\"wallet-icon\",children:wallet.icon}),wallet.name]},wallet.name)),availableWallets.length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"no-wallets-message\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"No Web3 wallets detected\"}),/*#__PURE__*/_jsx(\"div\",{className:\"wallet-install-links\",children:/*#__PURE__*/_jsx(\"a\",{href:\"https://metamask.io/\",target:\"_blank\",rel:\"noopener noreferrer\",className:\"wallet-link\",children:\"Install MetaMask\"})})]})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"wallet-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"account-info\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Account:\"}),\" \",account.slice(0,6),\"...\",account.slice(-4)]}),currentNetwork&&/*#__PURE__*/_jsxs(\"div\",{className:\"network-info\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Network:\"}),\" \",currentNetwork.name,!isTestnet(currentNetwork.chainId)&&/*#__PURE__*/_jsx(\"span\",{className:\"warning\",children:\"\\u26A0\\uFE0F MAINNET - UNSAFE!\"}),!isNetworkAllowed(currentNetwork.chainId)&&/*#__PURE__*/_jsx(\"span\",{className:\"warning\",children:\"\\uD83D\\uDEAB NETWORK BLOCKED!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"network-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"testnet-button\",onClick:()=>switchToTestnet('Sepolia'),children:\"Switch to Sepolia\"}),/*#__PURE__*/_jsx(\"button\",{className:\"testnet-button\",onClick:()=>switchToTestnet('Goerli'),children:\"Switch to Goerli\"}),/*#__PURE__*/_jsx(\"button\",{className:\"testnet-button\",onClick:()=>switchToTestnet('Mumbai'),children:\"Switch to Mumbai\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"disconnect-button\",onClick:disconnectWallet,children:\"Disconnect\"})]})]}),currentPage==='trading'?/*#__PURE__*/_jsxs(_Fragment,{children:[createdMarkets.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"prediction-market-selector\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:'15px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83C\\uDFAF Select Prediction Market\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'10px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:loadCreatedMarkets,style:{background:'#007bff',color:'white',border:'none',padding:'8px 16px',borderRadius:'4px',cursor:'pointer',fontSize:'12px'},children:\"\\uD83D\\uDD04 Refresh Markets\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{console.log('=== MANUAL CHECK ===');console.log('localStorage createdMarkets:',localStorage.getItem('createdMarkets'));console.log('State createdMarkets:',createdMarkets);console.log('State selectedMarketId:',selectedMarketId);alert('Check console for market data');},style:{background:'#28a745',color:'white',border:'none',padding:'8px 16px',borderRadius:'4px',cursor:'pointer',fontSize:'12px'},children:\"\\uD83D\\uDD0D Check Data\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#f8f9fa',padding:'10px',borderRadius:'4px',marginBottom:'15px',fontSize:'12px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Debug:\"}),\" \",createdMarkets.length,\" markets loaded | Selected: \",selectedMarketId||'None']}),/*#__PURE__*/_jsx(\"div\",{className:\"market-options\",children:createdMarkets.map(market=>/*#__PURE__*/_jsxs(\"div\",{className:\"market-option \".concat(selectedMarketId===market.id?'selected':''),onClick:()=>handleMarketSelection(market.id),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"market-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"market-symbols\",children:market.symbols.join(', ')}),/*#__PURE__*/_jsx(\"span\",{className:\"market-status\",children:market.isMock?'🔄 Mock':'✅ Live'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"market-details\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"strike-price\",children:[\"Strike: $\",Number(ethers.formatUnits(market.strike,18)).toFixed(4)]}),/*#__PURE__*/_jsxs(\"span\",{className:\"price-band\",children:[\"Band: $\",Number(ethers.formatUnits(market.lower,18)).toFixed(4),\" - $\",Number(ethers.formatUnits(market.upper,18)).toFixed(4)]}),/*#__PURE__*/_jsxs(\"span\",{className:\"settlement\",children:[\"Settle: \",new Date(market.settleTs*1000).toLocaleDateString()]})]})]},market.id))})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"no-markets-message\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83C\\uDFAF No Prediction Markets Available\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Create prediction markets on the Chainlink Feeds page to start trading!\"}),/*#__PURE__*/_jsx(\"button\",{className:\"nav-button\",onClick:()=>setCurrentPage('feeds'),style:{marginTop:'10px'},children:\"\\uD83D\\uDD17 Go to Chainlink Feeds\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"market-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"market-tab \".concat(activeMarket==='YES'?'active':''),onClick:()=>handleMarketChange('YES'),children:\"YES Market\"}),/*#__PURE__*/_jsx(\"button\",{className:\"market-tab \".concat(activeMarket==='NO'?'active':''),onClick:()=>handleMarketChange('NO'),children:\"NO Market\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"trading-section-single\",children:[selectedMarketId&&getSelectedMarket()&&/*#__PURE__*/_jsxs(\"div\",{className:\"selected-market-info\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"\\uD83D\\uDCCA Trading: \",getSelectedMarket().symbols.join(', ')]}),/*#__PURE__*/_jsxs(\"div\",{className:\"market-trading-details\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Strike: $\",Number(ethers.formatUnits(getSelectedMarket().strike,18)).toFixed(4)]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Band: $\",Number(ethers.formatUnits(getSelectedMarket().lower,18)).toFixed(4),\" - $\",Number(ethers.formatUnits(getSelectedMarket().upper,18)).toFixed(4)]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Settle: \",new Date(getSelectedMarket().settleTs*1000).toLocaleDateString()]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"market-card\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[activeMarket,\" Market\"]}),orderForm.marketId&&/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'12px',color:'#666',marginBottom:'10px'},children:[\"Trading on Market ID: \",orderForm.marketId]}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#f0f0f0',padding:'8px',borderRadius:'4px',marginBottom:'15px',fontSize:'11px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Form Debug:\"}),\" marketId=\",orderForm.marketId||'null',\" | side=\",orderForm.side||'null',\" | price=\",orderForm.price||'null',\" | quantity=\",orderForm.quantity||'null']}),/*#__PURE__*/_jsxs(\"form\",{className:\"order-form\",onSubmit:placeOrder,children:[/*#__PURE__*/_jsx(\"input\",{type:\"hidden\",name:\"market\",value:activeMarket}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Side:\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"side\",value:orderForm.side,onChange:handleInputChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"Buy\",children:\"Buy\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Sell\",children:\"Sell\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Price (0.0 - 1.0):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"price\",value:orderForm.price,onChange:handleInputChange,step:\"0.01\",min:\"0\",max:\"1\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Quantity (whole shares):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"quantity\",value:orderForm.quantity,onChange:handleInputChange,step:\"1\",min:\"1\",required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-button\",disabled:!isConnected,children:\"Place Order\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"order-book\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Order Book\"}),/*#__PURE__*/_jsx(\"button\",{onClick:refreshOrderBook,style:{background:'#2196F3',color:'white',border:'none',padding:'8px 16px',borderRadius:'4px',cursor:'pointer',fontSize:'12px'},children:\"\\uD83D\\uDD04 Refresh\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{style:{background:'#f8f9fa',padding:'8px',borderRadius:'4px',marginBottom:'10px',fontSize:'11px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Order Book Debug:\"}),\" Bids: \",orderBookData.bids.length,\" | Asks: \",orderBookData.asks.length]}),/*#__PURE__*/_jsxs(\"div\",{className:\"order-row\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Best Bid: \",/*#__PURE__*/_jsx(\"span\",{className:\"bid\",children:orderBookData.bids.length>0?orderBookData.bids[0].price.toFixed(3):'0.000'})]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Best Ask: \",/*#__PURE__*/_jsx(\"span\",{className:\"ask\",children:orderBookData.asks.length>0?orderBookData.asks[0].price.toFixed(3):'1.000'})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"order-section\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Your Orders\"}),/*#__PURE__*/_jsx(\"button\",{onClick:loadUserOrders,style:{background:'#4CAF50',color:'white',border:'none',padding:'4px 8px',borderRadius:'4px',cursor:'pointer',fontSize:'10px'},children:\"\\uD83D\\uDD04\"})]}),orders.filter(o=>o.market===activeMarket).slice(0,5).map(order=>/*#__PURE__*/_jsxs(\"div\",{className:\"order-row\",children:[/*#__PURE__*/_jsxs(\"span\",{className:order.side==='Buy'?'bid':'ask',children:[order.side,\" \",order.qty,\" @ \",order.price.toFixed(3)]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>cancelOrder(order.id),style:{background:'#f44336',color:'white',border:'none',padding:'4px 8px',borderRadius:'4px',cursor:'pointer'},children:\"Cancel\"})]},order.id)),orders.filter(o=>o.market===activeMarket).length===0&&/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',color:'#888',fontStyle:'italic'},children:\"No orders in this market yet\"})]})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"trades-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Recent Trades\"}),trades.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No trades yet\"}):trades.slice(0,10).map(trade=>/*#__PURE__*/_jsxs(\"div\",{className:\"trade-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:trade.market}),/*#__PURE__*/_jsxs(\"span\",{children:[trade.buyer.slice(0,6),\"...\",trade.buyer.slice(-4),\" \\u2192 \",trade.seller.slice(0,6),\"...\",trade.seller.slice(-4)]}),/*#__PURE__*/_jsxs(\"span\",{children:[trade.qty,\" @ \",trade.price.toFixed(3)]}),/*#__PURE__*/_jsx(\"span\",{children:new Date(trade.timestamp*1000).toLocaleTimeString()})]},trade.id))]})]}):/*#__PURE__*/_jsx(ChainlinkFeeds,{account:account,provider:provider,signer:signer,isConnected:isConnected,currentNetwork:currentNetwork})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","ethers","CONFIG","isTestnet","getNetworkInfo","isNetworkAllowed","ChainlinkFeeds","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","account","setAccount","provider","setProvider","signer","setSigner","isConnected","setIsConnected","showWalletOptions","setShowWalletOptions","orders","setOrders","trades","setTrades","activeMarket","setActiveMarket","availableWallets","setAvailableWallets","currentNetwork","setCurrentNetwork","orderBookData","setOrderBookData","bids","asks","createdMarkets","setCreatedMarkets","selectedMarketId","setSelectedMarketId","orderForm","setOrderForm","market","side","price","quantity","marketId","currentPage","setCurrentPage","detectAvailableWallets","refreshOrderBook","loadCreatedMarkets","interval","setInterval","clearInterval","loadUserOrders","console","log","_orderBookData$bids","_orderBookData$asks","length","stored","localStorage","getItem","markets","JSON","parse","id","prev","_objectSpread","toString","error","handleMarketSelection","selectedMarket","find","m","getSelectedMarket","wallets","window","ethereum","isMetaMask","push","name","icon","connect","connectMetaMask","isCoinbaseWallet","connectCoinbaseWallet","isTrust","connectInjectedWallet","isTokenPocket","accounts","request","method","chainId","networkName","networkInfo","alert","concat","BrowserProvider","getSigner","setTimeout","on","newChainId","newNetworkInfo","message","send","disconnectWallet","handleMarketChange","handleInputChange","e","value","target","placeOrder","preventDefault","parseFloat","parseInt","Number","isInteger","orderData","qty","user","response","fetch","headers","body","stringify","result","json","ok","order","orderId","timestamp","Math","floor","Date","now","filter","o","cancelOrder","errorData","getOrderBook","_orderBookData$bids2","_orderBookData$asks2","processedData","status","statusText","userOrders","getBestPrices","marketOrders","sort","a","b","bestBid","bestAsk","switchToTestnet","testnetName","params","className","children","onClick","map","wallet","href","rel","slice","style","display","justifyContent","alignItems","marginBottom","gap","background","color","border","padding","borderRadius","cursor","fontSize","symbols","join","isMock","formatUnits","strike","toFixed","lower","upper","settleTs","toLocaleDateString","marginTop","onSubmit","type","onChange","step","min","max","required","disabled","textAlign","fontStyle","trade","buyer","seller","toLocaleTimeString"],"sources":["/Users/raymeind/mini-etf/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { CONFIG, isTestnet, getNetworkInfo, isNetworkAllowed } from './config';\nimport ChainlinkFeeds from './ChainlinkFeeds';\nimport './App.css';\n\nfunction App() {\n  const [account, setAccount] = useState('');\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [showWalletOptions, setShowWalletOptions] = useState(false);\n  const [orders, setOrders] = useState([]);\n  const [trades, setTrades] = useState([]);\n  const [activeMarket, setActiveMarket] = useState('YES'); // Track active market tab\n  const [availableWallets, setAvailableWallets] = useState([]);\n  const [currentNetwork, setCurrentNetwork] = useState(null);\n  const [orderBookData, setOrderBookData] = useState({ bids: [], asks: [] });\n  const [createdMarkets, setCreatedMarkets] = useState([]); // Store created prediction markets\n  const [selectedMarketId, setSelectedMarketId] = useState(null); // Currently selected market\n  const [orderForm, setOrderForm] = useState({\n    market: 'YES',\n    side: 'Buy',\n    price: '',\n    quantity: '',\n    marketId: null // Will be set to selected prediction market ID\n  });\n  const [currentPage, setCurrentPage] = useState('trading'); // 'trading' or 'feeds'\n\n  // Detect available wallets on component mount\n  useEffect(() => {\n    detectAvailableWallets();\n    // Load initial order book data\n    if (orderForm.marketId) {\n      refreshOrderBook();\n    }\n    // Load created prediction markets from localStorage\n    loadCreatedMarkets();\n  }, []);\n\n  // Load order book data when active market changes\n  useEffect(() => {\n    if (orderForm.marketId) {\n      refreshOrderBook();\n    }\n  }, [activeMarket, orderForm.marketId]);\n\n  // Auto-refresh order book every 3 seconds\n  useEffect(() => {\n    if (orderForm.marketId) {\n      const interval = setInterval(() => {\n        refreshOrderBook();\n      }, 3000);\n      \n      return () => clearInterval(interval);\n    }\n  }, [orderForm.marketId]);\n\n  // Auto-refresh user orders every 5 seconds\n  useEffect(() => {\n    if (isConnected && account) {\n      const interval = setInterval(() => {\n        loadUserOrders();\n      }, 5000);\n      \n      return () => clearInterval(interval);\n    }\n  }, [isConnected, account]);\n\n  // Debug effect to log state changes\n  useEffect(() => {\n    console.log('=== CLOB STATE UPDATE ===');\n    console.log('createdMarkets:', createdMarkets);\n    console.log('selectedMarketId:', selectedMarketId);\n    console.log('currentPage:', currentPage);\n    console.log('=======================');\n  }, [createdMarkets, selectedMarketId, currentPage]);\n\n  // Debug effect to monitor order book data changes\n  useEffect(() => {\n    console.log('=== ORDER BOOK STATE CHANGE ===');\n    console.log('orderBookData:', orderBookData);\n    console.log('bids count:', orderBookData.bids?.length);\n    console.log('asks count:', orderBookData.asks?.length);\n    console.log('bids data:', orderBookData.bids);\n    console.log('asks data:', orderBookData.asks);\n    console.log('==============================');\n  }, [orderBookData]);\n\n  // Function to load created prediction markets from localStorage\n  const loadCreatedMarkets = () => {\n    try {\n      const stored = localStorage.getItem('createdMarkets');\n      console.log('Raw localStorage data:', stored);\n      \n      if (stored) {\n        const markets = JSON.parse(stored);\n        console.log('Parsed markets:', markets);\n        console.log('Markets array length:', markets.length);\n        \n        setCreatedMarkets(markets);\n        \n        // If we have markets and none selected, select the first one\n        if (markets.length > 0 && !selectedMarketId) {\n          console.log('Setting first market as selected:', markets[0]);\n          setSelectedMarketId(markets[0].id);\n          \n          // Also set the order form market ID\n          setOrderForm(prev => ({\n            ...prev,\n            marketId: markets[0].id.toString()\n          }));\n        }\n      } else {\n        console.log('No markets found in localStorage');\n        setCreatedMarkets([]);\n      }\n    } catch (error) {\n      console.error('Error loading created markets:', error);\n      setCreatedMarkets([]);\n    }\n  };\n\n  // Function to handle market selection\n  const handleMarketSelection = (marketId) => {\n    setSelectedMarketId(marketId);\n    const selectedMarket = createdMarkets.find(m => m.id === marketId);\n    if (selectedMarket) {\n      console.log('Selected market:', selectedMarket);\n      \n      // Update order form with the selected market ID\n      setOrderForm(prev => ({\n        ...prev,\n        marketId: marketId.toString()\n      }));\n      \n      console.log('Updated order form:', orderForm);\n      \n      // Refresh order book for the new market\n      refreshOrderBook();\n    }\n  };\n\n  // Function to get currently selected market\n  const getSelectedMarket = () => {\n    return createdMarkets.find(m => m.id === selectedMarketId);\n  };\n\n  // Function to detect which wallets are available\n  const detectAvailableWallets = () => {\n    const wallets = [];\n    \n    if (typeof window.ethereum !== 'undefined') {\n      if (window.ethereum.isMetaMask) {\n        wallets.push({ id: 'metamask', name: 'MetaMask', icon: '🦊', connect: connectMetaMask });\n      }\n      if (window.ethereum.isCoinbaseWallet) {\n        wallets.push({ id: 'coinbase', name: 'Coinbase Wallet', icon: '🪙', connect: connectCoinbaseWallet });\n      }\n      if (window.ethereum.isTrust) {\n        wallets.push({ id: 'trust', name: 'Trust Wallet', icon: '🛡️', connect: connectInjectedWallet });\n      }\n      if (window.ethereum.isTokenPocket) {\n        wallets.push({ id: 'tokenpocket', name: 'TokenPocket', icon: '💼', connect: connectInjectedWallet });\n      }\n      \n      // If no specific wallet is detected but ethereum is available, add generic option\n      if (wallets.length === 0) {\n        wallets.push({ id: 'generic', name: 'Injected Wallet', icon: '💼', connect: connectInjectedWallet });\n      }\n    }\n    \n    setAvailableWallets(wallets);\n  };\n\n  // Connect to MetaMask\n  const connectMetaMask = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && window.ethereum.isMetaMask) {\n        // Request account access\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        \n        // Check if we're on a testnet\n        const chainId = await window.ethereum.request({ method: 'eth_chainId' });\n        const networkName = getNetworkInfo(chainId).name;\n        setCurrentNetwork({ chainId, name: networkName });\n        \n        if (!isTestnet(chainId)) {\n          const networkInfo = getNetworkInfo(chainId);\n          alert(`⚠️ SAFETY WARNING: You're connected to ${networkInfo.name} (${chainId})!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch to a testnet like Sepolia, Goerli, or Mumbai before trading.`);\n          return;\n        }\n        \n        if (!isNetworkAllowed(chainId)) {\n          alert(`⚠️ NETWORK BLOCKED: ${getNetworkInfo(chainId).name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          return;\n        }\n        \n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        \n        setAccount(accounts[0]);\n        setProvider(provider);\n        setSigner(signer);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n        \n        console.log(`✅ Connected to ${networkName} testnet safely`);\n        \n        // Load user orders after connecting\n        setTimeout(() => {\n          loadUserOrders();\n        }, 1000);\n        \n        // Listen for network changes\n        window.ethereum.on('chainChanged', async (newChainId) => {\n          const newNetworkInfo = getNetworkInfo(newChainId);\n          setCurrentNetwork({ chainId: newChainId, name: newNetworkInfo.name });\n          \n          if (!isTestnet(newChainId)) {\n            alert(`⚠️ NETWORK CHANGED: You're now on ${newNetworkInfo.name}!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch back to a testnet for safe testing.`);\n          }\n          \n          if (!isNetworkAllowed(newChainId)) {\n            alert(`⚠️ NETWORK BLOCKED: ${newNetworkInfo.name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          }\n        });\n      } else {\n        alert('MetaMask not found! Please install MetaMask extension.');\n      }\n    } catch (error) {\n      console.error('Error connecting to MetaMask:', error);\n      alert('Failed to connect to MetaMask: ' + error.message);\n    }\n  };\n\n  // Connect to Coinbase Wallet\n  const connectCoinbaseWallet = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && window.ethereum.isCoinbaseWallet) {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\n        const signer = await provider.getSigner();\n        \n        setProvider(provider);\n        setSigner(signer);\n        setAccount(accounts[0]);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n      } else {\n        alert('Coinbase Wallet is not installed. Please install Coinbase Wallet first!');\n      }\n    } catch (error) {\n      console.error('Error connecting to Coinbase Wallet:', error);\n      alert('Failed to connect to Coinbase Wallet');\n    }\n  };\n\n  // Connect to any injected wallet\n  const connectInjectedWallet = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && !window.ethereum.isMetaMask && !window.ethereum.isCoinbaseWallet) {\n        // Request account access\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        \n        // Check if we're on a testnet\n        const chainId = await window.ethereum.request({ method: 'eth_chainId' });\n        const networkName = getNetworkInfo(chainId).name;\n        setCurrentNetwork({ chainId, name: networkName });\n        \n        if (!isTestnet(chainId)) {\n          const networkInfo = getNetworkInfo(chainId);\n          alert(`⚠️ SAFETY WARNING: You're connected to ${networkInfo.name} (${chainId})!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch to a testnet like Sepolia, Goerli, or Mumbai before trading.`);\n          return;\n        }\n        \n        if (!isNetworkAllowed(chainId)) {\n          alert(`⚠️ NETWORK BLOCKED: ${getNetworkInfo(chainId).name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          return;\n        }\n        \n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        \n        setAccount(accounts[0]);\n        setProvider(provider);\n        setSigner(signer);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n        \n        console.log(`✅ Connected to ${networkName} testnet safely`);\n        \n        // Load user orders after connecting\n        setTimeout(() => {\n          loadUserOrders();\n        }, 1000);\n        \n        // Listen for network changes\n        window.ethereum.on('chainChanged', async (newChainId) => {\n          const newNetworkInfo = getNetworkInfo(newChainId);\n          setCurrentNetwork({ chainId: newChainId, name: newNetworkInfo.name });\n          \n          if (!isTestnet(newChainId)) {\n            alert(`⚠️ NETWORK CHANGED: You're now on ${newNetworkInfo.name}!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch back to a testnet for safe testing.`);\n          }\n          \n          if (!isNetworkAllowed(newChainId)) {\n            alert(`⚠️ NETWORK BLOCKED: ${newNetworkInfo.name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          }\n        });\n      } else {\n        alert('No injected wallet found!');\n      }\n    } catch (error) {\n      console.error('Error connecting to injected wallet:', error);\n      alert('Failed to connect to wallet: ' + error.message);\n    }\n  };\n\n  // Disconnect wallet\n  const disconnectWallet = () => {\n    setAccount(null);\n    setProvider(null);\n    setSigner(null);\n    setIsConnected(false);\n    setShowWalletOptions(false);\n  };\n\n  // Handle market tab change\n  const handleMarketChange = (market) => {\n    setActiveMarket(market);\n    setOrderForm(prev => ({\n      ...prev,\n      market: market\n    }));\n  };\n\n  // Handle form input changes\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setOrderForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Place order\n  const placeOrder = async (e) => {\n    e.preventDefault();\n    \n    console.log('=== PLACING ORDER ===');\n    console.log('Order form data:', orderForm);\n    console.log('Selected market ID:', selectedMarketId);\n    console.log('Active market:', activeMarket);\n    console.log('=====================');\n    \n    if (!isConnected) {\n      alert('Please connect your wallet first');\n      return;\n    }\n\n    if (!orderForm.marketId) {\n      alert('Please select a prediction market first');\n      return;\n    }\n\n    if (!orderForm.price || !orderForm.quantity) {\n      alert('Please fill in all fields');\n      return;\n    }\n\n    const price = parseFloat(orderForm.price);\n    const quantity = parseInt(orderForm.quantity);\n\n    if (price < 0 || price > 1 || quantity <= 0 || !Number.isInteger(quantity)) {\n      alert('Invalid price or quantity. Price must be between 0 and 1, quantity must be a positive integer.');\n      return;\n    }\n\n    try {\n      // Create order object for API\n      const orderData = {\n        marketId: orderForm.marketId,\n        market: activeMarket, // Use activeMarket instead of orderForm.market\n        side: orderForm.side,\n        price: price,\n        qty: quantity,\n        user: account\n      };\n\n      // Call the actual CLOB backend API\n      const response = await fetch('http://localhost:3001/api/orders', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(orderData)\n      });\n\n      const result = await response.json();\n\n      if (response.ok) {\n        // Add to orders list with backend order ID\n        const order = {\n          id: result.orderId,\n          user: account,\n          side: orderForm.side,\n          price: price,\n          qty: quantity,\n          timestamp: Math.floor(Date.now() / 1000),\n          market: activeMarket,\n          marketId: orderForm.marketId\n        };\n\n        setOrders(prev => [...prev, order]);\n\n        // Handle trades from the backend\n        if (result.trades && result.trades.length > 0) {\n          setTrades(prev => [...result.trades, ...prev]);\n          \n          // Remove matched orders\n          setOrders(prev => prev.filter(o => o.id !== order.id));\n        }\n\n        // Reset form but keep the current market ID\n        setOrderForm(prev => ({\n          ...prev,\n          price: '',\n          quantity: ''\n        }));\n\n        alert('Order placed successfully!');\n        \n        // Refresh order book data immediately and after a short delay\n        refreshOrderBook();\n        setTimeout(() => {\n          refreshOrderBook();\n          // Also refresh user orders\n          loadUserOrders();\n        }, 500); // Refresh again after 500ms to ensure backend has processed\n      } else {\n        alert(`Failed to place order: ${result.error || 'Unknown error'}`);\n      }\n    } catch (error) {\n      console.error('Error placing order:', error);\n      alert('Failed to place order. Please check your connection.');\n    }\n  };\n\n  // Cancel order\n  const cancelOrder = async (orderId) => {\n    if (!account) return;\n    \n    try {\n      console.log('Cancelling order:', orderId);\n      const response = await fetch(`http://localhost:3001/api/orders/${orderId}`, {\n        method: 'DELETE'\n      });\n      \n      if (response.ok) {\n        console.log('Order cancelled successfully');\n        // Remove the order from local state immediately\n        setOrders(prev => prev.filter(o => o.id !== orderId));\n        // Refresh order book to reflect the cancellation\n        refreshOrderBook();\n        // Also refresh after a short delay to ensure backend has processed\n        setTimeout(() => {\n          refreshOrderBook();\n          loadUserOrders(); // Reload user orders to ensure consistency\n        }, 500);\n        alert('Order cancelled successfully!');\n      } else {\n        const errorData = await response.json();\n        console.error('Failed to cancel order:', errorData);\n        alert(`Failed to cancel order: ${errorData.error || 'Unknown error'}`);\n      }\n    } catch (error) {\n      console.error('Error cancelling order:', error);\n      alert('Error cancelling order. Please try again.');\n    }\n  };\n\n  // Get order book for a specific market\n  const getOrderBook = (market) => {\n    return orders.filter(o => o.market === market);\n  };\n\n  // Refresh order book data from backend\n  const refreshOrderBook = async () => {\n    try {\n      console.log('Refreshing order book for market:', activeMarket);\n      console.log('Using marketId:', orderForm.marketId);\n      console.log('Selected prediction market ID:', selectedMarketId);\n      \n      if (!orderForm.marketId) {\n        console.log('No market ID set, skipping order book refresh');\n        return;\n      }\n      \n      const response = await fetch(`http://localhost:3001/api/markets/${orderForm.marketId}/orderbook?market=${activeMarket}`);\n      if (response.ok) {\n        const orderBookData = await response.json();\n        console.log('Received order book data:', orderBookData);\n        console.log('Raw bids:', orderBookData.bids);\n        console.log('Raw asks:', orderBookData.asks);\n        console.log('Bids type:', typeof orderBookData.bids, 'Length:', orderBookData.bids?.length);\n        console.log('Asks type:', typeof orderBookData.asks, 'Length:', orderBookData.asks?.length);\n        \n        const processedData = {\n          bids: orderBookData.bids || [],\n          asks: orderBookData.asks || []\n        };\n        \n        console.log('Processed order book data:', processedData);\n        console.log('Processed bids type:', typeof processedData.bids, 'Length:', processedData.bids.length);\n        console.log('Processed asks type:', typeof processedData.asks, 'Length:', processedData.asks.length);\n        console.log('Processed bids content:', JSON.stringify(processedData.bids));\n        console.log('Processed asks content:', JSON.stringify(processedData.asks));\n        \n        setOrderBookData(processedData);\n        console.log('Order book state updated');\n        \n        // Verify the state was set correctly\n        setTimeout(() => {\n          console.log('Order book state after update:', orderBookData);\n        }, 100);\n      } else {\n        console.error('Failed to fetch order book:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('Error refreshing order book:', error);\n    }\n  };\n\n  // Load user orders from backend\n  const loadUserOrders = async () => {\n    if (!account) return;\n    \n    try {\n      console.log('Loading user orders for account:', account);\n      const response = await fetch(`http://localhost:3001/api/users/${account}/orders`);\n      if (response.ok) {\n        const userOrders = await response.json();\n        console.log('Received user orders:', userOrders);\n        setOrders(userOrders || []);\n      } else {\n        console.error('Failed to fetch user orders:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('Error loading user orders:', error);\n    }\n  };\n\n  // Get best bid and ask for a market\n  const getBestPrices = (market) => {\n    const marketOrders = getOrderBook(market);\n    const bids = marketOrders.filter(o => o.side === 'Buy').sort((a, b) => b.price - a.price);\n    const asks = marketOrders.filter(o => o.side === 'Sell').sort((a, b) => a.price - b.price);\n    \n    return {\n      bestBid: bids.length > 0 ? bids[0].price : 0,\n      bestAsk: asks.length > 0 ? asks[0].price : 1\n    };\n  };\n\n  // Helper functions for network safety\n  const switchToTestnet = async (testnetName) => {\n    try {\n      if (!window.ethereum) {\n        alert('No wallet detected!');\n        return;\n      }\n      \n      let chainId;\n      switch (testnetName) {\n        case 'Sepolia':\n          chainId = '0xaa36a7';\n          break;\n        case 'Goerli':\n          chainId = '0x5';\n          break;\n        case 'Mumbai':\n          chainId = '0x13881';\n          break;\n        default:\n          chainId = '0xaa36a7'; // Default to Sepolia\n      }\n      \n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId }],\n      });\n      \n      console.log(`✅ Switched to ${testnetName} testnet`);\n    } catch (error) {\n      console.error('Error switching networks:', error);\n      alert(`Failed to switch to ${testnetName}: ${error.message}`);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h1>Mini-etf</h1>\n        <p>Central Limit Order Book for Binary Markets of ETFs</p>\n      </header>\n      \n      {/* Safety Banner */}\n      <div className=\"safety-banner\">\n        <div className=\"safety-content\">\n          <span className=\"safety-icon\">⚠️</span>\n          <strong>SAFETY WARNING:</strong> This is a development/testing system. \n          Only connect wallets with testnet accounts. Never use mainnet wallets with real funds!\n          <span className=\"safety-icon\">⚠️</span>\n        </div>\n      </div>\n\n      {/* Navigation */}\n      <div className=\"navigation\">\n        <button \n          className={`nav-button ${currentPage === 'trading' ? 'active' : ''}`}\n          onClick={() => setCurrentPage('trading')}\n        >\n          📊 Trading\n        </button>\n        <button \n          className={`nav-button ${currentPage === 'feeds' ? 'active' : ''}`}\n          onClick={() => setCurrentPage('feeds')}\n        >\n          🔗 Chainlink Feeds\n        </button>\n      </div>\n\n      <div className=\"container\">\n        {/* Wallet Section */}\n        <div className=\"wallet-section\">\n          <h2>🔐 Wallet Connection</h2>\n          \n          {!isConnected ? (\n            <div className=\"wallet-controls\">\n              <button \n                className=\"connect-button\"\n                onClick={() => setShowWalletOptions(!showWalletOptions)}\n              >\n                Connect Wallet\n              </button>\n              \n              {showWalletOptions && (\n                <div className=\"wallet-options\">\n                  {availableWallets.map((wallet) => (\n                    <button\n                      key={wallet.name}\n                      className=\"wallet-option\"\n                      onClick={wallet.connect}\n                    >\n                      <span className=\"wallet-icon\">{wallet.icon}</span>\n                      {wallet.name}\n                    </button>\n                  ))}\n                  {availableWallets.length === 0 && (\n                    <div className=\"no-wallets-message\">\n                      <p>No Web3 wallets detected</p>\n                      <div className=\"wallet-install-links\">\n                        <a href=\"https://metamask.io/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"wallet-link\">\n                          Install MetaMask\n                        </a>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"wallet-info\">\n              <div className=\"account-info\">\n                <strong>Account:</strong> {account.slice(0, 6)}...{account.slice(-4)}\n              </div>\n              \n              {currentNetwork && (\n                <div className=\"network-info\">\n                  <strong>Network:</strong> {currentNetwork.name}\n                  {!isTestnet(currentNetwork.chainId) && (\n                    <span className=\"warning\">⚠️ MAINNET - UNSAFE!</span>\n                  )}\n                  {!isNetworkAllowed(currentNetwork.chainId) && (\n                    <span className=\"warning\">🚫 NETWORK BLOCKED!</span>\n                  )}\n                </div>\n              )}\n              \n              <div className=\"network-controls\">\n                <button \n                  className=\"testnet-button\"\n                  onClick={() => switchToTestnet('Sepolia')}\n                >\n                  Switch to Sepolia\n                </button>\n                <button \n                  className=\"testnet-button\"\n                  onClick={() => switchToTestnet('Goerli')}\n                >\n                  Switch to Goerli\n                </button>\n                <button \n                  className=\"testnet-button\"\n                  onClick={() => switchToTestnet('Mumbai')}\n                >\n                  Switch to Mumbai\n                </button>\n              </div>\n              \n              <button className=\"disconnect-button\" onClick={disconnectWallet}>\n                Disconnect\n              </button>\n            </div>\n          )}\n        </div>\n\n        {currentPage === 'trading' ? (\n          <>\n            {/* Prediction Market Selector */}\n            {createdMarkets.length > 0 ? (\n              <div className=\"prediction-market-selector\">\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '15px' }}>\n                  <h3>🎯 Select Prediction Market</h3>\n                  <div style={{ display: 'flex', gap: '10px' }}>\n                    <button \n                      onClick={loadCreatedMarkets}\n                      style={{\n                        background: '#007bff',\n                        color: 'white',\n                        border: 'none',\n                        padding: '8px 16px',\n                        borderRadius: '4px',\n                        cursor: 'pointer',\n                        fontSize: '12px'\n                      }}\n                    >\n                      🔄 Refresh Markets\n                    </button>\n                    <button \n                      onClick={() => {\n                        console.log('=== MANUAL CHECK ===');\n                        console.log('localStorage createdMarkets:', localStorage.getItem('createdMarkets'));\n                        console.log('State createdMarkets:', createdMarkets);\n                        console.log('State selectedMarketId:', selectedMarketId);\n                        alert('Check console for market data');\n                      }}\n                      style={{\n                        background: '#28a745',\n                        color: 'white',\n                        border: 'none',\n                        padding: '8px 16px',\n                        borderRadius: '4px',\n                        cursor: 'pointer',\n                        fontSize: '12px'\n                      }}\n                    >\n                      🔍 Check Data\n                    </button>\n                  </div>\n                </div>\n                \n                {/* Debug Info */}\n                <div style={{ background: '#f8f9fa', padding: '10px', borderRadius: '4px', marginBottom: '15px', fontSize: '12px' }}>\n                  <strong>Debug:</strong> {createdMarkets.length} markets loaded | Selected: {selectedMarketId || 'None'}\n                </div>\n                \n                <div className=\"market-options\">\n                  {createdMarkets.map(market => (\n                    <div \n                      key={market.id} \n                      className={`market-option ${selectedMarketId === market.id ? 'selected' : ''}`}\n                      onClick={() => handleMarketSelection(market.id)}\n                    >\n                      <div className=\"market-header\">\n                        <span className=\"market-symbols\">{market.symbols.join(', ')}</span>\n                        <span className=\"market-status\">{market.isMock ? '🔄 Mock' : '✅ Live'}</span>\n                      </div>\n                      <div className=\"market-details\">\n                        <span className=\"strike-price\">Strike: ${Number(ethers.formatUnits(market.strike, 18)).toFixed(4)}</span>\n                        <span className=\"price-band\">Band: ${Number(ethers.formatUnits(market.lower, 18)).toFixed(4)} - ${Number(ethers.formatUnits(market.upper, 18)).toFixed(4)}</span>\n                        <span className=\"settlement\">Settle: {new Date(market.settleTs * 1000).toLocaleDateString()}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <div className=\"no-markets-message\">\n                <h3>🎯 No Prediction Markets Available</h3>\n                <p>Create prediction markets on the Chainlink Feeds page to start trading!</p>\n                <button \n                  className=\"nav-button\"\n                  onClick={() => setCurrentPage('feeds')}\n                  style={{ marginTop: '10px' }}\n                >\n                  🔗 Go to Chainlink Feeds\n                </button>\n              </div>\n            )}\n\n            {/* Market Selection Tabs */}\n            <div className=\"market-tabs\">\n              <button \n                className={`market-tab ${activeMarket === 'YES' ? 'active' : ''}`}\n                onClick={() => handleMarketChange('YES')}\n              >\n                YES Market\n              </button>\n              <button \n                className={`market-tab ${activeMarket === 'NO' ? 'active' : ''}`}\n                onClick={() => handleMarketChange('NO')}\n              >\n                NO Market\n              </button>\n            </div>\n\n            {/* Trading Section - Single Market */}\n            <div className=\"trading-section-single\">\n              {/* Selected Market Info */}\n              {selectedMarketId && getSelectedMarket() && (\n                <div className=\"selected-market-info\">\n                  <h4>📊 Trading: {getSelectedMarket().symbols.join(', ')}</h4>\n                  <div className=\"market-trading-details\">\n                    <span>Strike: ${Number(ethers.formatUnits(getSelectedMarket().strike, 18)).toFixed(4)}</span>\n                    <span>Band: ${Number(ethers.formatUnits(getSelectedMarket().lower, 18)).toFixed(4)} - ${Number(ethers.formatUnits(getSelectedMarket().upper, 18)).toFixed(4)}</span>\n                    <span>Settle: {new Date(getSelectedMarket().settleTs * 1000).toLocaleDateString()}</span>\n                  </div>\n                </div>\n              )}\n              \n              <div className=\"market-card\">\n                <h3>{activeMarket} Market</h3>\n                {orderForm.marketId && (\n                  <div style={{ fontSize: '12px', color: '#666', marginBottom: '10px' }}>\n                    Trading on Market ID: {orderForm.marketId}\n                  </div>\n                )}\n                \n                {/* Debug: Show current order form state */}\n                <div style={{ background: '#f0f0f0', padding: '8px', borderRadius: '4px', marginBottom: '15px', fontSize: '11px' }}>\n                  <strong>Form Debug:</strong> marketId={orderForm.marketId || 'null'} | \n                  side={orderForm.side || 'null'} | \n                  price={orderForm.price || 'null'} | \n                  quantity={orderForm.quantity || 'null'}\n                </div>\n                <form className=\"order-form\" onSubmit={placeOrder}>\n                  <input type=\"hidden\" name=\"market\" value={activeMarket} />\n                  \n                  <div className=\"form-group\">\n                    <label>Side:</label>\n                    <select name=\"side\" value={orderForm.side} onChange={handleInputChange}>\n                      <option value=\"Buy\">Buy</option>\n                      <option value=\"Sell\">Sell</option>\n                    </select>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label>Price (0.0 - 1.0):</label>\n                    <input\n                      type=\"number\"\n                      name=\"price\"\n                      value={orderForm.price}\n                      onChange={handleInputChange}\n                      step=\"0.01\"\n                      min=\"0\"\n                      max=\"1\"\n                      required\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label>Quantity (whole shares):</label>\n                    <input\n                      type=\"number\"\n                      name=\"quantity\"\n                      value={orderForm.quantity}\n                      onChange={handleInputChange}\n                      step=\"1\"\n                      min=\"1\"\n                      required\n                    />\n                  </div>\n\n                  <button type=\"submit\" className=\"submit-button\" disabled={!isConnected}>\n                    Place Order\n                  </button>\n                </form>\n\n                {/* Order Book for Active Market */}\n                <div className=\"order-book\">\n                  <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\n                    <h4>Order Book</h4>\n                    <button \n                      onClick={refreshOrderBook}\n                      style={{\n                        background: '#2196F3', \n                        color: 'white', \n                        border: 'none', \n                        padding: '8px 16px', \n                        borderRadius: '4px', \n                        cursor: 'pointer',\n                        fontSize: '12px'\n                      }}\n                    >\n                      🔄 Refresh\n                    </button>\n                  </div>\n                  <div>\n                    {/* Debug: Show raw order book data */}\n                    <div style={{ background: '#f8f9fa', padding: '8px', borderRadius: '4px', marginBottom: '10px', fontSize: '11px' }}>\n                      <strong>Order Book Debug:</strong> Bids: {orderBookData.bids.length} | Asks: {orderBookData.asks.length}\n                    </div>\n                    \n                    <div className=\"order-row\">\n                      <span>Best Bid: <span className=\"bid\">\n                        {orderBookData.bids.length > 0 ? orderBookData.bids[0].price.toFixed(3) : '0.000'}\n                      </span></span>\n                      <span>Best Ask: <span className=\"ask\">\n                        {orderBookData.asks.length > 0 ? orderBookData.asks[0].price.toFixed(3) : '1.000'}\n                      </span></span>\n                    </div>\n                    \n\n                    {/* User's Orders */}\n                    <div className=\"order-section\">\n                      <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\n                        <h5>Your Orders</h5>\n                        <button \n                          onClick={loadUserOrders}\n                          style={{\n                            background: '#4CAF50', \n                            color: 'white', \n                            border: 'none', \n                            padding: '4px 8px', \n                            borderRadius: '4px', \n                            cursor: 'pointer',\n                            fontSize: '10px'\n                          }}\n                        >\n                          🔄\n                        </button>\n                      </div>\n                      {orders.filter(o => o.market === activeMarket).slice(0, 5).map(order => (\n                        <div key={order.id} className=\"order-row\">\n                          <span className={order.side === 'Buy' ? 'bid' : 'ask'}>\n                            {order.side} {order.qty} @ {order.price.toFixed(3)}\n                          </span>\n                          <button \n                            onClick={() => cancelOrder(order.id)}\n                            style={{background: '#f44336', color: 'white', border: 'none', padding: '4px 8px', borderRadius: '4px', cursor: 'pointer'}}\n                          >\n                            Cancel\n                          </button>\n                        </div>\n                      ))}\n                      {orders.filter(o => o.market === activeMarket).length === 0 && (\n                        <p style={{textAlign: 'center', color: '#888', fontStyle: 'italic'}}>\n                          No orders in this market yet\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Recent Trades */}\n            <div className=\"trades-section\">\n              <h3>Recent Trades</h3>\n              {trades.length === 0 ? (\n                <p>No trades yet</p>\n              ) : (\n                trades.slice(0, 10).map(trade => (\n                  <div key={trade.id} className=\"trade-row\">\n                    <span>{trade.market}</span>\n                    <span>{trade.buyer.slice(0, 6)}...{trade.buyer.slice(-4)} → {trade.seller.slice(0, 6)}...{trade.seller.slice(-4)}</span>\n                    <span>{trade.qty} @ {trade.price.toFixed(3)}</span>\n                    <span>{new Date(trade.timestamp * 1000).toLocaleTimeString()}</span>\n                  </div>\n                ))\n              )}\n            </div>\n          </>\n        ) : (\n          <ChainlinkFeeds\n            account={account}\n            provider={provider}\n            signer={signer}\n            isConnected={isConnected}\n            currentNetwork={currentNetwork}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}