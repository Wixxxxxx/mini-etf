{"ast":null,"code":"var _jsxFileName = \"/Users/raymeind/mini-etf/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { CONFIG, isTestnet, getNetworkInfo, isNetworkAllowed } from './config';\nimport ChainlinkFeeds from './ChainlinkFeeds';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [showWalletOptions, setShowWalletOptions] = useState(false);\n  const [orders, setOrders] = useState([]);\n  const [trades, setTrades] = useState([]);\n  const [activeMarket, setActiveMarket] = useState('YES'); // Track active market tab\n  const [availableWallets, setAvailableWallets] = useState([]);\n  const [currentNetwork, setCurrentNetwork] = useState(null);\n  const [orderBookData, setOrderBookData] = useState({\n    bids: [],\n    asks: []\n  });\n  const [createdMarkets, setCreatedMarkets] = useState([]); // Store created prediction markets\n  const [selectedMarketId, setSelectedMarketId] = useState(null); // Currently selected market\n  const [orderForm, setOrderForm] = useState({\n    market: 'YES',\n    side: 'Buy',\n    price: '',\n    quantity: '',\n    marketId: 'default_market'\n  });\n  const [currentPage, setCurrentPage] = useState('trading'); // 'trading' or 'feeds'\n\n  // Detect available wallets on component mount\n  useEffect(() => {\n    detectAvailableWallets();\n    // Load initial order book data\n    if (orderForm.marketId) {\n      refreshOrderBook();\n    }\n  }, []);\n\n  // Load order book data when active market changes\n  useEffect(() => {\n    if (orderForm.marketId) {\n      refreshOrderBook();\n    }\n  }, [activeMarket, orderForm.marketId]);\n\n  // Auto-refresh order book every 3 seconds\n  useEffect(() => {\n    if (orderForm.marketId) {\n      const interval = setInterval(() => {\n        refreshOrderBook();\n      }, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [orderForm.marketId]);\n\n  // Auto-refresh user orders every 5 seconds\n  useEffect(() => {\n    if (isConnected && account) {\n      const interval = setInterval(() => {\n        loadUserOrders();\n      }, 5000);\n      return () => clearInterval(interval);\n    }\n  }, [isConnected, account]);\n\n  // Function to detect which wallets are available\n  const detectAvailableWallets = () => {\n    const wallets = [];\n    if (typeof window.ethereum !== 'undefined') {\n      if (window.ethereum.isMetaMask) {\n        wallets.push({\n          id: 'metamask',\n          name: 'MetaMask',\n          icon: 'ü¶ä',\n          connect: connectMetaMask\n        });\n      }\n      if (window.ethereum.isCoinbaseWallet) {\n        wallets.push({\n          id: 'coinbase',\n          name: 'Coinbase Wallet',\n          icon: 'ü™ô',\n          connect: connectCoinbaseWallet\n        });\n      }\n      if (window.ethereum.isTrust) {\n        wallets.push({\n          id: 'trust',\n          name: 'Trust Wallet',\n          icon: 'üõ°Ô∏è',\n          connect: connectInjectedWallet\n        });\n      }\n      if (window.ethereum.isTokenPocket) {\n        wallets.push({\n          id: 'tokenpocket',\n          name: 'TokenPocket',\n          icon: 'üíº',\n          connect: connectInjectedWallet\n        });\n      }\n\n      // If no specific wallet is detected but ethereum is available, add generic option\n      if (wallets.length === 0) {\n        wallets.push({\n          id: 'generic',\n          name: 'Injected Wallet',\n          icon: 'üíº',\n          connect: connectInjectedWallet\n        });\n      }\n    }\n    setAvailableWallets(wallets);\n  };\n\n  // Connect to MetaMask\n  const connectMetaMask = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && window.ethereum.isMetaMask) {\n        // Request account access\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n\n        // Check if we're on a testnet\n        const chainId = await window.ethereum.request({\n          method: 'eth_chainId'\n        });\n        const networkName = getNetworkInfo(chainId).name;\n        setCurrentNetwork({\n          chainId,\n          name: networkName\n        });\n        if (!isTestnet(chainId)) {\n          const networkInfo = getNetworkInfo(chainId);\n          alert(`‚ö†Ô∏è SAFETY WARNING: You're connected to ${networkInfo.name} (${chainId})!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch to a testnet like Sepolia, Goerli, or Mumbai before trading.`);\n          return;\n        }\n        if (!isNetworkAllowed(chainId)) {\n          alert(`‚ö†Ô∏è NETWORK BLOCKED: ${getNetworkInfo(chainId).name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          return;\n        }\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        setAccount(accounts[0]);\n        setProvider(provider);\n        setSigner(signer);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n        console.log(`‚úÖ Connected to ${networkName} testnet safely`);\n\n        // Load user orders after connecting\n        setTimeout(() => {\n          loadUserOrders();\n        }, 1000);\n\n        // Listen for network changes\n        window.ethereum.on('chainChanged', async newChainId => {\n          const newNetworkInfo = getNetworkInfo(newChainId);\n          setCurrentNetwork({\n            chainId: newChainId,\n            name: newNetworkInfo.name\n          });\n          if (!isTestnet(newChainId)) {\n            alert(`‚ö†Ô∏è NETWORK CHANGED: You're now on ${newNetworkInfo.name}!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch back to a testnet for safe testing.`);\n          }\n          if (!isNetworkAllowed(newChainId)) {\n            alert(`‚ö†Ô∏è NETWORK BLOCKED: ${newNetworkInfo.name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          }\n        });\n      } else {\n        alert('MetaMask not found! Please install MetaMask extension.');\n      }\n    } catch (error) {\n      console.error('Error connecting to MetaMask:', error);\n      alert('Failed to connect to MetaMask: ' + error.message);\n    }\n  };\n\n  // Connect to Coinbase Wallet\n  const connectCoinbaseWallet = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && window.ethereum.isCoinbaseWallet) {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\n        const signer = await provider.getSigner();\n        setProvider(provider);\n        setSigner(signer);\n        setAccount(accounts[0]);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n      } else {\n        alert('Coinbase Wallet is not installed. Please install Coinbase Wallet first!');\n      }\n    } catch (error) {\n      console.error('Error connecting to Coinbase Wallet:', error);\n      alert('Failed to connect to Coinbase Wallet');\n    }\n  };\n\n  // Connect to any injected wallet\n  const connectInjectedWallet = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && !window.ethereum.isMetaMask && !window.ethereum.isCoinbaseWallet) {\n        // Request account access\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n\n        // Check if we're on a testnet\n        const chainId = await window.ethereum.request({\n          method: 'eth_chainId'\n        });\n        const networkName = getNetworkInfo(chainId).name;\n        setCurrentNetwork({\n          chainId,\n          name: networkName\n        });\n        if (!isTestnet(chainId)) {\n          const networkInfo = getNetworkInfo(chainId);\n          alert(`‚ö†Ô∏è SAFETY WARNING: You're connected to ${networkInfo.name} (${chainId})!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch to a testnet like Sepolia, Goerli, or Mumbai before trading.`);\n          return;\n        }\n        if (!isNetworkAllowed(chainId)) {\n          alert(`‚ö†Ô∏è NETWORK BLOCKED: ${getNetworkInfo(chainId).name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          return;\n        }\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        setAccount(accounts[0]);\n        setProvider(provider);\n        setSigner(signer);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n        console.log(`‚úÖ Connected to ${networkName} testnet safely`);\n\n        // Load user orders after connecting\n        setTimeout(() => {\n          loadUserOrders();\n        }, 1000);\n\n        // Listen for network changes\n        window.ethereum.on('chainChanged', async newChainId => {\n          const newNetworkInfo = getNetworkInfo(newChainId);\n          setCurrentNetwork({\n            chainId: newChainId,\n            name: newNetworkInfo.name\n          });\n          if (!isTestnet(newChainId)) {\n            alert(`‚ö†Ô∏è NETWORK CHANGED: You're now on ${newNetworkInfo.name}!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch back to a testnet for safe testing.`);\n          }\n          if (!isNetworkAllowed(newChainId)) {\n            alert(`‚ö†Ô∏è NETWORK BLOCKED: ${newNetworkInfo.name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          }\n        });\n      } else {\n        alert('No injected wallet found!');\n      }\n    } catch (error) {\n      console.error('Error connecting to injected wallet:', error);\n      alert('Failed to connect to wallet: ' + error.message);\n    }\n  };\n\n  // Disconnect wallet\n  const disconnectWallet = () => {\n    setAccount(null);\n    setProvider(null);\n    setSigner(null);\n    setIsConnected(false);\n    setShowWalletOptions(false);\n  };\n\n  // Handle market tab change\n  const handleMarketChange = market => {\n    setActiveMarket(market);\n    setOrderForm(prev => ({\n      ...prev,\n      market: market\n    }));\n  };\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setOrderForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Place order\n  const placeOrder = async e => {\n    e.preventDefault();\n    if (!isConnected) {\n      alert('Please connect your wallet first');\n      return;\n    }\n    if (!orderForm.price || !orderForm.quantity) {\n      alert('Please fill in all fields');\n      return;\n    }\n    const price = parseFloat(orderForm.price);\n    const quantity = parseInt(orderForm.quantity);\n    if (price < 0 || price > 1 || quantity <= 0 || !Number.isInteger(quantity)) {\n      alert('Invalid price or quantity. Price must be between 0 and 1, quantity must be a positive integer.');\n      return;\n    }\n    try {\n      // Create order object for API\n      const orderData = {\n        marketId: orderForm.marketId,\n        market: activeMarket,\n        // Use activeMarket instead of orderForm.market\n        side: orderForm.side,\n        price: price,\n        qty: quantity,\n        user: account\n      };\n\n      // Call the actual CLOB backend API\n      const response = await fetch('http://localhost:3001/api/orders', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(orderData)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        // Add to orders list with backend order ID\n        const order = {\n          id: result.orderId,\n          user: account,\n          side: orderForm.side,\n          price: price,\n          qty: quantity,\n          timestamp: Math.floor(Date.now() / 1000),\n          market: activeMarket,\n          marketId: orderForm.marketId\n        };\n        setOrders(prev => [...prev, order]);\n\n        // Handle trades from the backend\n        if (result.trades && result.trades.length > 0) {\n          setTrades(prev => [...result.trades, ...prev]);\n\n          // Remove matched orders\n          setOrders(prev => prev.filter(o => o.id !== order.id));\n        }\n\n        // Reset form\n        setOrderForm({\n          market: activeMarket,\n          side: 'Buy',\n          price: '',\n          quantity: '',\n          marketId: 'default_market'\n        });\n        alert('Order placed successfully!');\n\n        // Refresh order book data immediately and after a short delay\n        refreshOrderBook();\n        setTimeout(() => {\n          refreshOrderBook();\n          // Also refresh user orders\n          loadUserOrders();\n        }, 500); // Refresh again after 500ms to ensure backend has processed\n      } else {\n        alert(`Failed to place order: ${result.error || 'Unknown error'}`);\n      }\n    } catch (error) {\n      console.error('Error placing order:', error);\n      alert('Failed to place order. Please check your connection.');\n    }\n  };\n\n  // Cancel order\n  const cancelOrder = async orderId => {\n    if (!account) return;\n    try {\n      console.log('Cancelling order:', orderId);\n      const response = await fetch(`http://localhost:3001/api/orders/${orderId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        console.log('Order cancelled successfully');\n        // Remove the order from local state immediately\n        setOrders(prev => prev.filter(o => o.id !== orderId));\n        // Refresh order book to reflect the cancellation\n        refreshOrderBook();\n        // Also refresh after a short delay to ensure backend has processed\n        setTimeout(() => {\n          refreshOrderBook();\n          loadUserOrders(); // Reload user orders to ensure consistency\n        }, 500);\n        alert('Order cancelled successfully!');\n      } else {\n        const errorData = await response.json();\n        console.error('Failed to cancel order:', errorData);\n        alert(`Failed to cancel order: ${errorData.error || 'Unknown error'}`);\n      }\n    } catch (error) {\n      console.error('Error cancelling order:', error);\n      alert('Error cancelling order. Please try again.');\n    }\n  };\n\n  // Get order book for a specific market\n  const getOrderBook = market => {\n    return orders.filter(o => o.market === market);\n  };\n\n  // Refresh order book data from backend\n  const refreshOrderBook = async () => {\n    try {\n      console.log('Refreshing order book for market:', activeMarket);\n      const response = await fetch(`http://localhost:3001/api/markets/${orderForm.marketId}/orderbook?market=${activeMarket}`);\n      if (response.ok) {\n        const orderBookData = await response.json();\n        console.log('Received order book data:', orderBookData);\n        setOrderBookData({\n          bids: orderBookData.bids || [],\n          asks: orderBookData.asks || []\n        });\n        console.log('Order book state updated');\n      } else {\n        console.error('Failed to fetch order book:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('Error refreshing order book:', error);\n    }\n  };\n\n  // Load user orders from backend\n  const loadUserOrders = async () => {\n    if (!account) return;\n    try {\n      console.log('Loading user orders for account:', account);\n      const response = await fetch(`http://localhost:3001/api/users/${account}/orders`);\n      if (response.ok) {\n        const userOrders = await response.json();\n        console.log('Received user orders:', userOrders);\n        setOrders(userOrders || []);\n      } else {\n        console.error('Failed to fetch user orders:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('Error loading user orders:', error);\n    }\n  };\n\n  // Get best bid and ask for a market\n  const getBestPrices = market => {\n    const marketOrders = getOrderBook(market);\n    const bids = marketOrders.filter(o => o.side === 'Buy').sort((a, b) => b.price - a.price);\n    const asks = marketOrders.filter(o => o.side === 'Sell').sort((a, b) => a.price - b.price);\n    return {\n      bestBid: bids.length > 0 ? bids[0].price : 0,\n      bestAsk: asks.length > 0 ? asks[0].price : 1\n    };\n  };\n\n  // Helper functions for network safety\n  const switchToTestnet = async testnetName => {\n    try {\n      if (!window.ethereum) {\n        alert('No wallet detected!');\n        return;\n      }\n      let chainId;\n      switch (testnetName) {\n        case 'Sepolia':\n          chainId = '0xaa36a7';\n          break;\n        case 'Goerli':\n          chainId = '0x5';\n          break;\n        case 'Mumbai':\n          chainId = '0x13881';\n          break;\n        default:\n          chainId = '0xaa36a7';\n        // Default to Sepolia\n      }\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{\n          chainId\n        }]\n      });\n      console.log(`‚úÖ Switched to ${testnetName} testnet`);\n    } catch (error) {\n      console.error('Error switching networks:', error);\n      alert(`Failed to switch to ${testnetName}: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mini-etf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Central Limit Order Book for Binary Markets of ETFs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"safety-banner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"safety-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"safety-icon\",\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"SAFETY WARNING:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this), \" This is a development/testing system. Only connect wallets with testnet accounts. Never use mainnet wallets with real funds!\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"safety-icon\",\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `nav-button ${currentPage === 'trading' ? 'active' : ''}`,\n        onClick: () => setCurrentPage('trading'),\n        children: \"\\uD83D\\uDCCA Trading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `nav-button ${currentPage === 'feeds' ? 'active' : ''}`,\n        onClick: () => setCurrentPage('feeds'),\n        children: \"\\uD83D\\uDD17 Chainlink Feeds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDD10 Wallet Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this), !isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"connect-button\",\n            onClick: () => setShowWalletOptions(!showWalletOptions),\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this), showWalletOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wallet-options\",\n            children: [availableWallets.map(wallet => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"wallet-option\",\n              onClick: wallet.connect,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"wallet-icon\",\n                children: wallet.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 23\n              }, this), wallet.name]\n            }, wallet.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 21\n            }, this)), availableWallets.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-wallets-message\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No Web3 wallets detected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wallet-install-links\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"https://metamask.io/\",\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  className: \"wallet-link\",\n                  children: \"Install MetaMask\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Account:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 17\n            }, this), \" \", account.slice(0, 6), \"...\", account.slice(-4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 15\n          }, this), currentNetwork && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"network-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Network:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 19\n            }, this), \" \", currentNetwork.name, !isTestnet(currentNetwork.chainId) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"warning\",\n              children: \"\\u26A0\\uFE0F MAINNET - UNSAFE!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 21\n            }, this), !isNetworkAllowed(currentNetwork.chainId) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"warning\",\n              children: \"\\uD83D\\uDEAB NETWORK BLOCKED!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"network-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"testnet-button\",\n              onClick: () => switchToTestnet('Sepolia'),\n              children: \"Switch to Sepolia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"testnet-button\",\n              onClick: () => switchToTestnet('Goerli'),\n              children: \"Switch to Goerli\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"testnet-button\",\n              onClick: () => switchToTestnet('Mumbai'),\n              children: \"Switch to Mumbai\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"disconnect-button\",\n            onClick: disconnectWallet,\n            children: \"Disconnect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 9\n      }, this), currentPage === 'trading' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"market-tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `market-tab ${activeMarket === 'YES' ? 'active' : ''}`,\n            onClick: () => handleMarketChange('YES'),\n            children: \"YES Market\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `market-tab ${activeMarket === 'NO' ? 'active' : ''}`,\n            onClick: () => handleMarketChange('NO'),\n            children: \"NO Market\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trading-section-single\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"market-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [activeMarket, \" Market\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"order-form\",\n              onSubmit: placeOrder,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"hidden\",\n                name: \"market\",\n                value: activeMarket\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Side:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 629,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"side\",\n                  value: orderForm.side,\n                  onChange: handleInputChange,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Buy\",\n                    children: \"Buy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 631,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Sell\",\n                    children: \"Sell\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 632,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Price (0.0 - 1.0):\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"price\",\n                  value: orderForm.price,\n                  onChange: handleInputChange,\n                  step: \"0.01\",\n                  min: \"0\",\n                  max: \"1\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 636,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Quantity (whole shares):\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 651,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"quantity\",\n                  value: orderForm.quantity,\n                  onChange: handleInputChange,\n                  step: \"1\",\n                  min: \"1\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 652,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"submit-button\",\n                disabled: !isConnected,\n                children: \"Place Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order-book\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Order Book\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 671,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: refreshOrderBook,\n                  style: {\n                    background: '#2196F3',\n                    color: 'white',\n                    border: 'none',\n                    padding: '8px 16px',\n                    borderRadius: '4px',\n                    cursor: 'pointer',\n                    fontSize: '12px'\n                  },\n                  children: \"\\uD83D\\uDD04 Refresh\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 672,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"order-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Best Bid: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"bid\",\n                      children: orderBookData.bids.length > 0 ? orderBookData.bids[0].price.toFixed(3) : '0.000'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 689,\n                      columnNumber: 39\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 689,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Best Ask: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"ask\",\n                      children: orderBookData.asks.length > 0 ? orderBookData.asks[0].price.toFixed(3) : '1.000'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 692,\n                      columnNumber: 39\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 692,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 688,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"order-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                      alignItems: 'center'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      children: \"Your Orders\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 701,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: loadUserOrders,\n                      style: {\n                        background: '#4CAF50',\n                        color: 'white',\n                        border: 'none',\n                        padding: '4px 8px',\n                        borderRadius: '4px',\n                        cursor: 'pointer',\n                        fontSize: '10px'\n                      },\n                      children: \"\\uD83D\\uDD04\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 702,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 700,\n                    columnNumber: 23\n                  }, this), orders.filter(o => o.market === activeMarket).slice(0, 5).map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"order-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: order.side === 'Buy' ? 'bid' : 'ask',\n                      children: [order.side, \" \", order.qty, \" @ \", order.price.toFixed(3)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 719,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => cancelOrder(order.id),\n                      style: {\n                        background: '#f44336',\n                        color: 'white',\n                        border: 'none',\n                        padding: '4px 8px',\n                        borderRadius: '4px',\n                        cursor: 'pointer'\n                      },\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 722,\n                      columnNumber: 27\n                    }, this)]\n                  }, order.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 718,\n                    columnNumber: 25\n                  }, this)), orders.filter(o => o.market === activeMarket).length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      textAlign: 'center',\n                      color: '#888',\n                      fontStyle: 'italic'\n                    },\n                    children: \"No orders in this market yet\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 731,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 699,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trades-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Recent Trades\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 15\n          }, this), trades.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No trades yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 17\n          }, this) : trades.slice(0, 10).map(trade => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trade-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: trade.market\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [trade.buyer.slice(0, 6), \"...\", trade.buyer.slice(-4), \" \\u2192 \", trade.seller.slice(0, 6), \"...\", trade.seller.slice(-4)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 750,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [trade.qty, \" @ \", trade.price.toFixed(3)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: new Date(trade.timestamp * 1000).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 21\n            }, this)]\n          }, trade.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(ChainlinkFeeds, {\n        account: account,\n        provider: provider,\n        signer: signer,\n        isConnected: isConnected,\n        currentNetwork: currentNetwork\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 486,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Z1TZ0vdWtH4bRMOm+zHjpBPtsMU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","CONFIG","isTestnet","getNetworkInfo","isNetworkAllowed","ChainlinkFeeds","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","account","setAccount","provider","setProvider","signer","setSigner","isConnected","setIsConnected","showWalletOptions","setShowWalletOptions","orders","setOrders","trades","setTrades","activeMarket","setActiveMarket","availableWallets","setAvailableWallets","currentNetwork","setCurrentNetwork","orderBookData","setOrderBookData","bids","asks","createdMarkets","setCreatedMarkets","selectedMarketId","setSelectedMarketId","orderForm","setOrderForm","market","side","price","quantity","marketId","currentPage","setCurrentPage","detectAvailableWallets","refreshOrderBook","interval","setInterval","clearInterval","loadUserOrders","wallets","window","ethereum","isMetaMask","push","id","name","icon","connect","connectMetaMask","isCoinbaseWallet","connectCoinbaseWallet","isTrust","connectInjectedWallet","isTokenPocket","length","accounts","request","method","chainId","networkName","networkInfo","alert","BrowserProvider","getSigner","console","log","setTimeout","on","newChainId","newNetworkInfo","error","message","send","disconnectWallet","handleMarketChange","prev","handleInputChange","e","value","target","placeOrder","preventDefault","parseFloat","parseInt","Number","isInteger","orderData","qty","user","response","fetch","headers","body","JSON","stringify","result","json","ok","order","orderId","timestamp","Math","floor","Date","now","filter","o","cancelOrder","errorData","getOrderBook","status","statusText","userOrders","getBestPrices","marketOrders","sort","a","b","bestBid","bestAsk","switchToTestnet","testnetName","params","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","wallet","href","rel","slice","onSubmit","type","onChange","step","min","max","required","disabled","style","display","justifyContent","alignItems","background","color","border","padding","borderRadius","cursor","fontSize","toFixed","textAlign","fontStyle","trade","buyer","seller","toLocaleTimeString","_c","$RefreshReg$"],"sources":["/Users/raymeind/mini-etf/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { CONFIG, isTestnet, getNetworkInfo, isNetworkAllowed } from './config';\nimport ChainlinkFeeds from './ChainlinkFeeds';\nimport './App.css';\n\nfunction App() {\n  const [account, setAccount] = useState('');\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [showWalletOptions, setShowWalletOptions] = useState(false);\n  const [orders, setOrders] = useState([]);\n  const [trades, setTrades] = useState([]);\n  const [activeMarket, setActiveMarket] = useState('YES'); // Track active market tab\n  const [availableWallets, setAvailableWallets] = useState([]);\n  const [currentNetwork, setCurrentNetwork] = useState(null);\n  const [orderBookData, setOrderBookData] = useState({ bids: [], asks: [] });\n  const [createdMarkets, setCreatedMarkets] = useState([]); // Store created prediction markets\n  const [selectedMarketId, setSelectedMarketId] = useState(null); // Currently selected market\n  const [orderForm, setOrderForm] = useState({\n    market: 'YES',\n    side: 'Buy',\n    price: '',\n    quantity: '',\n    marketId: 'default_market'\n  });\n  const [currentPage, setCurrentPage] = useState('trading'); // 'trading' or 'feeds'\n\n  // Detect available wallets on component mount\n  useEffect(() => {\n    detectAvailableWallets();\n    // Load initial order book data\n    if (orderForm.marketId) {\n      refreshOrderBook();\n    }\n  }, []);\n\n  // Load order book data when active market changes\n  useEffect(() => {\n    if (orderForm.marketId) {\n      refreshOrderBook();\n    }\n  }, [activeMarket, orderForm.marketId]);\n\n  // Auto-refresh order book every 3 seconds\n  useEffect(() => {\n    if (orderForm.marketId) {\n      const interval = setInterval(() => {\n        refreshOrderBook();\n      }, 3000);\n      \n      return () => clearInterval(interval);\n    }\n  }, [orderForm.marketId]);\n\n  // Auto-refresh user orders every 5 seconds\n  useEffect(() => {\n    if (isConnected && account) {\n      const interval = setInterval(() => {\n        loadUserOrders();\n      }, 5000);\n      \n      return () => clearInterval(interval);\n    }\n  }, [isConnected, account]);\n\n  // Function to detect which wallets are available\n  const detectAvailableWallets = () => {\n    const wallets = [];\n    \n    if (typeof window.ethereum !== 'undefined') {\n      if (window.ethereum.isMetaMask) {\n        wallets.push({ id: 'metamask', name: 'MetaMask', icon: 'ü¶ä', connect: connectMetaMask });\n      }\n      if (window.ethereum.isCoinbaseWallet) {\n        wallets.push({ id: 'coinbase', name: 'Coinbase Wallet', icon: 'ü™ô', connect: connectCoinbaseWallet });\n      }\n      if (window.ethereum.isTrust) {\n        wallets.push({ id: 'trust', name: 'Trust Wallet', icon: 'üõ°Ô∏è', connect: connectInjectedWallet });\n      }\n      if (window.ethereum.isTokenPocket) {\n        wallets.push({ id: 'tokenpocket', name: 'TokenPocket', icon: 'üíº', connect: connectInjectedWallet });\n      }\n      \n      // If no specific wallet is detected but ethereum is available, add generic option\n      if (wallets.length === 0) {\n        wallets.push({ id: 'generic', name: 'Injected Wallet', icon: 'üíº', connect: connectInjectedWallet });\n      }\n    }\n    \n    setAvailableWallets(wallets);\n  };\n\n  // Connect to MetaMask\n  const connectMetaMask = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && window.ethereum.isMetaMask) {\n        // Request account access\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        \n        // Check if we're on a testnet\n        const chainId = await window.ethereum.request({ method: 'eth_chainId' });\n        const networkName = getNetworkInfo(chainId).name;\n        setCurrentNetwork({ chainId, name: networkName });\n        \n        if (!isTestnet(chainId)) {\n          const networkInfo = getNetworkInfo(chainId);\n          alert(`‚ö†Ô∏è SAFETY WARNING: You're connected to ${networkInfo.name} (${chainId})!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch to a testnet like Sepolia, Goerli, or Mumbai before trading.`);\n          return;\n        }\n        \n        if (!isNetworkAllowed(chainId)) {\n          alert(`‚ö†Ô∏è NETWORK BLOCKED: ${getNetworkInfo(chainId).name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          return;\n        }\n        \n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        \n        setAccount(accounts[0]);\n        setProvider(provider);\n        setSigner(signer);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n        \n        console.log(`‚úÖ Connected to ${networkName} testnet safely`);\n        \n        // Load user orders after connecting\n        setTimeout(() => {\n          loadUserOrders();\n        }, 1000);\n        \n        // Listen for network changes\n        window.ethereum.on('chainChanged', async (newChainId) => {\n          const newNetworkInfo = getNetworkInfo(newChainId);\n          setCurrentNetwork({ chainId: newChainId, name: newNetworkInfo.name });\n          \n          if (!isTestnet(newChainId)) {\n            alert(`‚ö†Ô∏è NETWORK CHANGED: You're now on ${newNetworkInfo.name}!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch back to a testnet for safe testing.`);\n          }\n          \n          if (!isNetworkAllowed(newChainId)) {\n            alert(`‚ö†Ô∏è NETWORK BLOCKED: ${newNetworkInfo.name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          }\n        });\n      } else {\n        alert('MetaMask not found! Please install MetaMask extension.');\n      }\n    } catch (error) {\n      console.error('Error connecting to MetaMask:', error);\n      alert('Failed to connect to MetaMask: ' + error.message);\n    }\n  };\n\n  // Connect to Coinbase Wallet\n  const connectCoinbaseWallet = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && window.ethereum.isCoinbaseWallet) {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\n        const signer = await provider.getSigner();\n        \n        setProvider(provider);\n        setSigner(signer);\n        setAccount(accounts[0]);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n      } else {\n        alert('Coinbase Wallet is not installed. Please install Coinbase Wallet first!');\n      }\n    } catch (error) {\n      console.error('Error connecting to Coinbase Wallet:', error);\n      alert('Failed to connect to Coinbase Wallet');\n    }\n  };\n\n  // Connect to any injected wallet\n  const connectInjectedWallet = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && !window.ethereum.isMetaMask && !window.ethereum.isCoinbaseWallet) {\n        // Request account access\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        \n        // Check if we're on a testnet\n        const chainId = await window.ethereum.request({ method: 'eth_chainId' });\n        const networkName = getNetworkInfo(chainId).name;\n        setCurrentNetwork({ chainId, name: networkName });\n        \n        if (!isTestnet(chainId)) {\n          const networkInfo = getNetworkInfo(chainId);\n          alert(`‚ö†Ô∏è SAFETY WARNING: You're connected to ${networkInfo.name} (${chainId})!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch to a testnet like Sepolia, Goerli, or Mumbai before trading.`);\n          return;\n        }\n        \n        if (!isNetworkAllowed(chainId)) {\n          alert(`‚ö†Ô∏è NETWORK BLOCKED: ${getNetworkInfo(chainId).name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          return;\n        }\n        \n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        \n        setAccount(accounts[0]);\n        setProvider(provider);\n        setSigner(signer);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n        \n        console.log(`‚úÖ Connected to ${networkName} testnet safely`);\n        \n        // Load user orders after connecting\n        setTimeout(() => {\n          loadUserOrders();\n        }, 1000);\n        \n        // Listen for network changes\n        window.ethereum.on('chainChanged', async (newChainId) => {\n          const newNetworkInfo = getNetworkInfo(newChainId);\n          setCurrentNetwork({ chainId: newChainId, name: newNetworkInfo.name });\n          \n          if (!isTestnet(newChainId)) {\n            alert(`‚ö†Ô∏è NETWORK CHANGED: You're now on ${newNetworkInfo.name}!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch back to a testnet for safe testing.`);\n          }\n          \n          if (!isNetworkAllowed(newChainId)) {\n            alert(`‚ö†Ô∏è NETWORK BLOCKED: ${newNetworkInfo.name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          }\n        });\n      } else {\n        alert('No injected wallet found!');\n      }\n    } catch (error) {\n      console.error('Error connecting to injected wallet:', error);\n      alert('Failed to connect to wallet: ' + error.message);\n    }\n  };\n\n  // Disconnect wallet\n  const disconnectWallet = () => {\n    setAccount(null);\n    setProvider(null);\n    setSigner(null);\n    setIsConnected(false);\n    setShowWalletOptions(false);\n  };\n\n  // Handle market tab change\n  const handleMarketChange = (market) => {\n    setActiveMarket(market);\n    setOrderForm(prev => ({\n      ...prev,\n      market: market\n    }));\n  };\n\n  // Handle form input changes\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setOrderForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Place order\n  const placeOrder = async (e) => {\n    e.preventDefault();\n    \n    if (!isConnected) {\n      alert('Please connect your wallet first');\n      return;\n    }\n\n    if (!orderForm.price || !orderForm.quantity) {\n      alert('Please fill in all fields');\n      return;\n    }\n\n    const price = parseFloat(orderForm.price);\n    const quantity = parseInt(orderForm.quantity);\n\n    if (price < 0 || price > 1 || quantity <= 0 || !Number.isInteger(quantity)) {\n      alert('Invalid price or quantity. Price must be between 0 and 1, quantity must be a positive integer.');\n      return;\n    }\n\n    try {\n      // Create order object for API\n      const orderData = {\n        marketId: orderForm.marketId,\n        market: activeMarket, // Use activeMarket instead of orderForm.market\n        side: orderForm.side,\n        price: price,\n        qty: quantity,\n        user: account\n      };\n\n      // Call the actual CLOB backend API\n      const response = await fetch('http://localhost:3001/api/orders', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(orderData)\n      });\n\n      const result = await response.json();\n\n      if (response.ok) {\n        // Add to orders list with backend order ID\n        const order = {\n          id: result.orderId,\n          user: account,\n          side: orderForm.side,\n          price: price,\n          qty: quantity,\n          timestamp: Math.floor(Date.now() / 1000),\n          market: activeMarket,\n          marketId: orderForm.marketId\n        };\n\n        setOrders(prev => [...prev, order]);\n\n        // Handle trades from the backend\n        if (result.trades && result.trades.length > 0) {\n          setTrades(prev => [...result.trades, ...prev]);\n          \n          // Remove matched orders\n          setOrders(prev => prev.filter(o => o.id !== order.id));\n        }\n\n        // Reset form\n        setOrderForm({\n          market: activeMarket,\n          side: 'Buy',\n          price: '',\n          quantity: '',\n          marketId: 'default_market'\n        });\n\n        alert('Order placed successfully!');\n        \n        // Refresh order book data immediately and after a short delay\n        refreshOrderBook();\n        setTimeout(() => {\n          refreshOrderBook();\n          // Also refresh user orders\n          loadUserOrders();\n        }, 500); // Refresh again after 500ms to ensure backend has processed\n      } else {\n        alert(`Failed to place order: ${result.error || 'Unknown error'}`);\n      }\n    } catch (error) {\n      console.error('Error placing order:', error);\n      alert('Failed to place order. Please check your connection.');\n    }\n  };\n\n  // Cancel order\n  const cancelOrder = async (orderId) => {\n    if (!account) return;\n    \n    try {\n      console.log('Cancelling order:', orderId);\n      const response = await fetch(`http://localhost:3001/api/orders/${orderId}`, {\n        method: 'DELETE'\n      });\n      \n      if (response.ok) {\n        console.log('Order cancelled successfully');\n        // Remove the order from local state immediately\n        setOrders(prev => prev.filter(o => o.id !== orderId));\n        // Refresh order book to reflect the cancellation\n        refreshOrderBook();\n        // Also refresh after a short delay to ensure backend has processed\n        setTimeout(() => {\n          refreshOrderBook();\n          loadUserOrders(); // Reload user orders to ensure consistency\n        }, 500);\n        alert('Order cancelled successfully!');\n      } else {\n        const errorData = await response.json();\n        console.error('Failed to cancel order:', errorData);\n        alert(`Failed to cancel order: ${errorData.error || 'Unknown error'}`);\n      }\n    } catch (error) {\n      console.error('Error cancelling order:', error);\n      alert('Error cancelling order. Please try again.');\n    }\n  };\n\n  // Get order book for a specific market\n  const getOrderBook = (market) => {\n    return orders.filter(o => o.market === market);\n  };\n\n  // Refresh order book data from backend\n  const refreshOrderBook = async () => {\n    try {\n      console.log('Refreshing order book for market:', activeMarket);\n      const response = await fetch(`http://localhost:3001/api/markets/${orderForm.marketId}/orderbook?market=${activeMarket}`);\n      if (response.ok) {\n        const orderBookData = await response.json();\n        console.log('Received order book data:', orderBookData);\n        setOrderBookData({\n          bids: orderBookData.bids || [],\n          asks: orderBookData.asks || []\n        });\n        console.log('Order book state updated');\n      } else {\n        console.error('Failed to fetch order book:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('Error refreshing order book:', error);\n    }\n  };\n\n  // Load user orders from backend\n  const loadUserOrders = async () => {\n    if (!account) return;\n    \n    try {\n      console.log('Loading user orders for account:', account);\n      const response = await fetch(`http://localhost:3001/api/users/${account}/orders`);\n      if (response.ok) {\n        const userOrders = await response.json();\n        console.log('Received user orders:', userOrders);\n        setOrders(userOrders || []);\n      } else {\n        console.error('Failed to fetch user orders:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('Error loading user orders:', error);\n    }\n  };\n\n  // Get best bid and ask for a market\n  const getBestPrices = (market) => {\n    const marketOrders = getOrderBook(market);\n    const bids = marketOrders.filter(o => o.side === 'Buy').sort((a, b) => b.price - a.price);\n    const asks = marketOrders.filter(o => o.side === 'Sell').sort((a, b) => a.price - b.price);\n    \n    return {\n      bestBid: bids.length > 0 ? bids[0].price : 0,\n      bestAsk: asks.length > 0 ? asks[0].price : 1\n    };\n  };\n\n  // Helper functions for network safety\n  const switchToTestnet = async (testnetName) => {\n    try {\n      if (!window.ethereum) {\n        alert('No wallet detected!');\n        return;\n      }\n      \n      let chainId;\n      switch (testnetName) {\n        case 'Sepolia':\n          chainId = '0xaa36a7';\n          break;\n        case 'Goerli':\n          chainId = '0x5';\n          break;\n        case 'Mumbai':\n          chainId = '0x13881';\n          break;\n        default:\n          chainId = '0xaa36a7'; // Default to Sepolia\n      }\n      \n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId }],\n      });\n      \n      console.log(`‚úÖ Switched to ${testnetName} testnet`);\n    } catch (error) {\n      console.error('Error switching networks:', error);\n      alert(`Failed to switch to ${testnetName}: ${error.message}`);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h1>Mini-etf</h1>\n        <p>Central Limit Order Book for Binary Markets of ETFs</p>\n      </header>\n      \n      {/* Safety Banner */}\n      <div className=\"safety-banner\">\n        <div className=\"safety-content\">\n          <span className=\"safety-icon\">‚ö†Ô∏è</span>\n          <strong>SAFETY WARNING:</strong> This is a development/testing system. \n          Only connect wallets with testnet accounts. Never use mainnet wallets with real funds!\n          <span className=\"safety-icon\">‚ö†Ô∏è</span>\n        </div>\n      </div>\n\n      {/* Navigation */}\n      <div className=\"navigation\">\n        <button \n          className={`nav-button ${currentPage === 'trading' ? 'active' : ''}`}\n          onClick={() => setCurrentPage('trading')}\n        >\n          üìä Trading\n        </button>\n        <button \n          className={`nav-button ${currentPage === 'feeds' ? 'active' : ''}`}\n          onClick={() => setCurrentPage('feeds')}\n        >\n          üîó Chainlink Feeds\n        </button>\n      </div>\n\n      <div className=\"container\">\n        {/* Wallet Section */}\n        <div className=\"wallet-section\">\n          <h2>üîê Wallet Connection</h2>\n          \n          {!isConnected ? (\n            <div className=\"wallet-controls\">\n              <button \n                className=\"connect-button\"\n                onClick={() => setShowWalletOptions(!showWalletOptions)}\n              >\n                Connect Wallet\n              </button>\n              \n              {showWalletOptions && (\n                <div className=\"wallet-options\">\n                  {availableWallets.map((wallet) => (\n                    <button\n                      key={wallet.name}\n                      className=\"wallet-option\"\n                      onClick={wallet.connect}\n                    >\n                      <span className=\"wallet-icon\">{wallet.icon}</span>\n                      {wallet.name}\n                    </button>\n                  ))}\n                  {availableWallets.length === 0 && (\n                    <div className=\"no-wallets-message\">\n                      <p>No Web3 wallets detected</p>\n                      <div className=\"wallet-install-links\">\n                        <a href=\"https://metamask.io/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"wallet-link\">\n                          Install MetaMask\n                        </a>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"wallet-info\">\n              <div className=\"account-info\">\n                <strong>Account:</strong> {account.slice(0, 6)}...{account.slice(-4)}\n              </div>\n              \n              {currentNetwork && (\n                <div className=\"network-info\">\n                  <strong>Network:</strong> {currentNetwork.name}\n                  {!isTestnet(currentNetwork.chainId) && (\n                    <span className=\"warning\">‚ö†Ô∏è MAINNET - UNSAFE!</span>\n                  )}\n                  {!isNetworkAllowed(currentNetwork.chainId) && (\n                    <span className=\"warning\">üö´ NETWORK BLOCKED!</span>\n                  )}\n                </div>\n              )}\n              \n              <div className=\"network-controls\">\n                <button \n                  className=\"testnet-button\"\n                  onClick={() => switchToTestnet('Sepolia')}\n                >\n                  Switch to Sepolia\n                </button>\n                <button \n                  className=\"testnet-button\"\n                  onClick={() => switchToTestnet('Goerli')}\n                >\n                  Switch to Goerli\n                </button>\n                <button \n                  className=\"testnet-button\"\n                  onClick={() => switchToTestnet('Mumbai')}\n                >\n                  Switch to Mumbai\n                </button>\n              </div>\n              \n              <button className=\"disconnect-button\" onClick={disconnectWallet}>\n                Disconnect\n              </button>\n            </div>\n          )}\n        </div>\n\n        {currentPage === 'trading' ? (\n          <>\n            {/* Market Selection Tabs */}\n            <div className=\"market-tabs\">\n              <button \n                className={`market-tab ${activeMarket === 'YES' ? 'active' : ''}`}\n                onClick={() => handleMarketChange('YES')}\n              >\n                YES Market\n              </button>\n              <button \n                className={`market-tab ${activeMarket === 'NO' ? 'active' : ''}`}\n                onClick={() => handleMarketChange('NO')}\n              >\n                NO Market\n              </button>\n            </div>\n\n            {/* Trading Section - Single Market */}\n            <div className=\"trading-section-single\">\n              <div className=\"market-card\">\n                <h3>{activeMarket} Market</h3>\n                <form className=\"order-form\" onSubmit={placeOrder}>\n                  <input type=\"hidden\" name=\"market\" value={activeMarket} />\n                  \n                  <div className=\"form-group\">\n                    <label>Side:</label>\n                    <select name=\"side\" value={orderForm.side} onChange={handleInputChange}>\n                      <option value=\"Buy\">Buy</option>\n                      <option value=\"Sell\">Sell</option>\n                    </select>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label>Price (0.0 - 1.0):</label>\n                    <input\n                      type=\"number\"\n                      name=\"price\"\n                      value={orderForm.price}\n                      onChange={handleInputChange}\n                      step=\"0.01\"\n                      min=\"0\"\n                      max=\"1\"\n                      required\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label>Quantity (whole shares):</label>\n                    <input\n                      type=\"number\"\n                      name=\"quantity\"\n                      value={orderForm.quantity}\n                      onChange={handleInputChange}\n                      step=\"1\"\n                      min=\"1\"\n                      required\n                    />\n                  </div>\n\n                  <button type=\"submit\" className=\"submit-button\" disabled={!isConnected}>\n                    Place Order\n                  </button>\n                </form>\n\n                {/* Order Book for Active Market */}\n                <div className=\"order-book\">\n                  <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\n                    <h4>Order Book</h4>\n                    <button \n                      onClick={refreshOrderBook}\n                      style={{\n                        background: '#2196F3', \n                        color: 'white', \n                        border: 'none', \n                        padding: '8px 16px', \n                        borderRadius: '4px', \n                        cursor: 'pointer',\n                        fontSize: '12px'\n                      }}\n                    >\n                      üîÑ Refresh\n                    </button>\n                  </div>\n                  <div>\n                    <div className=\"order-row\">\n                      <span>Best Bid: <span className=\"bid\">\n                        {orderBookData.bids.length > 0 ? orderBookData.bids[0].price.toFixed(3) : '0.000'}\n                      </span></span>\n                      <span>Best Ask: <span className=\"ask\">\n                        {orderBookData.asks.length > 0 ? orderBookData.asks[0].price.toFixed(3) : '1.000'}\n                      </span></span>\n                    </div>\n                    \n\n                    {/* User's Orders */}\n                    <div className=\"order-section\">\n                      <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\n                        <h5>Your Orders</h5>\n                        <button \n                          onClick={loadUserOrders}\n                          style={{\n                            background: '#4CAF50', \n                            color: 'white', \n                            border: 'none', \n                            padding: '4px 8px', \n                            borderRadius: '4px', \n                            cursor: 'pointer',\n                            fontSize: '10px'\n                          }}\n                        >\n                          üîÑ\n                        </button>\n                      </div>\n                      {orders.filter(o => o.market === activeMarket).slice(0, 5).map(order => (\n                        <div key={order.id} className=\"order-row\">\n                          <span className={order.side === 'Buy' ? 'bid' : 'ask'}>\n                            {order.side} {order.qty} @ {order.price.toFixed(3)}\n                          </span>\n                          <button \n                            onClick={() => cancelOrder(order.id)}\n                            style={{background: '#f44336', color: 'white', border: 'none', padding: '4px 8px', borderRadius: '4px', cursor: 'pointer'}}\n                          >\n                            Cancel\n                          </button>\n                        </div>\n                      ))}\n                      {orders.filter(o => o.market === activeMarket).length === 0 && (\n                        <p style={{textAlign: 'center', color: '#888', fontStyle: 'italic'}}>\n                          No orders in this market yet\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Recent Trades */}\n            <div className=\"trades-section\">\n              <h3>Recent Trades</h3>\n              {trades.length === 0 ? (\n                <p>No trades yet</p>\n              ) : (\n                trades.slice(0, 10).map(trade => (\n                  <div key={trade.id} className=\"trade-row\">\n                    <span>{trade.market}</span>\n                    <span>{trade.buyer.slice(0, 6)}...{trade.buyer.slice(-4)} ‚Üí {trade.seller.slice(0, 6)}...{trade.seller.slice(-4)}</span>\n                    <span>{trade.qty} @ {trade.price.toFixed(3)}</span>\n                    <span>{new Date(trade.timestamp * 1000).toLocaleTimeString()}</span>\n                  </div>\n                ))\n              )}\n            </div>\n          </>\n        ) : (\n          <ChainlinkFeeds\n            account={account}\n            provider={provider}\n            signer={signer}\n            isConnected={isConnected}\n            currentNetwork={currentNetwork}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}