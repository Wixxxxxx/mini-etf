{"ast":null,"code":"var _jsxFileName = \"/Users/raymeind/mini-etf/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { CONFIG, isTestnet, getNetworkInfo, isNetworkAllowed } from './config';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [showWalletOptions, setShowWalletOptions] = useState(false);\n  const [orders, setOrders] = useState([]);\n  const [trades, setTrades] = useState([]);\n  const [activeMarket, setActiveMarket] = useState('YES'); // Track active market tab\n  const [availableWallets, setAvailableWallets] = useState([]);\n  const [currentNetwork, setCurrentNetwork] = useState(null);\n  const [orderBookData, setOrderBookData] = useState({\n    bids: [],\n    asks: []\n  });\n  const [orderForm, setOrderForm] = useState({\n    market: 'YES',\n    side: 'Buy',\n    price: '',\n    quantity: '',\n    marketId: 'default_market'\n  });\n\n  // Detect available wallets on component mount\n  useEffect(() => {\n    detectAvailableWallets();\n  }, []);\n\n  // Function to detect which wallets are available\n  const detectAvailableWallets = () => {\n    const wallets = [];\n    if (typeof window.ethereum !== 'undefined') {\n      if (window.ethereum.isMetaMask) {\n        wallets.push({\n          id: 'metamask',\n          name: 'MetaMask',\n          icon: '🦊',\n          connect: connectMetaMask\n        });\n      }\n      if (window.ethereum.isCoinbaseWallet) {\n        wallets.push({\n          id: 'coinbase',\n          name: 'Coinbase Wallet',\n          icon: '🪙',\n          connect: connectCoinbaseWallet\n        });\n      }\n      if (window.ethereum.isTrust) {\n        wallets.push({\n          id: 'trust',\n          name: 'Trust Wallet',\n          icon: '🛡️',\n          connect: connectInjectedWallet\n        });\n      }\n      if (window.ethereum.isTokenPocket) {\n        wallets.push({\n          id: 'tokenpocket',\n          name: 'TokenPocket',\n          icon: '💼',\n          connect: connectInjectedWallet\n        });\n      }\n\n      // If no specific wallet is detected but ethereum is available, add generic option\n      if (wallets.length === 0) {\n        wallets.push({\n          id: 'generic',\n          name: 'Injected Wallet',\n          icon: '💼',\n          connect: connectInjectedWallet\n        });\n      }\n    }\n    setAvailableWallets(wallets);\n  };\n\n  // Connect to MetaMask\n  const connectMetaMask = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && window.ethereum.isMetaMask) {\n        // Request account access\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n\n        // Check if we're on a testnet\n        const chainId = await window.ethereum.request({\n          method: 'eth_chainId'\n        });\n        const networkName = getNetworkInfo(chainId).name;\n        setCurrentNetwork({\n          chainId,\n          name: networkName\n        });\n        if (!isTestnet(chainId)) {\n          const networkInfo = getNetworkInfo(chainId);\n          alert(`⚠️ SAFETY WARNING: You're connected to ${networkInfo.name} (${chainId})!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch to a testnet like Sepolia, Goerli, or Mumbai before trading.`);\n          return;\n        }\n        if (!isNetworkAllowed(chainId)) {\n          alert(`⚠️ NETWORK BLOCKED: ${getNetworkInfo(chainId).name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          return;\n        }\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        setAccount(accounts[0]);\n        setProvider(provider);\n        setSigner(signer);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n        console.log(`✅ Connected to ${networkName} testnet safely`);\n\n        // Listen for network changes\n        window.ethereum.on('chainChanged', async newChainId => {\n          const newNetworkInfo = getNetworkInfo(newChainId);\n          setCurrentNetwork({\n            chainId: newChainId,\n            name: newNetworkInfo.name\n          });\n          if (!isTestnet(newChainId)) {\n            alert(`⚠️ NETWORK CHANGED: You're now on ${newNetworkInfo.name}!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch back to a testnet for safe testing.`);\n          }\n          if (!isNetworkAllowed(newChainId)) {\n            alert(`⚠️ NETWORK BLOCKED: ${newNetworkInfo.name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          }\n        });\n      } else {\n        alert('MetaMask not found! Please install MetaMask extension.');\n      }\n    } catch (error) {\n      console.error('Error connecting to MetaMask:', error);\n      alert('Failed to connect to MetaMask: ' + error.message);\n    }\n  };\n\n  // Connect to Coinbase Wallet\n  const connectCoinbaseWallet = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && window.ethereum.isCoinbaseWallet) {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\n        const signer = await provider.getSigner();\n        setProvider(provider);\n        setSigner(signer);\n        setAccount(accounts[0]);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n      } else {\n        alert('Coinbase Wallet is not installed. Please install Coinbase Wallet first!');\n      }\n    } catch (error) {\n      console.error('Error connecting to Coinbase Wallet:', error);\n      alert('Failed to connect to Coinbase Wallet');\n    }\n  };\n\n  // Connect to any injected wallet\n  const connectInjectedWallet = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && !window.ethereum.isMetaMask && !window.ethereum.isCoinbaseWallet) {\n        // Request account access\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n\n        // Check if we're on a testnet\n        const chainId = await window.ethereum.request({\n          method: 'eth_chainId'\n        });\n        const networkName = getNetworkInfo(chainId).name;\n        setCurrentNetwork({\n          chainId,\n          name: networkName\n        });\n        if (!isTestnet(chainId)) {\n          const networkInfo = getNetworkInfo(chainId);\n          alert(`⚠️ SAFETY WARNING: You're connected to ${networkInfo.name} (${chainId})!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch to a testnet like Sepolia, Goerli, or Mumbai before trading.`);\n          return;\n        }\n        if (!isNetworkAllowed(chainId)) {\n          alert(`⚠️ NETWORK BLOCKED: ${getNetworkInfo(chainId).name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          return;\n        }\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        setAccount(accounts[0]);\n        setProvider(provider);\n        setSigner(signer);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n        console.log(`✅ Connected to ${networkName} testnet safely`);\n\n        // Listen for network changes\n        window.ethereum.on('chainChanged', async newChainId => {\n          const newNetworkInfo = getNetworkInfo(newChainId);\n          setCurrentNetwork({\n            chainId: newChainId,\n            name: newNetworkInfo.name\n          });\n          if (!isTestnet(newChainId)) {\n            alert(`⚠️ NETWORK CHANGED: You're now on ${newNetworkInfo.name}!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch back to a testnet for safe testing.`);\n          }\n          if (!isNetworkAllowed(newChainId)) {\n            alert(`⚠️ NETWORK BLOCKED: ${newNetworkInfo.name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          }\n        });\n      } else {\n        alert('No injected wallet found!');\n      }\n    } catch (error) {\n      console.error('Error connecting to injected wallet:', error);\n      alert('Failed to connect to wallet: ' + error.message);\n    }\n  };\n\n  // Disconnect wallet\n  const disconnectWallet = () => {\n    setAccount(null);\n    setProvider(null);\n    setSigner(null);\n    setIsConnected(false);\n    setShowWalletOptions(false);\n  };\n\n  // Handle market tab change\n  const handleMarketChange = market => {\n    setActiveMarket(market);\n    setOrderForm(prev => ({\n      ...prev,\n      market: market\n    }));\n  };\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setOrderForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Place order\n  const placeOrder = async e => {\n    e.preventDefault();\n    if (!isConnected) {\n      alert('Please connect your wallet first');\n      return;\n    }\n    if (!orderForm.price || !orderForm.quantity) {\n      alert('Please fill in all fields');\n      return;\n    }\n    const price = parseFloat(orderForm.price);\n    const quantity = parseInt(orderForm.quantity);\n    if (price < 0 || price > 1 || quantity <= 0 || !Number.isInteger(quantity)) {\n      alert('Invalid price or quantity. Price must be between 0 and 1, quantity must be a positive integer.');\n      return;\n    }\n    try {\n      // Create order object for API\n      const orderData = {\n        marketId: orderForm.marketId,\n        market: orderForm.market,\n        side: orderForm.side,\n        price: price,\n        qty: quantity,\n        user: account\n      };\n\n      // Call the actual CLOB backend API\n      const response = await fetch('http://localhost:3001/api/orders', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(orderData)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        // Add to orders list with backend order ID\n        const order = {\n          id: result.orderId,\n          user: account,\n          side: orderForm.side,\n          price: price,\n          qty: quantity,\n          timestamp: Math.floor(Date.now() / 1000),\n          market: orderForm.market,\n          marketId: orderForm.marketId\n        };\n        setOrders(prev => [...prev, order]);\n\n        // Handle trades from the backend\n        if (result.trades && result.trades.length > 0) {\n          setTrades(prev => [...result.trades, ...prev]);\n\n          // Remove matched orders\n          setOrders(prev => prev.filter(o => o.id !== order.id));\n        }\n\n        // Reset form\n        setOrderForm({\n          market: activeMarket,\n          side: 'Buy',\n          price: '',\n          quantity: '',\n          marketId: 'default_market'\n        });\n        alert('Order placed successfully!');\n\n        // Refresh order book data\n        refreshOrderBook();\n      } else {\n        alert(`Failed to place order: ${result.error || 'Unknown error'}`);\n      }\n    } catch (error) {\n      console.error('Error placing order:', error);\n      alert('Failed to place order. Please check your connection.');\n    }\n  };\n\n  // Cancel order\n  const cancelOrder = orderId => {\n    setOrders(prev => prev.filter(o => o.id !== orderId));\n    alert('Order cancelled');\n  };\n\n  // Get order book for a specific market\n  const getOrderBook = market => {\n    return orders.filter(o => o.market === market);\n  };\n\n  // Refresh order book data from backend\n  const refreshOrderBook = async () => {\n    try {\n      const response = await fetch(`http://localhost:3001/api/markets/${orderForm.marketId}/orderbook?market=${activeMarket}`);\n      if (response.ok) {\n        const orderBookData = await response.json();\n        // Update orders based on backend data\n        // This would need to be implemented based on your backend structure\n        console.log('Order book refreshed:', orderBookData);\n      }\n    } catch (error) {\n      console.error('Error refreshing order book:', error);\n    }\n  };\n\n  // Get best bid and ask for a market\n  const getBestPrices = market => {\n    const marketOrders = getOrderBook(market);\n    const bids = marketOrders.filter(o => o.side === 'Buy').sort((a, b) => b.price - a.price);\n    const asks = marketOrders.filter(o => o.side === 'Sell').sort((a, b) => a.price - b.price);\n    return {\n      bestBid: bids.length > 0 ? bids[0].price : 0,\n      bestAsk: asks.length > 0 ? asks[0].price : 1\n    };\n  };\n\n  // Helper functions for network safety\n  const switchToTestnet = async testnetName => {\n    try {\n      if (!window.ethereum) {\n        alert('No wallet detected!');\n        return;\n      }\n      let chainId;\n      switch (testnetName) {\n        case 'Sepolia':\n          chainId = '0xaa36a7';\n          break;\n        case 'Goerli':\n          chainId = '0x5';\n          break;\n        case 'Mumbai':\n          chainId = '0x13881';\n          break;\n        default:\n          chainId = '0xaa36a7';\n        // Default to Sepolia\n      }\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{\n          chainId\n        }]\n      });\n      console.log(`✅ Switched to ${testnetName} testnet`);\n    } catch (error) {\n      console.error('Error switching networks:', error);\n      alert(`Failed to switch to ${testnetName}: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDE80 CLOB Trading System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Central Limit Order Book for Binary Markets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"safety-banner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"safety-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"safety-icon\",\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"SAFETY WARNING:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), \" This is a development/testing system. Only connect wallets with testnet accounts. Never use mainnet wallets with real funds!\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"safety-icon\",\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"CLOB Trading Interface\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDD10 Wallet Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), !isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"connect-button\",\n            onClick: () => setShowWalletOptions(!showWalletOptions),\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this), showWalletOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wallet-options\",\n            children: [availableWallets.map(wallet => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"wallet-option\",\n              onClick: wallet.connect,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"wallet-icon\",\n                children: wallet.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 23\n              }, this), wallet.name]\n            }, wallet.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 21\n            }, this)), availableWallets.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-wallets-message\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No Web3 wallets detected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wallet-install-links\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"https://metamask.io/\",\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  className: \"wallet-link\",\n                  children: \"Install MetaMask\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Account:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 17\n            }, this), \" \", account.slice(0, 6), \"...\", account.slice(-4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this), currentNetwork && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"network-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Network:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 19\n            }, this), \" \", currentNetwork.name, !isTestnet(currentNetwork.chainId) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"warning\",\n              children: \"\\u26A0\\uFE0F MAINNET - UNSAFE!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 21\n            }, this), !isNetworkAllowed(currentNetwork.chainId) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"warning\",\n              children: \"\\uD83D\\uDEAB NETWORK BLOCKED!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"network-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"testnet-button\",\n              onClick: () => switchToTestnet('Sepolia'),\n              children: \"Switch to Sepolia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"testnet-button\",\n              onClick: () => switchToTestnet('Goerli'),\n              children: \"Switch to Goerli\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"testnet-button\",\n              onClick: () => switchToTestnet('Mumbai'),\n              children: \"Switch to Mumbai\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"disconnect-button\",\n            onClick: disconnectWallet,\n            children: \"Disconnect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"market-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `market-tab ${activeMarket === 'YES' ? 'active' : ''}`,\n          onClick: () => handleMarketChange('YES'),\n          children: \"YES Market\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `market-tab ${activeMarket === 'NO' ? 'active' : ''}`,\n          onClick: () => handleMarketChange('NO'),\n          children: \"NO Market\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trading-section-single\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"market-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [activeMarket, \" Market\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"order-form\",\n            onSubmit: placeOrder,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              name: \"market\",\n              value: activeMarket\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Side:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"side\",\n                value: orderForm.side,\n                onChange: handleInputChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Buy\",\n                  children: \"Buy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Sell\",\n                  children: \"Sell\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Price (0.0 - 1.0):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"price\",\n                value: orderForm.price,\n                onChange: handleInputChange,\n                step: \"0.01\",\n                min: \"0\",\n                max: \"1\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Quantity (whole shares):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"quantity\",\n                value: orderForm.quantity,\n                onChange: handleInputChange,\n                step: \"1\",\n                min: \"1\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"submit-button\",\n              disabled: !isConnected,\n              children: \"Place Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-book\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Order Book\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 15\n            }, this), (() => {\n              const marketOrders = getOrderBook(activeMarket);\n              const {\n                bestBid,\n                bestAsk\n              } = getBestPrices(activeMarket);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"order-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Best Bid: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"bid\",\n                      children: bestBid.toFixed(3)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 559,\n                      columnNumber: 39\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 559,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Best Ask: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"ask\",\n                      children: bestAsk.toFixed(3)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 560,\n                      columnNumber: 39\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 560,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 21\n                }, this), marketOrders.slice(0, 10).map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"order-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: order.side === 'Buy' ? 'bid' : 'ask',\n                    children: [order.side, \" \", order.qty, \" @ \", order.price.toFixed(3)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 564,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => cancelOrder(order.id),\n                    style: {\n                      background: '#f44336',\n                      color: 'white',\n                      border: 'none',\n                      padding: '4px 8px',\n                      borderRadius: '4px',\n                      cursor: 'pointer'\n                    },\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 567,\n                    columnNumber: 25\n                  }, this)]\n                }, order.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 23\n                }, this)), marketOrders.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    textAlign: 'center',\n                    color: '#888',\n                    fontStyle: 'italic'\n                  },\n                  children: \"No orders in this market yet\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 576,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 19\n              }, this);\n            })()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trades-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Recent Trades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 11\n        }, this), trades.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No trades yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 13\n        }, this) : trades.slice(0, 10).map(trade => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trade-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: trade.market\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [trade.buyer.slice(0, 6), \"...\", trade.buyer.slice(-4), \" \\u2192 \", trade.seller.slice(0, 6), \"...\", trade.seller.slice(-4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [trade.qty, \" @ \", trade.price.toFixed(3)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: new Date(trade.timestamp * 1000).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 17\n          }, this)]\n        }, trade.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 382,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tT4TeMBDC2gXnsss3kXeXlvccIA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","CONFIG","isTestnet","getNetworkInfo","isNetworkAllowed","jsxDEV","_jsxDEV","App","_s","account","setAccount","provider","setProvider","signer","setSigner","isConnected","setIsConnected","showWalletOptions","setShowWalletOptions","orders","setOrders","trades","setTrades","activeMarket","setActiveMarket","availableWallets","setAvailableWallets","currentNetwork","setCurrentNetwork","orderBookData","setOrderBookData","bids","asks","orderForm","setOrderForm","market","side","price","quantity","marketId","detectAvailableWallets","wallets","window","ethereum","isMetaMask","push","id","name","icon","connect","connectMetaMask","isCoinbaseWallet","connectCoinbaseWallet","isTrust","connectInjectedWallet","isTokenPocket","length","accounts","request","method","chainId","networkName","networkInfo","alert","BrowserProvider","getSigner","console","log","on","newChainId","newNetworkInfo","error","message","send","disconnectWallet","handleMarketChange","prev","handleInputChange","e","value","target","placeOrder","preventDefault","parseFloat","parseInt","Number","isInteger","orderData","qty","user","response","fetch","headers","body","JSON","stringify","result","json","ok","order","orderId","timestamp","Math","floor","Date","now","filter","o","refreshOrderBook","cancelOrder","getOrderBook","getBestPrices","marketOrders","sort","a","b","bestBid","bestAsk","switchToTestnet","testnetName","params","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","wallet","href","rel","slice","onSubmit","type","onChange","step","min","max","required","disabled","toFixed","style","background","color","border","padding","borderRadius","cursor","textAlign","fontStyle","trade","buyer","seller","toLocaleTimeString","_c","$RefreshReg$"],"sources":["/Users/raymeind/mini-etf/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { CONFIG, isTestnet, getNetworkInfo, isNetworkAllowed } from './config';\nimport './App.css';\n\nfunction App() {\n  const [account, setAccount] = useState('');\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [showWalletOptions, setShowWalletOptions] = useState(false);\n  const [orders, setOrders] = useState([]);\n  const [trades, setTrades] = useState([]);\n  const [activeMarket, setActiveMarket] = useState('YES'); // Track active market tab\n  const [availableWallets, setAvailableWallets] = useState([]);\n  const [currentNetwork, setCurrentNetwork] = useState(null);\n  const [orderBookData, setOrderBookData] = useState({ bids: [], asks: [] });\n  const [orderForm, setOrderForm] = useState({\n    market: 'YES',\n    side: 'Buy',\n    price: '',\n    quantity: '',\n    marketId: 'default_market'\n  });\n\n  // Detect available wallets on component mount\n  useEffect(() => {\n    detectAvailableWallets();\n  }, []);\n\n  // Function to detect which wallets are available\n  const detectAvailableWallets = () => {\n    const wallets = [];\n    \n    if (typeof window.ethereum !== 'undefined') {\n      if (window.ethereum.isMetaMask) {\n        wallets.push({ id: 'metamask', name: 'MetaMask', icon: '🦊', connect: connectMetaMask });\n      }\n      if (window.ethereum.isCoinbaseWallet) {\n        wallets.push({ id: 'coinbase', name: 'Coinbase Wallet', icon: '🪙', connect: connectCoinbaseWallet });\n      }\n      if (window.ethereum.isTrust) {\n        wallets.push({ id: 'trust', name: 'Trust Wallet', icon: '🛡️', connect: connectInjectedWallet });\n      }\n      if (window.ethereum.isTokenPocket) {\n        wallets.push({ id: 'tokenpocket', name: 'TokenPocket', icon: '💼', connect: connectInjectedWallet });\n      }\n      \n      // If no specific wallet is detected but ethereum is available, add generic option\n      if (wallets.length === 0) {\n        wallets.push({ id: 'generic', name: 'Injected Wallet', icon: '💼', connect: connectInjectedWallet });\n      }\n    }\n    \n    setAvailableWallets(wallets);\n  };\n\n  // Connect to MetaMask\n  const connectMetaMask = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && window.ethereum.isMetaMask) {\n        // Request account access\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        \n        // Check if we're on a testnet\n        const chainId = await window.ethereum.request({ method: 'eth_chainId' });\n        const networkName = getNetworkInfo(chainId).name;\n        setCurrentNetwork({ chainId, name: networkName });\n        \n        if (!isTestnet(chainId)) {\n          const networkInfo = getNetworkInfo(chainId);\n          alert(`⚠️ SAFETY WARNING: You're connected to ${networkInfo.name} (${chainId})!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch to a testnet like Sepolia, Goerli, or Mumbai before trading.`);\n          return;\n        }\n        \n        if (!isNetworkAllowed(chainId)) {\n          alert(`⚠️ NETWORK BLOCKED: ${getNetworkInfo(chainId).name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          return;\n        }\n        \n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        \n        setAccount(accounts[0]);\n        setProvider(provider);\n        setSigner(signer);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n        \n        console.log(`✅ Connected to ${networkName} testnet safely`);\n        \n        // Listen for network changes\n        window.ethereum.on('chainChanged', async (newChainId) => {\n          const newNetworkInfo = getNetworkInfo(newChainId);\n          setCurrentNetwork({ chainId: newChainId, name: newNetworkInfo.name });\n          \n          if (!isTestnet(newChainId)) {\n            alert(`⚠️ NETWORK CHANGED: You're now on ${newNetworkInfo.name}!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch back to a testnet for safe testing.`);\n          }\n          \n          if (!isNetworkAllowed(newChainId)) {\n            alert(`⚠️ NETWORK BLOCKED: ${newNetworkInfo.name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          }\n        });\n      } else {\n        alert('MetaMask not found! Please install MetaMask extension.');\n      }\n    } catch (error) {\n      console.error('Error connecting to MetaMask:', error);\n      alert('Failed to connect to MetaMask: ' + error.message);\n    }\n  };\n\n  // Connect to Coinbase Wallet\n  const connectCoinbaseWallet = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && window.ethereum.isCoinbaseWallet) {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\n        const signer = await provider.getSigner();\n        \n        setProvider(provider);\n        setSigner(signer);\n        setAccount(accounts[0]);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n      } else {\n        alert('Coinbase Wallet is not installed. Please install Coinbase Wallet first!');\n      }\n    } catch (error) {\n      console.error('Error connecting to Coinbase Wallet:', error);\n      alert('Failed to connect to Coinbase Wallet');\n    }\n  };\n\n  // Connect to any injected wallet\n  const connectInjectedWallet = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && !window.ethereum.isMetaMask && !window.ethereum.isCoinbaseWallet) {\n        // Request account access\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        \n        // Check if we're on a testnet\n        const chainId = await window.ethereum.request({ method: 'eth_chainId' });\n        const networkName = getNetworkInfo(chainId).name;\n        setCurrentNetwork({ chainId, name: networkName });\n        \n        if (!isTestnet(chainId)) {\n          const networkInfo = getNetworkInfo(chainId);\n          alert(`⚠️ SAFETY WARNING: You're connected to ${networkInfo.name} (${chainId})!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch to a testnet like Sepolia, Goerli, or Mumbai before trading.`);\n          return;\n        }\n        \n        if (!isNetworkAllowed(chainId)) {\n          alert(`⚠️ NETWORK BLOCKED: ${getNetworkInfo(chainId).name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          return;\n        }\n        \n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        \n        setAccount(accounts[0]);\n        setProvider(provider);\n        setSigner(signer);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n        \n        console.log(`✅ Connected to ${networkName} testnet safely`);\n        \n        // Listen for network changes\n        window.ethereum.on('chainChanged', async (newChainId) => {\n          const newNetworkInfo = getNetworkInfo(newChainId);\n          setCurrentNetwork({ chainId: newChainId, name: newNetworkInfo.name });\n          \n          if (!isTestnet(newChainId)) {\n            alert(`⚠️ NETWORK CHANGED: You're now on ${newNetworkInfo.name}!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch back to a testnet for safe testing.`);\n          }\n          \n          if (!isNetworkAllowed(newChainId)) {\n            alert(`⚠️ NETWORK BLOCKED: ${newNetworkInfo.name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          }\n        });\n      } else {\n        alert('No injected wallet found!');\n      }\n    } catch (error) {\n      console.error('Error connecting to injected wallet:', error);\n      alert('Failed to connect to wallet: ' + error.message);\n    }\n  };\n\n  // Disconnect wallet\n  const disconnectWallet = () => {\n    setAccount(null);\n    setProvider(null);\n    setSigner(null);\n    setIsConnected(false);\n    setShowWalletOptions(false);\n  };\n\n  // Handle market tab change\n  const handleMarketChange = (market) => {\n    setActiveMarket(market);\n    setOrderForm(prev => ({\n      ...prev,\n      market: market\n    }));\n  };\n\n  // Handle form input changes\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setOrderForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Place order\n  const placeOrder = async (e) => {\n    e.preventDefault();\n    \n    if (!isConnected) {\n      alert('Please connect your wallet first');\n      return;\n    }\n\n    if (!orderForm.price || !orderForm.quantity) {\n      alert('Please fill in all fields');\n      return;\n    }\n\n    const price = parseFloat(orderForm.price);\n    const quantity = parseInt(orderForm.quantity);\n\n    if (price < 0 || price > 1 || quantity <= 0 || !Number.isInteger(quantity)) {\n      alert('Invalid price or quantity. Price must be between 0 and 1, quantity must be a positive integer.');\n      return;\n    }\n\n    try {\n      // Create order object for API\n      const orderData = {\n        marketId: orderForm.marketId,\n        market: orderForm.market,\n        side: orderForm.side,\n        price: price,\n        qty: quantity,\n        user: account\n      };\n\n      // Call the actual CLOB backend API\n      const response = await fetch('http://localhost:3001/api/orders', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(orderData)\n      });\n\n      const result = await response.json();\n\n      if (response.ok) {\n        // Add to orders list with backend order ID\n        const order = {\n          id: result.orderId,\n          user: account,\n          side: orderForm.side,\n          price: price,\n          qty: quantity,\n          timestamp: Math.floor(Date.now() / 1000),\n          market: orderForm.market,\n          marketId: orderForm.marketId\n        };\n\n        setOrders(prev => [...prev, order]);\n\n        // Handle trades from the backend\n        if (result.trades && result.trades.length > 0) {\n          setTrades(prev => [...result.trades, ...prev]);\n          \n          // Remove matched orders\n          setOrders(prev => prev.filter(o => o.id !== order.id));\n        }\n\n        // Reset form\n        setOrderForm({\n          market: activeMarket,\n          side: 'Buy',\n          price: '',\n          quantity: '',\n          marketId: 'default_market'\n        });\n\n        alert('Order placed successfully!');\n        \n        // Refresh order book data\n        refreshOrderBook();\n      } else {\n        alert(`Failed to place order: ${result.error || 'Unknown error'}`);\n      }\n    } catch (error) {\n      console.error('Error placing order:', error);\n      alert('Failed to place order. Please check your connection.');\n    }\n  };\n\n  // Cancel order\n  const cancelOrder = (orderId) => {\n    setOrders(prev => prev.filter(o => o.id !== orderId));\n    alert('Order cancelled');\n  };\n\n  // Get order book for a specific market\n  const getOrderBook = (market) => {\n    return orders.filter(o => o.market === market);\n  };\n\n  // Refresh order book data from backend\n  const refreshOrderBook = async () => {\n    try {\n      const response = await fetch(`http://localhost:3001/api/markets/${orderForm.marketId}/orderbook?market=${activeMarket}`);\n      if (response.ok) {\n        const orderBookData = await response.json();\n        // Update orders based on backend data\n        // This would need to be implemented based on your backend structure\n        console.log('Order book refreshed:', orderBookData);\n      }\n    } catch (error) {\n      console.error('Error refreshing order book:', error);\n    }\n  };\n\n  // Get best bid and ask for a market\n  const getBestPrices = (market) => {\n    const marketOrders = getOrderBook(market);\n    const bids = marketOrders.filter(o => o.side === 'Buy').sort((a, b) => b.price - a.price);\n    const asks = marketOrders.filter(o => o.side === 'Sell').sort((a, b) => a.price - b.price);\n    \n    return {\n      bestBid: bids.length > 0 ? bids[0].price : 0,\n      bestAsk: asks.length > 0 ? asks[0].price : 1\n    };\n  };\n\n  // Helper functions for network safety\n  const switchToTestnet = async (testnetName) => {\n    try {\n      if (!window.ethereum) {\n        alert('No wallet detected!');\n        return;\n      }\n      \n      let chainId;\n      switch (testnetName) {\n        case 'Sepolia':\n          chainId = '0xaa36a7';\n          break;\n        case 'Goerli':\n          chainId = '0x5';\n          break;\n        case 'Mumbai':\n          chainId = '0x13881';\n          break;\n        default:\n          chainId = '0xaa36a7'; // Default to Sepolia\n      }\n      \n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId }],\n      });\n      \n      console.log(`✅ Switched to ${testnetName} testnet`);\n    } catch (error) {\n      console.error('Error switching networks:', error);\n      alert(`Failed to switch to ${testnetName}: ${error.message}`);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h1>🚀 CLOB Trading System</h1>\n        <p>Central Limit Order Book for Binary Markets</p>\n      </header>\n      \n      {/* Safety Banner */}\n      <div className=\"safety-banner\">\n        <div className=\"safety-content\">\n          <span className=\"safety-icon\">⚠️</span>\n          <strong>SAFETY WARNING:</strong> This is a development/testing system. \n          Only connect wallets with testnet accounts. Never use mainnet wallets with real funds!\n          <span className=\"safety-icon\">⚠️</span>\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"header\">\n          <h1>CLOB Trading Interface</h1>\n        </div>\n\n        {/* Wallet Section */}\n        <div className=\"wallet-section\">\n          <h2>🔐 Wallet Connection</h2>\n          \n          {!isConnected ? (\n            <div className=\"wallet-controls\">\n              <button \n                className=\"connect-button\"\n                onClick={() => setShowWalletOptions(!showWalletOptions)}\n              >\n                Connect Wallet\n              </button>\n              \n              {showWalletOptions && (\n                <div className=\"wallet-options\">\n                  {availableWallets.map((wallet) => (\n                    <button\n                      key={wallet.name}\n                      className=\"wallet-option\"\n                      onClick={wallet.connect}\n                    >\n                      <span className=\"wallet-icon\">{wallet.icon}</span>\n                      {wallet.name}\n                    </button>\n                  ))}\n                  {availableWallets.length === 0 && (\n                    <div className=\"no-wallets-message\">\n                      <p>No Web3 wallets detected</p>\n                      <div className=\"wallet-install-links\">\n                        <a href=\"https://metamask.io/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"wallet-link\">\n                          Install MetaMask\n                        </a>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"wallet-info\">\n              <div className=\"account-info\">\n                <strong>Account:</strong> {account.slice(0, 6)}...{account.slice(-4)}\n              </div>\n              \n              {currentNetwork && (\n                <div className=\"network-info\">\n                  <strong>Network:</strong> {currentNetwork.name}\n                  {!isTestnet(currentNetwork.chainId) && (\n                    <span className=\"warning\">⚠️ MAINNET - UNSAFE!</span>\n                  )}\n                  {!isNetworkAllowed(currentNetwork.chainId) && (\n                    <span className=\"warning\">🚫 NETWORK BLOCKED!</span>\n                  )}\n                </div>\n              )}\n              \n              <div className=\"network-controls\">\n                <button \n                  className=\"testnet-button\"\n                  onClick={() => switchToTestnet('Sepolia')}\n                >\n                  Switch to Sepolia\n                </button>\n                <button \n                  className=\"testnet-button\"\n                  onClick={() => switchToTestnet('Goerli')}\n                >\n                  Switch to Goerli\n                </button>\n                <button \n                  className=\"testnet-button\"\n                  onClick={() => switchToTestnet('Mumbai')}\n                >\n                  Switch to Mumbai\n                </button>\n              </div>\n              \n              <button className=\"disconnect-button\" onClick={disconnectWallet}>\n                Disconnect\n              </button>\n            </div>\n          )}\n        </div>\n\n        {/* Market Selection Tabs */}\n        <div className=\"market-tabs\">\n          <button \n            className={`market-tab ${activeMarket === 'YES' ? 'active' : ''}`}\n            onClick={() => handleMarketChange('YES')}\n          >\n            YES Market\n          </button>\n          <button \n            className={`market-tab ${activeMarket === 'NO' ? 'active' : ''}`}\n            onClick={() => handleMarketChange('NO')}\n          >\n            NO Market\n          </button>\n        </div>\n\n        {/* Trading Section - Single Market */}\n        <div className=\"trading-section-single\">\n          <div className=\"market-card\">\n            <h3>{activeMarket} Market</h3>\n            <form className=\"order-form\" onSubmit={placeOrder}>\n              <input type=\"hidden\" name=\"market\" value={activeMarket} />\n              \n              <div className=\"form-group\">\n                <label>Side:</label>\n                <select name=\"side\" value={orderForm.side} onChange={handleInputChange}>\n                  <option value=\"Buy\">Buy</option>\n                  <option value=\"Sell\">Sell</option>\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <label>Price (0.0 - 1.0):</label>\n                <input\n                  type=\"number\"\n                  name=\"price\"\n                  value={orderForm.price}\n                  onChange={handleInputChange}\n                  step=\"0.01\"\n                  min=\"0\"\n                  max=\"1\"\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Quantity (whole shares):</label>\n                <input\n                  type=\"number\"\n                  name=\"quantity\"\n                  value={orderForm.quantity}\n                  onChange={handleInputChange}\n                  step=\"1\"\n                  min=\"1\"\n                  required\n                />\n              </div>\n\n              <button type=\"submit\" className=\"submit-button\" disabled={!isConnected}>\n                Place Order\n              </button>\n            </form>\n\n            {/* Order Book for Active Market */}\n            <div className=\"order-book\">\n              <h4>Order Book</h4>\n              {(() => {\n                const marketOrders = getOrderBook(activeMarket);\n                const { bestBid, bestAsk } = getBestPrices(activeMarket);\n                return (\n                  <div>\n                    <div className=\"order-row\">\n                      <span>Best Bid: <span className=\"bid\">{bestBid.toFixed(3)}</span></span>\n                      <span>Best Ask: <span className=\"ask\">{bestAsk.toFixed(3)}</span></span>\n                    </div>\n                    {marketOrders.slice(0, 10).map(order => (\n                      <div key={order.id} className=\"order-row\">\n                        <span className={order.side === 'Buy' ? 'bid' : 'ask'}>\n                          {order.side} {order.qty} @ {order.price.toFixed(3)}\n                        </span>\n                        <button \n                          onClick={() => cancelOrder(order.id)}\n                          style={{background: '#f44336', color: 'white', border: 'none', padding: '4px 8px', borderRadius: '4px', cursor: 'pointer'}}\n                        >\n                          Cancel\n                        </button>\n                      </div>\n                    ))}\n                    {marketOrders.length === 0 && (\n                      <p style={{textAlign: 'center', color: '#888', fontStyle: 'italic'}}>\n                        No orders in this market yet\n                      </p>\n                    )}\n                  </div>\n                );\n              })()}\n            </div>\n          </div>\n        </div>\n\n        {/* Recent Trades */}\n        <div className=\"trades-section\">\n          <h3>Recent Trades</h3>\n          {trades.length === 0 ? (\n            <p>No trades yet</p>\n          ) : (\n            trades.slice(0, 10).map(trade => (\n              <div key={trade.id} className=\"trade-row\">\n                <span>{trade.market}</span>\n                <span>{trade.buyer.slice(0, 6)}...{trade.buyer.slice(-4)} → {trade.seller.slice(0, 6)}...{trade.seller.slice(-4)}</span>\n                <span>{trade.qty} @ {trade.price.toFixed(3)}</span>\n                <span>{new Date(trade.timestamp * 1000).toLocaleTimeString()}</span>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}