{"ast":null,"code":"var _jsxFileName = \"/Users/raymeind/mini-etf/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { CONFIG, isTestnet, getNetworkInfo, isNetworkAllowed } from './config';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [showWalletOptions, setShowWalletOptions] = useState(false);\n  const [orders, setOrders] = useState([]);\n  const [trades, setTrades] = useState([]);\n  const [activeMarket, setActiveMarket] = useState('YES'); // Track active market tab\n  const [availableWallets, setAvailableWallets] = useState([]);\n  const [currentNetwork, setCurrentNetwork] = useState(null);\n  const [orderForm, setOrderForm] = useState({\n    market: 'YES',\n    side: 'Buy',\n    price: '',\n    quantity: '',\n    marketId: 'test_market'\n  });\n\n  // Detect available wallets on component mount\n  useEffect(() => {\n    detectAvailableWallets();\n  }, []);\n\n  // Function to detect which wallets are available\n  const detectAvailableWallets = () => {\n    const wallets = [];\n    if (typeof window.ethereum !== 'undefined') {\n      if (window.ethereum.isMetaMask) {\n        wallets.push({\n          id: 'metamask',\n          name: 'MetaMask',\n          icon: '🦊',\n          connect: connectMetaMask\n        });\n      }\n      if (window.ethereum.isCoinbaseWallet) {\n        wallets.push({\n          id: 'coinbase',\n          name: 'Coinbase Wallet',\n          icon: '🪙',\n          connect: connectCoinbaseWallet\n        });\n      }\n      if (window.ethereum.isTrust) {\n        wallets.push({\n          id: 'trust',\n          name: 'Trust Wallet',\n          icon: '🛡️',\n          connect: connectInjectedWallet\n        });\n      }\n      if (window.ethereum.isTokenPocket) {\n        wallets.push({\n          id: 'tokenpocket',\n          name: 'TokenPocket',\n          icon: '💼',\n          connect: connectInjectedWallet\n        });\n      }\n\n      // If no specific wallet is detected but ethereum is available, add generic option\n      if (wallets.length === 0) {\n        wallets.push({\n          id: 'generic',\n          name: 'Injected Wallet',\n          icon: '💼',\n          connect: connectInjectedWallet\n        });\n      }\n    }\n    setAvailableWallets(wallets);\n  };\n\n  // Connect to MetaMask\n  const connectMetaMask = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && window.ethereum.isMetaMask) {\n        // Request account access\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n\n        // Check if we're on a testnet\n        const chainId = await window.ethereum.request({\n          method: 'eth_chainId'\n        });\n        const networkName = getNetworkInfo(chainId).name;\n        setCurrentNetwork({\n          chainId,\n          name: networkName\n        });\n        if (!isTestnet(chainId)) {\n          const networkInfo = getNetworkInfo(chainId);\n          alert(`⚠️ SAFETY WARNING: You're connected to ${networkInfo.name} (${chainId})!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch to a testnet like Sepolia, Goerli, or Mumbai before trading.`);\n          return;\n        }\n        if (!isNetworkAllowed(chainId)) {\n          alert(`⚠️ NETWORK BLOCKED: ${getNetworkInfo(chainId).name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          return;\n        }\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        setAccount(accounts[0]);\n        setProvider(provider);\n        setSigner(signer);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n        console.log(`✅ Connected to ${networkName} testnet safely`);\n\n        // Listen for network changes\n        window.ethereum.on('chainChanged', async newChainId => {\n          const newNetworkInfo = getNetworkInfo(newChainId);\n          setCurrentNetwork({\n            chainId: newChainId,\n            name: newNetworkInfo.name\n          });\n          if (!isTestnet(newChainId)) {\n            alert(`⚠️ NETWORK CHANGED: You're now on ${newNetworkInfo.name}!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch back to a testnet for safe testing.`);\n          }\n          if (!isNetworkAllowed(newChainId)) {\n            alert(`⚠️ NETWORK BLOCKED: ${newNetworkInfo.name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          }\n        });\n      } else {\n        alert('MetaMask not found! Please install MetaMask extension.');\n      }\n    } catch (error) {\n      console.error('Error connecting to MetaMask:', error);\n      alert('Failed to connect to MetaMask: ' + error.message);\n    }\n  };\n\n  // Connect to Coinbase Wallet\n  const connectCoinbaseWallet = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && window.ethereum.isCoinbaseWallet) {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\n        const signer = await provider.getSigner();\n        setProvider(provider);\n        setSigner(signer);\n        setAccount(accounts[0]);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n      } else {\n        alert('Coinbase Wallet is not installed. Please install Coinbase Wallet first!');\n      }\n    } catch (error) {\n      console.error('Error connecting to Coinbase Wallet:', error);\n      alert('Failed to connect to Coinbase Wallet');\n    }\n  };\n\n  // Connect to any injected wallet\n  const connectInjectedWallet = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && !window.ethereum.isMetaMask && !window.ethereum.isCoinbaseWallet) {\n        // Request account access\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n\n        // Check if we're on a testnet\n        const chainId = await window.ethereum.request({\n          method: 'eth_chainId'\n        });\n        const networkName = getNetworkInfo(chainId).name;\n        setCurrentNetwork({\n          chainId,\n          name: networkName\n        });\n        if (!isTestnet(chainId)) {\n          const networkInfo = getNetworkInfo(chainId);\n          alert(`⚠️ SAFETY WARNING: You're connected to ${networkInfo.name} (${chainId})!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch to a testnet like Sepolia, Goerli, or Mumbai before trading.`);\n          return;\n        }\n        if (!isNetworkAllowed(chainId)) {\n          alert(`⚠️ NETWORK BLOCKED: ${getNetworkInfo(chainId).name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          return;\n        }\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        setAccount(accounts[0]);\n        setProvider(provider);\n        setSigner(signer);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n        console.log(`✅ Connected to ${networkName} testnet safely`);\n\n        // Listen for network changes\n        window.ethereum.on('chainChanged', async newChainId => {\n          const newNetworkInfo = getNetworkInfo(newChainId);\n          setCurrentNetwork({\n            chainId: newChainId,\n            name: newNetworkInfo.name\n          });\n          if (!isTestnet(newChainId)) {\n            alert(`⚠️ NETWORK CHANGED: You're now on ${newNetworkInfo.name}!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch back to a testnet for safe testing.`);\n          }\n          if (!isNetworkAllowed(newChainId)) {\n            alert(`⚠️ NETWORK BLOCKED: ${newNetworkInfo.name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          }\n        });\n      } else {\n        alert('No injected wallet found!');\n      }\n    } catch (error) {\n      console.error('Error connecting to injected wallet:', error);\n      alert('Failed to connect to wallet: ' + error.message);\n    }\n  };\n\n  // Disconnect wallet\n  const disconnectWallet = () => {\n    setAccount(null);\n    setProvider(null);\n    setSigner(null);\n    setIsConnected(false);\n    setShowWalletOptions(false);\n  };\n\n  // Handle market tab change\n  const handleMarketChange = market => {\n    setActiveMarket(market);\n    setOrderForm(prev => ({\n      ...prev,\n      market: market\n    }));\n  };\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setOrderForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Place order\n  const placeOrder = async e => {\n    e.preventDefault();\n    if (!isConnected) {\n      alert('Please connect your wallet first');\n      return;\n    }\n    if (!orderForm.price || !orderForm.quantity) {\n      alert('Please fill in all fields');\n      return;\n    }\n    const price = parseFloat(orderForm.price);\n    const quantity = parseInt(orderForm.quantity);\n    if (price < 0 || price > 1 || quantity <= 0 || !Number.isInteger(quantity)) {\n      alert('Invalid price or quantity. Price must be between 0 and 1, quantity must be a positive integer.');\n      return;\n    }\n    try {\n      // Create order object\n      const order = {\n        id: Date.now(),\n        user: account,\n        side: orderForm.side,\n        price: price,\n        qty: quantity,\n        timestamp: Math.floor(Date.now() / 1000),\n        market: orderForm.market,\n        marketId: orderForm.marketId\n      };\n\n      // Add to orders list\n      setOrders(prev => [...prev, order]);\n\n      // Simulate order matching (in a real app, this would call your CLOB backend)\n      setTimeout(() => {\n        // Simulate a trade if there's a matching order\n        const matchingOrder = orders.find(o => o.market === order.market && o.side !== order.side && (order.side === 'Buy' && o.price <= order.price || order.side === 'Sell' && o.price >= order.price));\n        if (matchingOrder) {\n          const trade = {\n            id: Date.now(),\n            buyer: order.side === 'Buy' ? order.user : matchingOrder.user,\n            seller: order.side === 'Sell' ? order.user : matchingOrder.user,\n            qty: Math.min(order.qty, matchingOrder.qty),\n            price: order.side === 'Buy' ? order.price : matchingOrder.price,\n            market: order.market,\n            marketId: order.marketId,\n            timestamp: Math.floor(Date.now() / 1000)\n          };\n          setTrades(prev => [trade, ...prev]);\n\n          // Remove matched orders\n          setOrders(prev => prev.filter(o => o.id !== order.id && o.id !== matchingOrder.id));\n        }\n      }, 1000);\n\n      // Reset form\n      setOrderForm({\n        market: activeMarket,\n        side: 'Buy',\n        price: '',\n        quantity: '',\n        marketId: 'test_market'\n      });\n      alert('Order placed successfully!');\n    } catch (error) {\n      console.error('Error placing order:', error);\n      alert('Failed to place order');\n    }\n  };\n\n  // Cancel order\n  const cancelOrder = orderId => {\n    setOrders(prev => prev.filter(o => o.id !== orderId));\n    alert('Order cancelled');\n  };\n\n  // Get order book for a specific market\n  const getOrderBook = market => {\n    return orders.filter(o => o.market === market);\n  };\n\n  // Get best bid and ask for a market\n  const getBestPrices = market => {\n    const marketOrders = getOrderBook(market);\n    const bids = marketOrders.filter(o => o.side === 'Buy').sort((a, b) => b.price - a.price);\n    const asks = marketOrders.filter(o => o.side === 'Sell').sort((a, b) => a.price - b.price);\n    return {\n      bestBid: bids.length > 0 ? bids[0].price : 0,\n      bestAsk: asks.length > 0 ? asks[0].price : 1\n    };\n  };\n\n  // Helper functions for network safety\n  const switchToTestnet = async testnetName => {\n    try {\n      if (!window.ethereum) {\n        alert('No wallet detected!');\n        return;\n      }\n      let chainId;\n      switch (testnetName) {\n        case 'Sepolia':\n          chainId = '0xaa36a7';\n          break;\n        case 'Goerli':\n          chainId = '0x5';\n          break;\n        case 'Mumbai':\n          chainId = '0x13881';\n          break;\n        default:\n          chainId = '0xaa36a7';\n        // Default to Sepolia\n      }\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{\n          chainId\n        }]\n      });\n      console.log(`✅ Switched to ${testnetName} testnet`);\n    } catch (error) {\n      console.error('Error switching networks:', error);\n      alert(`Failed to switch to ${testnetName}: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDE80 CLOB Trading System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Central Limit Order Book for Binary Markets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"safety-banner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"safety-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"safety-icon\",\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"SAFETY WARNING:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), \" This is a development/testing system. Only connect wallets with testnet accounts. Never use mainnet wallets with real funds!\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"safety-icon\",\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"CLOB Trading Interface\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDD10 Wallet Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), !isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"connect-button\",\n            onClick: () => setShowWalletOptions(!showWalletOptions),\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this), showWalletOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wallet-options\",\n            children: [availableWallets.map(wallet => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"wallet-option\",\n              onClick: wallet.connect,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"wallet-icon\",\n                children: wallet.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 23\n              }, this), wallet.name]\n            }, wallet.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 21\n            }, this)), availableWallets.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-wallets-message\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No Web3 wallets detected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wallet-install-links\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"https://metamask.io/\",\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  className: \"wallet-link\",\n                  children: \"Install MetaMask\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Account:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this), \" \", account.slice(0, 6), \"...\", account.slice(-4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this), currentNetwork && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"network-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Network:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 19\n            }, this), \" \", currentNetwork.name, !isTestnet(currentNetwork.chainId) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"warning\",\n              children: \"\\u26A0\\uFE0F MAINNET - UNSAFE!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"network-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"testnet-button\",\n              onClick: () => switchToTestnet('Sepolia'),\n              children: \"Switch to Sepolia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"testnet-button\",\n              onClick: () => switchToTestnet('Goerli'),\n              children: \"Switch to Goerli\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"testnet-button\",\n              onClick: () => switchToTestnet('Mumbai'),\n              children: \"Switch to Mumbai\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"disconnect-button\",\n            onClick: disconnectWallet,\n            children: \"Disconnect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"market-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `market-tab ${activeMarket === 'YES' ? 'active' : ''}`,\n          onClick: () => handleMarketChange('YES'),\n          children: \"YES Market\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `market-tab ${activeMarket === 'NO' ? 'active' : ''}`,\n          onClick: () => handleMarketChange('NO'),\n          children: \"NO Market\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trading-section-single\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"market-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [activeMarket, \" Market\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"order-form\",\n            onSubmit: placeOrder,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              name: \"market\",\n              value: activeMarket\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Side:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"side\",\n                value: orderForm.side,\n                onChange: handleInputChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Buy\",\n                  children: \"Buy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Sell\",\n                  children: \"Sell\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Price (0.0 - 1.0):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"price\",\n                value: orderForm.price,\n                onChange: handleInputChange,\n                step: \"0.01\",\n                min: \"0\",\n                max: \"1\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Quantity (whole shares):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"quantity\",\n                value: orderForm.quantity,\n                onChange: handleInputChange,\n                step: \"1\",\n                min: \"1\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"submit-button\",\n              disabled: !isConnected,\n              children: \"Place Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-book\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Order Book\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 15\n            }, this), (() => {\n              const marketOrders = getOrderBook(activeMarket);\n              const {\n                bestBid,\n                bestAsk\n              } = getBestPrices(activeMarket);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"order-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Best Bid: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"bid\",\n                      children: bestBid.toFixed(3)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 534,\n                      columnNumber: 39\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 534,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Best Ask: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"ask\",\n                      children: bestAsk.toFixed(3)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 535,\n                      columnNumber: 39\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 535,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 21\n                }, this), marketOrders.slice(0, 10).map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"order-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: order.side === 'Buy' ? 'bid' : 'ask',\n                    children: [order.side, \" \", order.qty, \" @ \", order.price.toFixed(3)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 539,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => cancelOrder(order.id),\n                    style: {\n                      background: '#f44336',\n                      color: 'white',\n                      border: 'none',\n                      padding: '4px 8px',\n                      borderRadius: '4px',\n                      cursor: 'pointer'\n                    },\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 542,\n                    columnNumber: 25\n                  }, this)]\n                }, order.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 23\n                }, this)), marketOrders.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    textAlign: 'center',\n                    color: '#888',\n                    fontStyle: 'italic'\n                  },\n                  children: \"No orders in this market yet\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 19\n              }, this);\n            })()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trades-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Recent Trades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this), trades.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No trades yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 13\n        }, this) : trades.slice(0, 10).map(trade => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trade-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: trade.market\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [trade.buyer.slice(0, 6), \"...\", trade.buyer.slice(-4), \" \\u2192 \", trade.seller.slice(0, 6), \"...\", trade.seller.slice(-4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [trade.qty, \" @ \", trade.price.toFixed(3)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: new Date(trade.timestamp * 1000).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 17\n          }, this)]\n        }, trade.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 360,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jdjjOMR6CSVyQYsN988Sb1arGVc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","CONFIG","isTestnet","getNetworkInfo","isNetworkAllowed","jsxDEV","_jsxDEV","App","_s","account","setAccount","provider","setProvider","signer","setSigner","isConnected","setIsConnected","showWalletOptions","setShowWalletOptions","orders","setOrders","trades","setTrades","activeMarket","setActiveMarket","availableWallets","setAvailableWallets","currentNetwork","setCurrentNetwork","orderForm","setOrderForm","market","side","price","quantity","marketId","detectAvailableWallets","wallets","window","ethereum","isMetaMask","push","id","name","icon","connect","connectMetaMask","isCoinbaseWallet","connectCoinbaseWallet","isTrust","connectInjectedWallet","isTokenPocket","length","accounts","request","method","chainId","networkName","networkInfo","alert","BrowserProvider","getSigner","console","log","on","newChainId","newNetworkInfo","error","message","send","disconnectWallet","handleMarketChange","prev","handleInputChange","e","value","target","placeOrder","preventDefault","parseFloat","parseInt","Number","isInteger","order","Date","now","user","qty","timestamp","Math","floor","setTimeout","matchingOrder","find","o","trade","buyer","seller","min","filter","cancelOrder","orderId","getOrderBook","getBestPrices","marketOrders","bids","sort","a","b","asks","bestBid","bestAsk","switchToTestnet","testnetName","params","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","wallet","href","rel","slice","onSubmit","type","onChange","step","max","required","disabled","toFixed","style","background","color","border","padding","borderRadius","cursor","textAlign","fontStyle","toLocaleTimeString","_c","$RefreshReg$"],"sources":["/Users/raymeind/mini-etf/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { CONFIG, isTestnet, getNetworkInfo, isNetworkAllowed } from './config';\nimport './App.css';\n\nfunction App() {\n  const [account, setAccount] = useState('');\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [showWalletOptions, setShowWalletOptions] = useState(false);\n  const [orders, setOrders] = useState([]);\n  const [trades, setTrades] = useState([]);\n  const [activeMarket, setActiveMarket] = useState('YES'); // Track active market tab\n  const [availableWallets, setAvailableWallets] = useState([]);\n  const [currentNetwork, setCurrentNetwork] = useState(null);\n  const [orderForm, setOrderForm] = useState({\n    market: 'YES',\n    side: 'Buy',\n    price: '',\n    quantity: '',\n    marketId: 'test_market'\n  });\n\n  // Detect available wallets on component mount\n  useEffect(() => {\n    detectAvailableWallets();\n  }, []);\n\n  // Function to detect which wallets are available\n  const detectAvailableWallets = () => {\n    const wallets = [];\n    \n    if (typeof window.ethereum !== 'undefined') {\n      if (window.ethereum.isMetaMask) {\n        wallets.push({ id: 'metamask', name: 'MetaMask', icon: '🦊', connect: connectMetaMask });\n      }\n      if (window.ethereum.isCoinbaseWallet) {\n        wallets.push({ id: 'coinbase', name: 'Coinbase Wallet', icon: '🪙', connect: connectCoinbaseWallet });\n      }\n      if (window.ethereum.isTrust) {\n        wallets.push({ id: 'trust', name: 'Trust Wallet', icon: '🛡️', connect: connectInjectedWallet });\n      }\n      if (window.ethereum.isTokenPocket) {\n        wallets.push({ id: 'tokenpocket', name: 'TokenPocket', icon: '💼', connect: connectInjectedWallet });\n      }\n      \n      // If no specific wallet is detected but ethereum is available, add generic option\n      if (wallets.length === 0) {\n        wallets.push({ id: 'generic', name: 'Injected Wallet', icon: '💼', connect: connectInjectedWallet });\n      }\n    }\n    \n    setAvailableWallets(wallets);\n  };\n\n  // Connect to MetaMask\n  const connectMetaMask = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && window.ethereum.isMetaMask) {\n        // Request account access\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        \n        // Check if we're on a testnet\n        const chainId = await window.ethereum.request({ method: 'eth_chainId' });\n        const networkName = getNetworkInfo(chainId).name;\n        setCurrentNetwork({ chainId, name: networkName });\n        \n        if (!isTestnet(chainId)) {\n          const networkInfo = getNetworkInfo(chainId);\n          alert(`⚠️ SAFETY WARNING: You're connected to ${networkInfo.name} (${chainId})!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch to a testnet like Sepolia, Goerli, or Mumbai before trading.`);\n          return;\n        }\n        \n        if (!isNetworkAllowed(chainId)) {\n          alert(`⚠️ NETWORK BLOCKED: ${getNetworkInfo(chainId).name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          return;\n        }\n        \n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        \n        setAccount(accounts[0]);\n        setProvider(provider);\n        setSigner(signer);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n        \n        console.log(`✅ Connected to ${networkName} testnet safely`);\n        \n        // Listen for network changes\n        window.ethereum.on('chainChanged', async (newChainId) => {\n          const newNetworkInfo = getNetworkInfo(newChainId);\n          setCurrentNetwork({ chainId: newChainId, name: newNetworkInfo.name });\n          \n          if (!isTestnet(newChainId)) {\n            alert(`⚠️ NETWORK CHANGED: You're now on ${newNetworkInfo.name}!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch back to a testnet for safe testing.`);\n          }\n          \n          if (!isNetworkAllowed(newChainId)) {\n            alert(`⚠️ NETWORK BLOCKED: ${newNetworkInfo.name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          }\n        });\n      } else {\n        alert('MetaMask not found! Please install MetaMask extension.');\n      }\n    } catch (error) {\n      console.error('Error connecting to MetaMask:', error);\n      alert('Failed to connect to MetaMask: ' + error.message);\n    }\n  };\n\n  // Connect to Coinbase Wallet\n  const connectCoinbaseWallet = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && window.ethereum.isCoinbaseWallet) {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\n        const signer = await provider.getSigner();\n        \n        setProvider(provider);\n        setSigner(signer);\n        setAccount(accounts[0]);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n      } else {\n        alert('Coinbase Wallet is not installed. Please install Coinbase Wallet first!');\n      }\n    } catch (error) {\n      console.error('Error connecting to Coinbase Wallet:', error);\n      alert('Failed to connect to Coinbase Wallet');\n    }\n  };\n\n  // Connect to any injected wallet\n  const connectInjectedWallet = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && !window.ethereum.isMetaMask && !window.ethereum.isCoinbaseWallet) {\n        // Request account access\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        \n        // Check if we're on a testnet\n        const chainId = await window.ethereum.request({ method: 'eth_chainId' });\n        const networkName = getNetworkInfo(chainId).name;\n        setCurrentNetwork({ chainId, name: networkName });\n        \n        if (!isTestnet(chainId)) {\n          const networkInfo = getNetworkInfo(chainId);\n          alert(`⚠️ SAFETY WARNING: You're connected to ${networkInfo.name} (${chainId})!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch to a testnet like Sepolia, Goerli, or Mumbai before trading.`);\n          return;\n        }\n        \n        if (!isNetworkAllowed(chainId)) {\n          alert(`⚠️ NETWORK BLOCKED: ${getNetworkInfo(chainId).name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          return;\n        }\n        \n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        \n        setAccount(accounts[0]);\n        setProvider(provider);\n        setSigner(signer);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n        \n        console.log(`✅ Connected to ${networkName} testnet safely`);\n        \n        // Listen for network changes\n        window.ethereum.on('chainChanged', async (newChainId) => {\n          const newNetworkInfo = getNetworkInfo(newChainId);\n          setCurrentNetwork({ chainId: newChainId, name: newNetworkInfo.name });\n          \n          if (!isTestnet(newChainId)) {\n            alert(`⚠️ NETWORK CHANGED: You're now on ${newNetworkInfo.name}!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch back to a testnet for safe testing.`);\n          }\n          \n          if (!isNetworkAllowed(newChainId)) {\n            alert(`⚠️ NETWORK BLOCKED: ${newNetworkInfo.name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          }\n        });\n      } else {\n        alert('No injected wallet found!');\n      }\n    } catch (error) {\n      console.error('Error connecting to injected wallet:', error);\n      alert('Failed to connect to wallet: ' + error.message);\n    }\n  };\n\n  // Disconnect wallet\n  const disconnectWallet = () => {\n    setAccount(null);\n    setProvider(null);\n    setSigner(null);\n    setIsConnected(false);\n    setShowWalletOptions(false);\n  };\n\n  // Handle market tab change\n  const handleMarketChange = (market) => {\n    setActiveMarket(market);\n    setOrderForm(prev => ({\n      ...prev,\n      market: market\n    }));\n  };\n\n  // Handle form input changes\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setOrderForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Place order\n  const placeOrder = async (e) => {\n    e.preventDefault();\n    \n    if (!isConnected) {\n      alert('Please connect your wallet first');\n      return;\n    }\n\n    if (!orderForm.price || !orderForm.quantity) {\n      alert('Please fill in all fields');\n      return;\n    }\n\n    const price = parseFloat(orderForm.price);\n    const quantity = parseInt(orderForm.quantity);\n\n    if (price < 0 || price > 1 || quantity <= 0 || !Number.isInteger(quantity)) {\n      alert('Invalid price or quantity. Price must be between 0 and 1, quantity must be a positive integer.');\n      return;\n    }\n\n    try {\n      // Create order object\n      const order = {\n        id: Date.now(),\n        user: account,\n        side: orderForm.side,\n        price: price,\n        qty: quantity,\n        timestamp: Math.floor(Date.now() / 1000),\n        market: orderForm.market,\n        marketId: orderForm.marketId\n      };\n\n      // Add to orders list\n      setOrders(prev => [...prev, order]);\n\n      // Simulate order matching (in a real app, this would call your CLOB backend)\n      setTimeout(() => {\n        // Simulate a trade if there's a matching order\n        const matchingOrder = orders.find(o => \n          o.market === order.market &&\n          o.side !== order.side &&\n          ((order.side === 'Buy' && o.price <= order.price) ||\n           (order.side === 'Sell' && o.price >= order.price))\n        );\n\n        if (matchingOrder) {\n          const trade = {\n            id: Date.now(),\n            buyer: order.side === 'Buy' ? order.user : matchingOrder.user,\n            seller: order.side === 'Sell' ? order.user : matchingOrder.user,\n            qty: Math.min(order.qty, matchingOrder.qty),\n            price: order.side === 'Buy' ? order.price : matchingOrder.price,\n            market: order.market,\n            marketId: order.marketId,\n            timestamp: Math.floor(Date.now() / 1000)\n          };\n\n          setTrades(prev => [trade, ...prev]);\n          \n          // Remove matched orders\n          setOrders(prev => prev.filter(o => o.id !== order.id && o.id !== matchingOrder.id));\n        }\n      }, 1000);\n\n      // Reset form\n      setOrderForm({\n        market: activeMarket,\n        side: 'Buy',\n        price: '',\n        quantity: '',\n        marketId: 'test_market'\n      });\n\n      alert('Order placed successfully!');\n    } catch (error) {\n      console.error('Error placing order:', error);\n      alert('Failed to place order');\n    }\n  };\n\n  // Cancel order\n  const cancelOrder = (orderId) => {\n    setOrders(prev => prev.filter(o => o.id !== orderId));\n    alert('Order cancelled');\n  };\n\n  // Get order book for a specific market\n  const getOrderBook = (market) => {\n    return orders.filter(o => o.market === market);\n  };\n\n  // Get best bid and ask for a market\n  const getBestPrices = (market) => {\n    const marketOrders = getOrderBook(market);\n    const bids = marketOrders.filter(o => o.side === 'Buy').sort((a, b) => b.price - a.price);\n    const asks = marketOrders.filter(o => o.side === 'Sell').sort((a, b) => a.price - b.price);\n    \n    return {\n      bestBid: bids.length > 0 ? bids[0].price : 0,\n      bestAsk: asks.length > 0 ? asks[0].price : 1\n    };\n  };\n\n  // Helper functions for network safety\n  const switchToTestnet = async (testnetName) => {\n    try {\n      if (!window.ethereum) {\n        alert('No wallet detected!');\n        return;\n      }\n      \n      let chainId;\n      switch (testnetName) {\n        case 'Sepolia':\n          chainId = '0xaa36a7';\n          break;\n        case 'Goerli':\n          chainId = '0x5';\n          break;\n        case 'Mumbai':\n          chainId = '0x13881';\n          break;\n        default:\n          chainId = '0xaa36a7'; // Default to Sepolia\n      }\n      \n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId }],\n      });\n      \n      console.log(`✅ Switched to ${testnetName} testnet`);\n    } catch (error) {\n      console.error('Error switching networks:', error);\n      alert(`Failed to switch to ${testnetName}: ${error.message}`);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h1>🚀 CLOB Trading System</h1>\n        <p>Central Limit Order Book for Binary Markets</p>\n      </header>\n      \n      {/* Safety Banner */}\n      <div className=\"safety-banner\">\n        <div className=\"safety-content\">\n          <span className=\"safety-icon\">⚠️</span>\n          <strong>SAFETY WARNING:</strong> This is a development/testing system. \n          Only connect wallets with testnet accounts. Never use mainnet wallets with real funds!\n          <span className=\"safety-icon\">⚠️</span>\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"header\">\n          <h1>CLOB Trading Interface</h1>\n        </div>\n\n        {/* Wallet Section */}\n        <div className=\"wallet-section\">\n          <h2>🔐 Wallet Connection</h2>\n          \n          {!isConnected ? (\n            <div className=\"wallet-controls\">\n              <button \n                className=\"connect-button\"\n                onClick={() => setShowWalletOptions(!showWalletOptions)}\n              >\n                Connect Wallet\n              </button>\n              \n              {showWalletOptions && (\n                <div className=\"wallet-options\">\n                  {availableWallets.map((wallet) => (\n                    <button\n                      key={wallet.name}\n                      className=\"wallet-option\"\n                      onClick={wallet.connect}\n                    >\n                      <span className=\"wallet-icon\">{wallet.icon}</span>\n                      {wallet.name}\n                    </button>\n                  ))}\n                  {availableWallets.length === 0 && (\n                    <div className=\"no-wallets-message\">\n                      <p>No Web3 wallets detected</p>\n                      <div className=\"wallet-install-links\">\n                        <a href=\"https://metamask.io/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"wallet-link\">\n                          Install MetaMask\n                        </a>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"wallet-info\">\n              <div className=\"account-info\">\n                <strong>Account:</strong> {account.slice(0, 6)}...{account.slice(-4)}\n              </div>\n              \n              {currentNetwork && (\n                <div className=\"network-info\">\n                  <strong>Network:</strong> {currentNetwork.name}\n                  {!isTestnet(currentNetwork.chainId) && (\n                    <span className=\"warning\">⚠️ MAINNET - UNSAFE!</span>\n                  )}\n                </div>\n              )}\n              \n              <div className=\"network-controls\">\n                <button \n                  className=\"testnet-button\"\n                  onClick={() => switchToTestnet('Sepolia')}\n                >\n                  Switch to Sepolia\n                </button>\n                <button \n                  className=\"testnet-button\"\n                  onClick={() => switchToTestnet('Goerli')}\n                >\n                  Switch to Goerli\n                </button>\n                <button \n                  className=\"testnet-button\"\n                  onClick={() => switchToTestnet('Mumbai')}\n                >\n                  Switch to Mumbai\n                </button>\n              </div>\n              \n              <button className=\"disconnect-button\" onClick={disconnectWallet}>\n                Disconnect\n              </button>\n            </div>\n          )}\n        </div>\n\n        {/* Market Selection Tabs */}\n        <div className=\"market-tabs\">\n          <button \n            className={`market-tab ${activeMarket === 'YES' ? 'active' : ''}`}\n            onClick={() => handleMarketChange('YES')}\n          >\n            YES Market\n          </button>\n          <button \n            className={`market-tab ${activeMarket === 'NO' ? 'active' : ''}`}\n            onClick={() => handleMarketChange('NO')}\n          >\n            NO Market\n          </button>\n        </div>\n\n        {/* Trading Section - Single Market */}\n        <div className=\"trading-section-single\">\n          <div className=\"market-card\">\n            <h3>{activeMarket} Market</h3>\n            <form className=\"order-form\" onSubmit={placeOrder}>\n              <input type=\"hidden\" name=\"market\" value={activeMarket} />\n              \n              <div className=\"form-group\">\n                <label>Side:</label>\n                <select name=\"side\" value={orderForm.side} onChange={handleInputChange}>\n                  <option value=\"Buy\">Buy</option>\n                  <option value=\"Sell\">Sell</option>\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <label>Price (0.0 - 1.0):</label>\n                <input\n                  type=\"number\"\n                  name=\"price\"\n                  value={orderForm.price}\n                  onChange={handleInputChange}\n                  step=\"0.01\"\n                  min=\"0\"\n                  max=\"1\"\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Quantity (whole shares):</label>\n                <input\n                  type=\"number\"\n                  name=\"quantity\"\n                  value={orderForm.quantity}\n                  onChange={handleInputChange}\n                  step=\"1\"\n                  min=\"1\"\n                  required\n                />\n              </div>\n\n              <button type=\"submit\" className=\"submit-button\" disabled={!isConnected}>\n                Place Order\n              </button>\n            </form>\n\n            {/* Order Book for Active Market */}\n            <div className=\"order-book\">\n              <h4>Order Book</h4>\n              {(() => {\n                const marketOrders = getOrderBook(activeMarket);\n                const { bestBid, bestAsk } = getBestPrices(activeMarket);\n                return (\n                  <div>\n                    <div className=\"order-row\">\n                      <span>Best Bid: <span className=\"bid\">{bestBid.toFixed(3)}</span></span>\n                      <span>Best Ask: <span className=\"ask\">{bestAsk.toFixed(3)}</span></span>\n                    </div>\n                    {marketOrders.slice(0, 10).map(order => (\n                      <div key={order.id} className=\"order-row\">\n                        <span className={order.side === 'Buy' ? 'bid' : 'ask'}>\n                          {order.side} {order.qty} @ {order.price.toFixed(3)}\n                        </span>\n                        <button \n                          onClick={() => cancelOrder(order.id)}\n                          style={{background: '#f44336', color: 'white', border: 'none', padding: '4px 8px', borderRadius: '4px', cursor: 'pointer'}}\n                        >\n                          Cancel\n                        </button>\n                      </div>\n                    ))}\n                    {marketOrders.length === 0 && (\n                      <p style={{textAlign: 'center', color: '#888', fontStyle: 'italic'}}>\n                        No orders in this market yet\n                      </p>\n                    )}\n                  </div>\n                );\n              })()}\n            </div>\n          </div>\n        </div>\n\n        {/* Recent Trades */}\n        <div className=\"trades-section\">\n          <h3>Recent Trades</h3>\n          {trades.length === 0 ? (\n            <p>No trades yet</p>\n          ) : (\n            trades.slice(0, 10).map(trade => (\n              <div key={trade.id} className=\"trade-row\">\n                <span>{trade.market}</span>\n                <span>{trade.buyer.slice(0, 6)}...{trade.buyer.slice(-4)} → {trade.seller.slice(0, 6)}...{trade.seller.slice(-4)}</span>\n                <span>{trade.qty} @ {trade.price.toFixed(3)}</span>\n                <span>{new Date(trade.timestamp * 1000).toLocaleTimeString()}</span>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}