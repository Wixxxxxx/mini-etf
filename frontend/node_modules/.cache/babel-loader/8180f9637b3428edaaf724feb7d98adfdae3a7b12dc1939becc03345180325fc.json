{"ast":null,"code":"var _jsxFileName = \"/Users/raymeind/mini-etf/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { CONFIG, isTestnet, getNetworkInfo, isNetworkAllowed } from './config';\nimport ChainlinkFeeds from './ChainlinkFeeds';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [showWalletOptions, setShowWalletOptions] = useState(false);\n  const [orders, setOrders] = useState([]);\n  const [trades, setTrades] = useState([]);\n  const [activeMarket, setActiveMarket] = useState('YES'); // Track active market tab\n  const [availableWallets, setAvailableWallets] = useState([]);\n  const [currentNetwork, setCurrentNetwork] = useState(null);\n  const [orderBookData, setOrderBookData] = useState({\n    bids: [],\n    asks: []\n  });\n  const [createdMarkets, setCreatedMarkets] = useState([]); // Store created prediction markets\n  const [selectedMarketId, setSelectedMarketId] = useState(null); // Currently selected market\n  const [orderForm, setOrderForm] = useState({\n    market: 'YES',\n    side: 'Buy',\n    price: '',\n    quantity: '',\n    marketId: null // Will be set to selected prediction market ID\n  });\n  const [currentPage, setCurrentPage] = useState('trading'); // 'trading' or 'feeds'\n\n  // Detect available wallets on component mount\n  useEffect(() => {\n    detectAvailableWallets();\n    // Load initial order book data\n    if (orderForm.marketId) {\n      refreshOrderBook();\n    }\n    // Load created prediction markets from localStorage\n    loadCreatedMarkets();\n  }, []);\n\n  // Load order book data when active market changes\n  useEffect(() => {\n    if (orderForm.marketId) {\n      refreshOrderBook();\n    }\n  }, [activeMarket, orderForm.marketId]);\n\n  // Auto-refresh order book every 3 seconds\n  useEffect(() => {\n    if (orderForm.marketId) {\n      const interval = setInterval(() => {\n        refreshOrderBook();\n      }, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [orderForm.marketId]);\n\n  // Auto-refresh user orders every 5 seconds\n  useEffect(() => {\n    if (isConnected && account) {\n      const interval = setInterval(() => {\n        loadUserOrders();\n      }, 5000);\n      return () => clearInterval(interval);\n    }\n  }, [isConnected, account]);\n\n  // Debug effect to log state changes\n  useEffect(() => {\n    console.log('=== CLOB STATE UPDATE ===');\n    console.log('createdMarkets:', createdMarkets);\n    console.log('selectedMarketId:', selectedMarketId);\n    console.log('currentPage:', currentPage);\n    console.log('=======================');\n  }, [createdMarkets, selectedMarketId, currentPage]);\n\n  // Debug effect to monitor order book data changes\n  useEffect(() => {\n    var _orderBookData$bids, _orderBookData$asks;\n    console.log('=== ORDER BOOK STATE CHANGE ===');\n    console.log('orderBookData:', orderBookData);\n    console.log('bids count:', (_orderBookData$bids = orderBookData.bids) === null || _orderBookData$bids === void 0 ? void 0 : _orderBookData$bids.length);\n    console.log('asks count:', (_orderBookData$asks = orderBookData.asks) === null || _orderBookData$asks === void 0 ? void 0 : _orderBookData$asks.length);\n    console.log('bids data:', orderBookData.bids);\n    console.log('asks data:', orderBookData.asks);\n    console.log('==============================');\n  }, [orderBookData]);\n\n  // Function to load created prediction markets from localStorage\n  const loadCreatedMarkets = () => {\n    try {\n      const stored = localStorage.getItem('createdMarkets');\n      console.log('Raw localStorage data:', stored);\n      if (stored) {\n        const markets = JSON.parse(stored);\n        console.log('Parsed markets:', markets);\n        console.log('Markets array length:', markets.length);\n        setCreatedMarkets(markets);\n\n        // If we have markets and none selected, select the first one\n        if (markets.length > 0 && !selectedMarketId) {\n          console.log('Setting first market as selected:', markets[0]);\n          setSelectedMarketId(markets[0].id);\n\n          // Also set the order form market ID\n          setOrderForm(prev => ({\n            ...prev,\n            marketId: markets[0].id.toString()\n          }));\n        }\n      } else {\n        console.log('No markets found in localStorage');\n        setCreatedMarkets([]);\n      }\n    } catch (error) {\n      console.error('Error loading created markets:', error);\n      setCreatedMarkets([]);\n    }\n  };\n\n  // Function to handle market selection\n  const handleMarketSelection = marketId => {\n    setSelectedMarketId(marketId);\n    const selectedMarket = createdMarkets.find(m => m.id === marketId);\n    if (selectedMarket) {\n      console.log('Selected market:', selectedMarket);\n\n      // Update order form with the selected market ID\n      setOrderForm(prev => ({\n        ...prev,\n        marketId: marketId.toString()\n      }));\n      console.log('Updated order form:', orderForm);\n\n      // Refresh order book for the new market\n      refreshOrderBook();\n    }\n  };\n\n  // Function to get currently selected market\n  const getSelectedMarket = () => {\n    return createdMarkets.find(m => m.id === selectedMarketId);\n  };\n\n  // Function to detect which wallets are available\n  const detectAvailableWallets = () => {\n    const wallets = [];\n    if (typeof window.ethereum !== 'undefined') {\n      if (window.ethereum.isMetaMask) {\n        wallets.push({\n          id: 'metamask',\n          name: 'MetaMask',\n          icon: '🦊',\n          connect: connectMetaMask\n        });\n      }\n      if (window.ethereum.isCoinbaseWallet) {\n        wallets.push({\n          id: 'coinbase',\n          name: 'Coinbase Wallet',\n          icon: '🪙',\n          connect: connectCoinbaseWallet\n        });\n      }\n      if (window.ethereum.isTrust) {\n        wallets.push({\n          id: 'trust',\n          name: 'Trust Wallet',\n          icon: '🛡️',\n          connect: connectInjectedWallet\n        });\n      }\n      if (window.ethereum.isTokenPocket) {\n        wallets.push({\n          id: 'tokenpocket',\n          name: 'TokenPocket',\n          icon: '💼',\n          connect: connectInjectedWallet\n        });\n      }\n\n      // If no specific wallet is detected but ethereum is available, add generic option\n      if (wallets.length === 0) {\n        wallets.push({\n          id: 'generic',\n          name: 'Injected Wallet',\n          icon: '💼',\n          connect: connectInjectedWallet\n        });\n      }\n    }\n    setAvailableWallets(wallets);\n  };\n\n  // Connect to MetaMask\n  const connectMetaMask = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && window.ethereum.isMetaMask) {\n        // Request account access\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n\n        // Check if we're on a testnet\n        const chainId = await window.ethereum.request({\n          method: 'eth_chainId'\n        });\n        const networkName = getNetworkInfo(chainId).name;\n        setCurrentNetwork({\n          chainId,\n          name: networkName\n        });\n        if (!isTestnet(chainId)) {\n          const networkInfo = getNetworkInfo(chainId);\n          alert(`⚠️ SAFETY WARNING: You're connected to ${networkInfo.name} (${chainId})!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch to a testnet like Sepolia, Goerli, or Mumbai before trading.`);\n          return;\n        }\n        if (!isNetworkAllowed(chainId)) {\n          alert(`⚠️ NETWORK BLOCKED: ${getNetworkInfo(chainId).name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          return;\n        }\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        setAccount(accounts[0]);\n        setProvider(provider);\n        setSigner(signer);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n        console.log(`✅ Connected to ${networkName} testnet safely`);\n\n        // Load user orders after connecting\n        setTimeout(() => {\n          loadUserOrders();\n        }, 1000);\n\n        // Listen for network changes\n        window.ethereum.on('chainChanged', async newChainId => {\n          const newNetworkInfo = getNetworkInfo(newChainId);\n          setCurrentNetwork({\n            chainId: newChainId,\n            name: newNetworkInfo.name\n          });\n          if (!isTestnet(newChainId)) {\n            alert(`⚠️ NETWORK CHANGED: You're now on ${newNetworkInfo.name}!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch back to a testnet for safe testing.`);\n          }\n          if (!isNetworkAllowed(newChainId)) {\n            alert(`⚠️ NETWORK BLOCKED: ${newNetworkInfo.name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          }\n        });\n      } else {\n        alert('MetaMask not found! Please install MetaMask extension.');\n      }\n    } catch (error) {\n      console.error('Error connecting to MetaMask:', error);\n      alert('Failed to connect to MetaMask: ' + error.message);\n    }\n  };\n\n  // Connect to Coinbase Wallet\n  const connectCoinbaseWallet = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && window.ethereum.isCoinbaseWallet) {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\n        const signer = await provider.getSigner();\n        setProvider(provider);\n        setSigner(signer);\n        setAccount(accounts[0]);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n      } else {\n        alert('Coinbase Wallet is not installed. Please install Coinbase Wallet first!');\n      }\n    } catch (error) {\n      console.error('Error connecting to Coinbase Wallet:', error);\n      alert('Failed to connect to Coinbase Wallet');\n    }\n  };\n\n  // Connect to any injected wallet\n  const connectInjectedWallet = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && !window.ethereum.isMetaMask && !window.ethereum.isCoinbaseWallet) {\n        // Request account access\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n\n        // Check if we're on a testnet\n        const chainId = await window.ethereum.request({\n          method: 'eth_chainId'\n        });\n        const networkName = getNetworkInfo(chainId).name;\n        setCurrentNetwork({\n          chainId,\n          name: networkName\n        });\n        if (!isTestnet(chainId)) {\n          const networkInfo = getNetworkInfo(chainId);\n          alert(`⚠️ SAFETY WARNING: You're connected to ${networkInfo.name} (${chainId})!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch to a testnet like Sepolia, Goerli, or Mumbai before trading.`);\n          return;\n        }\n        if (!isNetworkAllowed(chainId)) {\n          alert(`⚠️ NETWORK BLOCKED: ${getNetworkInfo(chainId).name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          return;\n        }\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        setAccount(accounts[0]);\n        setProvider(provider);\n        setSigner(signer);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n        console.log(`✅ Connected to ${networkName} testnet safely`);\n\n        // Load user orders after connecting\n        setTimeout(() => {\n          loadUserOrders();\n        }, 1000);\n\n        // Listen for network changes\n        window.ethereum.on('chainChanged', async newChainId => {\n          const newNetworkInfo = getNetworkInfo(newChainId);\n          setCurrentNetwork({\n            chainId: newChainId,\n            name: newNetworkInfo.name\n          });\n          if (!isTestnet(newChainId)) {\n            alert(`⚠️ NETWORK CHANGED: You're now on ${newNetworkInfo.name}!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch back to a testnet for safe testing.`);\n          }\n          if (!isNetworkAllowed(newChainId)) {\n            alert(`⚠️ NETWORK BLOCKED: ${newNetworkInfo.name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          }\n        });\n      } else {\n        alert('No injected wallet found!');\n      }\n    } catch (error) {\n      console.error('Error connecting to injected wallet:', error);\n      alert('Failed to connect to wallet: ' + error.message);\n    }\n  };\n\n  // Disconnect wallet\n  const disconnectWallet = () => {\n    setAccount(null);\n    setProvider(null);\n    setSigner(null);\n    setIsConnected(false);\n    setShowWalletOptions(false);\n  };\n\n  // Handle market tab change\n  const handleMarketChange = market => {\n    setActiveMarket(market);\n    setOrderForm(prev => ({\n      ...prev,\n      market: market\n    }));\n  };\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setOrderForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Place order\n  const placeOrder = async e => {\n    e.preventDefault();\n    console.log('=== PLACING ORDER ===');\n    console.log('Order form data:', orderForm);\n    console.log('Selected market ID:', selectedMarketId);\n    console.log('Active market:', activeMarket);\n    console.log('=====================');\n    if (!isConnected) {\n      alert('Please connect your wallet first');\n      return;\n    }\n    if (!orderForm.marketId) {\n      alert('Please select a prediction market first');\n      return;\n    }\n    if (!orderForm.price || !orderForm.quantity) {\n      alert('Please fill in all fields');\n      return;\n    }\n    const price = parseFloat(orderForm.price);\n    const quantity = parseInt(orderForm.quantity);\n    if (price < 0 || price > 1 || quantity <= 0 || !Number.isInteger(quantity)) {\n      alert('Invalid price or quantity. Price must be between 0 and 1, quantity must be a positive integer.');\n      return;\n    }\n    try {\n      // Create order object for API\n      const orderData = {\n        marketId: orderForm.marketId,\n        market: activeMarket,\n        // Use activeMarket instead of orderForm.market\n        side: orderForm.side,\n        price: price,\n        qty: quantity,\n        user: account\n      };\n\n      // Call the actual CLOB backend API\n      const response = await fetch('http://localhost:3001/api/orders', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(orderData)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        // Add to orders list with backend order ID\n        const order = {\n          id: result.orderId,\n          user: account,\n          side: orderForm.side,\n          price: price,\n          qty: quantity,\n          timestamp: Math.floor(Date.now() / 1000),\n          market: activeMarket,\n          marketId: orderForm.marketId\n        };\n        setOrders(prev => [...prev, order]);\n\n        // Handle trades from the backend\n        if (result.trades && result.trades.length > 0) {\n          setTrades(prev => [...result.trades, ...prev]);\n\n          // Remove matched orders\n          setOrders(prev => prev.filter(o => o.id !== order.id));\n        }\n\n        // Reset form but keep the current market ID\n        setOrderForm(prev => ({\n          ...prev,\n          price: '',\n          quantity: ''\n        }));\n        alert('Order placed successfully!');\n\n        // Refresh order book data immediately and after a short delay\n        refreshOrderBook();\n        setTimeout(() => {\n          refreshOrderBook();\n          // Also refresh user orders\n          loadUserOrders();\n        }, 500); // Refresh again after 500ms to ensure backend has processed\n      } else {\n        alert(`Failed to place order: ${result.error || 'Unknown error'}`);\n      }\n    } catch (error) {\n      console.error('Error placing order:', error);\n      alert('Failed to place order. Please check your connection.');\n    }\n  };\n\n  // Cancel order\n  const cancelOrder = async orderId => {\n    if (!account) return;\n    try {\n      console.log('Cancelling order:', orderId);\n      const response = await fetch(`http://localhost:3001/api/orders/${orderId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        console.log('Order cancelled successfully');\n        // Remove the order from local state immediately\n        setOrders(prev => prev.filter(o => o.id !== orderId));\n        // Refresh order book to reflect the cancellation\n        refreshOrderBook();\n        // Also refresh after a short delay to ensure backend has processed\n        setTimeout(() => {\n          refreshOrderBook();\n          loadUserOrders(); // Reload user orders to ensure consistency\n        }, 500);\n        alert('Order cancelled successfully!');\n      } else {\n        const errorData = await response.json();\n        console.error('Failed to cancel order:', errorData);\n        alert(`Failed to cancel order: ${errorData.error || 'Unknown error'}`);\n      }\n    } catch (error) {\n      console.error('Error cancelling order:', error);\n      alert('Error cancelling order. Please try again.');\n    }\n  };\n\n  // Get order book for a specific market\n  const getOrderBook = market => {\n    return orders.filter(o => o.market === market);\n  };\n\n  // Refresh order book data from backend\n  const refreshOrderBook = async () => {\n    try {\n      console.log('Refreshing order book for market:', activeMarket);\n      console.log('Using marketId:', orderForm.marketId);\n      console.log('Selected prediction market ID:', selectedMarketId);\n      if (!orderForm.marketId) {\n        console.log('No market ID set, skipping order book refresh');\n        return;\n      }\n      const response = await fetch(`http://localhost:3001/api/markets/${orderForm.marketId}/orderbook?market=${activeMarket}`);\n      if (response.ok) {\n        var _orderBookData$bids2, _orderBookData$asks2;\n        const orderBookData = await response.json();\n        console.log('Received order book data:', orderBookData);\n        console.log('Raw bids:', orderBookData.bids);\n        console.log('Raw asks:', orderBookData.asks);\n        console.log('Bids type:', typeof orderBookData.bids, 'Length:', (_orderBookData$bids2 = orderBookData.bids) === null || _orderBookData$bids2 === void 0 ? void 0 : _orderBookData$bids2.length);\n        console.log('Asks type:', typeof orderBookData.asks, 'Length:', (_orderBookData$asks2 = orderBookData.asks) === null || _orderBookData$asks2 === void 0 ? void 0 : _orderBookData$asks2.length);\n        const processedData = {\n          bids: orderBookData.bids || [],\n          asks: orderBookData.asks || []\n        };\n        console.log('Processed order book data:', processedData);\n        console.log('Processed bids type:', typeof processedData.bids, 'Length:', processedData.bids.length);\n        console.log('Processed asks type:', typeof processedData.asks, 'Length:', processedData.asks.length);\n        console.log('Processed bids content:', JSON.stringify(processedData.bids));\n        console.log('Processed asks content:', JSON.stringify(processedData.asks));\n        setOrderBookData(processedData);\n        console.log('Order book state updated');\n\n        // Verify the state was set correctly\n        setTimeout(() => {\n          console.log('Order book state after update:', orderBookData);\n        }, 100);\n      } else {\n        console.error('Failed to fetch order book:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('Error refreshing order book:', error);\n    }\n  };\n\n  // Load user orders from backend\n  const loadUserOrders = async () => {\n    if (!account) return;\n    try {\n      console.log('Loading user orders for account:', account);\n      const response = await fetch(`http://localhost:3001/api/users/${account}/orders`);\n      if (response.ok) {\n        const userOrders = await response.json();\n        console.log('Received user orders:', userOrders);\n        setOrders(userOrders || []);\n      } else {\n        console.error('Failed to fetch user orders:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('Error loading user orders:', error);\n    }\n  };\n\n  // Get best bid and ask for a market\n  const getBestPrices = market => {\n    const marketOrders = getOrderBook(market);\n    const bids = marketOrders.filter(o => o.side === 'Buy').sort((a, b) => b.price - a.price);\n    const asks = marketOrders.filter(o => o.side === 'Sell').sort((a, b) => a.price - b.price);\n    return {\n      bestBid: bids.length > 0 ? bids[0].price : 0,\n      bestAsk: asks.length > 0 ? asks[0].price : 1\n    };\n  };\n\n  // Helper functions for network safety\n  const switchToTestnet = async testnetName => {\n    try {\n      if (!window.ethereum) {\n        alert('No wallet detected!');\n        return;\n      }\n      let chainId;\n      switch (testnetName) {\n        case 'Sepolia':\n          chainId = '0xaa36a7';\n          break;\n        case 'Goerli':\n          chainId = '0x5';\n          break;\n        case 'Mumbai':\n          chainId = '0x13881';\n          break;\n        default:\n          chainId = '0xaa36a7';\n        // Default to Sepolia\n      }\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{\n          chainId\n        }]\n      });\n      console.log(`✅ Switched to ${testnetName} testnet`);\n    } catch (error) {\n      console.error('Error switching networks:', error);\n      alert(`Failed to switch to ${testnetName}: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mini-etf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Central Limit Order Book for Binary Markets of ETFs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"safety-banner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"safety-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"safety-icon\",\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"SAFETY WARNING:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }, this), \" This is a development/testing system. Only connect wallets with testnet accounts. Never use mainnet wallets with real funds!\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"safety-icon\",\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `nav-button ${currentPage === 'trading' ? 'active' : ''}`,\n        onClick: () => setCurrentPage('trading'),\n        children: \"\\uD83D\\uDCCA Trading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `nav-button ${currentPage === 'feeds' ? 'active' : ''}`,\n        onClick: () => setCurrentPage('feeds'),\n        children: \"\\uD83D\\uDD17 Chainlink Feeds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDD10 Wallet Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 11\n        }, this), !isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"connect-button\",\n            onClick: () => setShowWalletOptions(!showWalletOptions),\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 15\n          }, this), showWalletOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wallet-options\",\n            children: [availableWallets.map(wallet => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"wallet-option\",\n              onClick: wallet.connect,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"wallet-icon\",\n                children: wallet.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 656,\n                columnNumber: 23\n              }, this), wallet.name]\n            }, wallet.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 21\n            }, this)), availableWallets.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-wallets-message\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No Web3 wallets detected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wallet-install-links\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"https://metamask.io/\",\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  className: \"wallet-link\",\n                  children: \"Install MetaMask\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 664,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Account:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 17\n            }, this), \" \", account.slice(0, 6), \"...\", account.slice(-4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 15\n          }, this), currentNetwork && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"network-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Network:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 19\n            }, this), \" \", currentNetwork.name, !isTestnet(currentNetwork.chainId) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"warning\",\n              children: \"\\u26A0\\uFE0F MAINNET - UNSAFE!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 21\n            }, this), !isNetworkAllowed(currentNetwork.chainId) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"warning\",\n              children: \"\\uD83D\\uDEAB NETWORK BLOCKED!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"network-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"testnet-button\",\n              onClick: () => switchToTestnet('Sepolia'),\n              children: \"Switch to Sepolia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"testnet-button\",\n              onClick: () => switchToTestnet('Goerli'),\n              children: \"Switch to Goerli\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"testnet-button\",\n              onClick: () => switchToTestnet('Mumbai'),\n              children: \"Switch to Mumbai\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"disconnect-button\",\n            onClick: disconnectWallet,\n            children: \"Disconnect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 9\n      }, this), currentPage === 'trading' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [createdMarkets.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prediction-market-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: '15px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83C\\uDFAF Select Prediction Market\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: loadCreatedMarkets,\n                style: {\n                  background: '#007bff',\n                  color: 'white',\n                  border: 'none',\n                  padding: '8px 16px',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                  fontSize: '12px'\n                },\n                children: \"\\uD83D\\uDD04 Refresh Markets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 727,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  console.log('=== MANUAL CHECK ===');\n                  console.log('localStorage createdMarkets:', localStorage.getItem('createdMarkets'));\n                  console.log('State createdMarkets:', createdMarkets);\n                  console.log('State selectedMarketId:', selectedMarketId);\n                  alert('Check console for market data');\n                },\n                style: {\n                  background: '#28a745',\n                  color: 'white',\n                  border: 'none',\n                  padding: '8px 16px',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                  fontSize: '12px'\n                },\n                children: \"\\uD83D\\uDD0D Check Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: '#f8f9fa',\n              padding: '10px',\n              borderRadius: '4px',\n              marginBottom: '15px',\n              fontSize: '12px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Debug:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 19\n            }, this), \" \", createdMarkets.length, \" markets loaded | Selected: \", selectedMarketId || 'None']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"market-options\",\n            children: createdMarkets.map(market => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `market-option ${selectedMarketId === market.id ? 'selected' : ''}`,\n              onClick: () => handleMarketSelection(market.id),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"market-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"market-symbols\",\n                  children: market.symbols.join(', ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 777,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"market-status\",\n                  children: market.isMock ? '🔄 Mock' : '✅ Live'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 778,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 776,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"market-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"strike-price\",\n                  children: [\"Strike: $\", Number(ethers.formatUnits(market.strike, 18)).toFixed(4)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 781,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"price-band\",\n                  children: [\"Band: $\", Number(ethers.formatUnits(market.lower, 18)).toFixed(4), \" - $\", Number(ethers.formatUnits(market.upper, 18)).toFixed(4)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 782,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"settlement\",\n                  children: [\"Settle: \", new Date(market.settleTs * 1000).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 783,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 23\n              }, this)]\n            }, market.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 769,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-markets-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83C\\uDFAF No Prediction Markets Available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Create prediction markets on the Chainlink Feeds page to start trading!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nav-button\",\n            onClick: () => setCurrentPage('feeds'),\n            style: {\n              marginTop: '10px'\n            },\n            children: \"\\uD83D\\uDD17 Go to Chainlink Feeds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"market-tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `market-tab ${activeMarket === 'YES' ? 'active' : ''}`,\n            onClick: () => handleMarketChange('YES'),\n            children: \"YES Market\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `market-tab ${activeMarket === 'NO' ? 'active' : ''}`,\n            onClick: () => handleMarketChange('NO'),\n            children: \"NO Market\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trading-section-single\",\n          children: [selectedMarketId && getSelectedMarket() && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-market-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"\\uD83D\\uDCCA Trading: \", getSelectedMarket().symbols.join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 824,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"market-trading-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Strike: $\", Number(ethers.formatUnits(getSelectedMarket().strike, 18)).toFixed(4)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 826,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Band: $\", Number(ethers.formatUnits(getSelectedMarket().lower, 18)).toFixed(4), \" - $\", Number(ethers.formatUnits(getSelectedMarket().upper, 18)).toFixed(4)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 827,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Settle: \", new Date(getSelectedMarket().settleTs * 1000).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 828,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 823,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"market-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [activeMarket, \" Market\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 17\n            }, this), orderForm.marketId && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '12px',\n                color: '#666',\n                marginBottom: '10px'\n              },\n              children: [\"Trading on Market ID: \", orderForm.marketId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 836,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: '#f0f0f0',\n                padding: '8px',\n                borderRadius: '4px',\n                marginBottom: '15px',\n                fontSize: '11px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Form Debug:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 843,\n                columnNumber: 19\n              }, this), \" marketId=\", orderForm.marketId || 'null', \" | side=\", orderForm.side || 'null', \" | price=\", orderForm.price || 'null', \" | quantity=\", orderForm.quantity || 'null']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 842,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"order-form\",\n              onSubmit: placeOrder,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"hidden\",\n                name: \"market\",\n                value: activeMarket\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 849,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Side:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 852,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"side\",\n                  value: orderForm.side,\n                  onChange: handleInputChange,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Buy\",\n                    children: \"Buy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 854,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Sell\",\n                    children: \"Sell\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 855,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 853,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 851,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Price (0.0 - 1.0):\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 860,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"price\",\n                  value: orderForm.price,\n                  onChange: handleInputChange,\n                  step: \"0.01\",\n                  min: \"0\",\n                  max: \"1\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 861,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 859,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Quantity (whole shares):\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 874,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"quantity\",\n                  value: orderForm.quantity,\n                  onChange: handleInputChange,\n                  step: \"1\",\n                  min: \"1\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 875,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 873,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"submit-button\",\n                disabled: !isConnected,\n                children: \"Place Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 886,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 848,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order-book\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Order Book\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 894,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: refreshOrderBook,\n                  style: {\n                    background: '#2196F3',\n                    color: 'white',\n                    border: 'none',\n                    padding: '8px 16px',\n                    borderRadius: '4px',\n                    cursor: 'pointer',\n                    fontSize: '12px'\n                  },\n                  children: \"\\uD83D\\uDD04 Refresh\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 895,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 893,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    background: '#f8f9fa',\n                    padding: '8px',\n                    borderRadius: '4px',\n                    marginBottom: '10px',\n                    fontSize: '11px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Order Book Debug:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 913,\n                    columnNumber: 23\n                  }, this), \" Bids: \", orderBookData.bids.length, \" | Asks: \", orderBookData.asks.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 912,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"order-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Best Bid: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"bid\",\n                      children: orderBookData.bids.length > 0 ? orderBookData.bids[0].price.toFixed(3) : '0.000'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 917,\n                      columnNumber: 39\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 917,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Best Ask: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"ask\",\n                      children: orderBookData.asks.length > 0 ? orderBookData.asks[0].price.toFixed(3) : '1.000'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 920,\n                      columnNumber: 39\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 920,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 916,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"order-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                      alignItems: 'center'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      children: \"Your Orders\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 929,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: loadUserOrders,\n                      style: {\n                        background: '#4CAF50',\n                        color: 'white',\n                        border: 'none',\n                        padding: '4px 8px',\n                        borderRadius: '4px',\n                        cursor: 'pointer',\n                        fontSize: '10px'\n                      },\n                      children: \"\\uD83D\\uDD04\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 930,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 928,\n                    columnNumber: 23\n                  }, this), orders.filter(o => o.market === activeMarket).slice(0, 5).map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"order-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: order.side === 'Buy' ? 'bid' : 'ask',\n                      children: [order.side, \" \", order.qty, \" @ \", order.price.toFixed(3)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 947,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => cancelOrder(order.id),\n                      style: {\n                        background: '#f44336',\n                        color: 'white',\n                        border: 'none',\n                        padding: '4px 8px',\n                        borderRadius: '4px',\n                        cursor: 'pointer'\n                      },\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 950,\n                      columnNumber: 27\n                    }, this)]\n                  }, order.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 946,\n                    columnNumber: 25\n                  }, this)), orders.filter(o => o.market === activeMarket).length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      textAlign: 'center',\n                      color: '#888',\n                      fontStyle: 'italic'\n                    },\n                    children: \"No orders in this market yet\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 959,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 927,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 910,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 892,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trades-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Recent Trades\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 971,\n            columnNumber: 15\n          }, this), trades.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No trades yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 973,\n            columnNumber: 17\n          }, this) : trades.slice(0, 10).map(trade => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trade-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: trade.market\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 977,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [trade.buyer.slice(0, 6), \"...\", trade.buyer.slice(-4), \" \\u2192 \", trade.seller.slice(0, 6), \"...\", trade.seller.slice(-4)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 978,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [trade.qty, \" @ \", trade.price.toFixed(3)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 979,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: new Date(trade.timestamp * 1000).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 980,\n              columnNumber: 21\n            }, this)]\n          }, trade.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 976,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 970,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(ChainlinkFeeds, {\n        account: account,\n        provider: provider,\n        signer: signer,\n        isConnected: isConnected,\n        currentNetwork: currentNetwork\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 987,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 602,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"i4X7Mab+6IJu/GF6Kv1kRlK76t8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","CONFIG","isTestnet","getNetworkInfo","isNetworkAllowed","ChainlinkFeeds","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","account","setAccount","provider","setProvider","signer","setSigner","isConnected","setIsConnected","showWalletOptions","setShowWalletOptions","orders","setOrders","trades","setTrades","activeMarket","setActiveMarket","availableWallets","setAvailableWallets","currentNetwork","setCurrentNetwork","orderBookData","setOrderBookData","bids","asks","createdMarkets","setCreatedMarkets","selectedMarketId","setSelectedMarketId","orderForm","setOrderForm","market","side","price","quantity","marketId","currentPage","setCurrentPage","detectAvailableWallets","refreshOrderBook","loadCreatedMarkets","interval","setInterval","clearInterval","loadUserOrders","console","log","_orderBookData$bids","_orderBookData$asks","length","stored","localStorage","getItem","markets","JSON","parse","id","prev","toString","error","handleMarketSelection","selectedMarket","find","m","getSelectedMarket","wallets","window","ethereum","isMetaMask","push","name","icon","connect","connectMetaMask","isCoinbaseWallet","connectCoinbaseWallet","isTrust","connectInjectedWallet","isTokenPocket","accounts","request","method","chainId","networkName","networkInfo","alert","BrowserProvider","getSigner","setTimeout","on","newChainId","newNetworkInfo","message","send","disconnectWallet","handleMarketChange","handleInputChange","e","value","target","placeOrder","preventDefault","parseFloat","parseInt","Number","isInteger","orderData","qty","user","response","fetch","headers","body","stringify","result","json","ok","order","orderId","timestamp","Math","floor","Date","now","filter","o","cancelOrder","errorData","getOrderBook","_orderBookData$bids2","_orderBookData$asks2","processedData","status","statusText","userOrders","getBestPrices","marketOrders","sort","a","b","bestBid","bestAsk","switchToTestnet","testnetName","params","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","wallet","href","rel","slice","style","display","justifyContent","alignItems","marginBottom","gap","background","color","border","padding","borderRadius","cursor","fontSize","symbols","join","isMock","formatUnits","strike","toFixed","lower","upper","settleTs","toLocaleDateString","marginTop","onSubmit","type","onChange","step","min","max","required","disabled","textAlign","fontStyle","trade","buyer","seller","toLocaleTimeString","_c","$RefreshReg$"],"sources":["/Users/raymeind/mini-etf/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { CONFIG, isTestnet, getNetworkInfo, isNetworkAllowed } from './config';\nimport ChainlinkFeeds from './ChainlinkFeeds';\nimport './App.css';\n\nfunction App() {\n  const [account, setAccount] = useState('');\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [showWalletOptions, setShowWalletOptions] = useState(false);\n  const [orders, setOrders] = useState([]);\n  const [trades, setTrades] = useState([]);\n  const [activeMarket, setActiveMarket] = useState('YES'); // Track active market tab\n  const [availableWallets, setAvailableWallets] = useState([]);\n  const [currentNetwork, setCurrentNetwork] = useState(null);\n  const [orderBookData, setOrderBookData] = useState({ bids: [], asks: [] });\n  const [createdMarkets, setCreatedMarkets] = useState([]); // Store created prediction markets\n  const [selectedMarketId, setSelectedMarketId] = useState(null); // Currently selected market\n  const [orderForm, setOrderForm] = useState({\n    market: 'YES',\n    side: 'Buy',\n    price: '',\n    quantity: '',\n    marketId: null // Will be set to selected prediction market ID\n  });\n  const [currentPage, setCurrentPage] = useState('trading'); // 'trading' or 'feeds'\n\n  // Detect available wallets on component mount\n  useEffect(() => {\n    detectAvailableWallets();\n    // Load initial order book data\n    if (orderForm.marketId) {\n      refreshOrderBook();\n    }\n    // Load created prediction markets from localStorage\n    loadCreatedMarkets();\n  }, []);\n\n  // Load order book data when active market changes\n  useEffect(() => {\n    if (orderForm.marketId) {\n      refreshOrderBook();\n    }\n  }, [activeMarket, orderForm.marketId]);\n\n  // Auto-refresh order book every 3 seconds\n  useEffect(() => {\n    if (orderForm.marketId) {\n      const interval = setInterval(() => {\n        refreshOrderBook();\n      }, 3000);\n      \n      return () => clearInterval(interval);\n    }\n  }, [orderForm.marketId]);\n\n  // Auto-refresh user orders every 5 seconds\n  useEffect(() => {\n    if (isConnected && account) {\n      const interval = setInterval(() => {\n        loadUserOrders();\n      }, 5000);\n      \n      return () => clearInterval(interval);\n    }\n  }, [isConnected, account]);\n\n  // Debug effect to log state changes\n  useEffect(() => {\n    console.log('=== CLOB STATE UPDATE ===');\n    console.log('createdMarkets:', createdMarkets);\n    console.log('selectedMarketId:', selectedMarketId);\n    console.log('currentPage:', currentPage);\n    console.log('=======================');\n  }, [createdMarkets, selectedMarketId, currentPage]);\n\n  // Debug effect to monitor order book data changes\n  useEffect(() => {\n    console.log('=== ORDER BOOK STATE CHANGE ===');\n    console.log('orderBookData:', orderBookData);\n    console.log('bids count:', orderBookData.bids?.length);\n    console.log('asks count:', orderBookData.asks?.length);\n    console.log('bids data:', orderBookData.bids);\n    console.log('asks data:', orderBookData.asks);\n    console.log('==============================');\n  }, [orderBookData]);\n\n  // Function to load created prediction markets from localStorage\n  const loadCreatedMarkets = () => {\n    try {\n      const stored = localStorage.getItem('createdMarkets');\n      console.log('Raw localStorage data:', stored);\n      \n      if (stored) {\n        const markets = JSON.parse(stored);\n        console.log('Parsed markets:', markets);\n        console.log('Markets array length:', markets.length);\n        \n        setCreatedMarkets(markets);\n        \n        // If we have markets and none selected, select the first one\n        if (markets.length > 0 && !selectedMarketId) {\n          console.log('Setting first market as selected:', markets[0]);\n          setSelectedMarketId(markets[0].id);\n          \n          // Also set the order form market ID\n          setOrderForm(prev => ({\n            ...prev,\n            marketId: markets[0].id.toString()\n          }));\n        }\n      } else {\n        console.log('No markets found in localStorage');\n        setCreatedMarkets([]);\n      }\n    } catch (error) {\n      console.error('Error loading created markets:', error);\n      setCreatedMarkets([]);\n    }\n  };\n\n  // Function to handle market selection\n  const handleMarketSelection = (marketId) => {\n    setSelectedMarketId(marketId);\n    const selectedMarket = createdMarkets.find(m => m.id === marketId);\n    if (selectedMarket) {\n      console.log('Selected market:', selectedMarket);\n      \n      // Update order form with the selected market ID\n      setOrderForm(prev => ({\n        ...prev,\n        marketId: marketId.toString()\n      }));\n      \n      console.log('Updated order form:', orderForm);\n      \n      // Refresh order book for the new market\n      refreshOrderBook();\n    }\n  };\n\n  // Function to get currently selected market\n  const getSelectedMarket = () => {\n    return createdMarkets.find(m => m.id === selectedMarketId);\n  };\n\n  // Function to detect which wallets are available\n  const detectAvailableWallets = () => {\n    const wallets = [];\n    \n    if (typeof window.ethereum !== 'undefined') {\n      if (window.ethereum.isMetaMask) {\n        wallets.push({ id: 'metamask', name: 'MetaMask', icon: '🦊', connect: connectMetaMask });\n      }\n      if (window.ethereum.isCoinbaseWallet) {\n        wallets.push({ id: 'coinbase', name: 'Coinbase Wallet', icon: '🪙', connect: connectCoinbaseWallet });\n      }\n      if (window.ethereum.isTrust) {\n        wallets.push({ id: 'trust', name: 'Trust Wallet', icon: '🛡️', connect: connectInjectedWallet });\n      }\n      if (window.ethereum.isTokenPocket) {\n        wallets.push({ id: 'tokenpocket', name: 'TokenPocket', icon: '💼', connect: connectInjectedWallet });\n      }\n      \n      // If no specific wallet is detected but ethereum is available, add generic option\n      if (wallets.length === 0) {\n        wallets.push({ id: 'generic', name: 'Injected Wallet', icon: '💼', connect: connectInjectedWallet });\n      }\n    }\n    \n    setAvailableWallets(wallets);\n  };\n\n  // Connect to MetaMask\n  const connectMetaMask = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && window.ethereum.isMetaMask) {\n        // Request account access\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        \n        // Check if we're on a testnet\n        const chainId = await window.ethereum.request({ method: 'eth_chainId' });\n        const networkName = getNetworkInfo(chainId).name;\n        setCurrentNetwork({ chainId, name: networkName });\n        \n        if (!isTestnet(chainId)) {\n          const networkInfo = getNetworkInfo(chainId);\n          alert(`⚠️ SAFETY WARNING: You're connected to ${networkInfo.name} (${chainId})!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch to a testnet like Sepolia, Goerli, or Mumbai before trading.`);\n          return;\n        }\n        \n        if (!isNetworkAllowed(chainId)) {\n          alert(`⚠️ NETWORK BLOCKED: ${getNetworkInfo(chainId).name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          return;\n        }\n        \n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        \n        setAccount(accounts[0]);\n        setProvider(provider);\n        setSigner(signer);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n        \n        console.log(`✅ Connected to ${networkName} testnet safely`);\n        \n        // Load user orders after connecting\n        setTimeout(() => {\n          loadUserOrders();\n        }, 1000);\n        \n        // Listen for network changes\n        window.ethereum.on('chainChanged', async (newChainId) => {\n          const newNetworkInfo = getNetworkInfo(newChainId);\n          setCurrentNetwork({ chainId: newChainId, name: newNetworkInfo.name });\n          \n          if (!isTestnet(newChainId)) {\n            alert(`⚠️ NETWORK CHANGED: You're now on ${newNetworkInfo.name}!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch back to a testnet for safe testing.`);\n          }\n          \n          if (!isNetworkAllowed(newChainId)) {\n            alert(`⚠️ NETWORK BLOCKED: ${newNetworkInfo.name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          }\n        });\n      } else {\n        alert('MetaMask not found! Please install MetaMask extension.');\n      }\n    } catch (error) {\n      console.error('Error connecting to MetaMask:', error);\n      alert('Failed to connect to MetaMask: ' + error.message);\n    }\n  };\n\n  // Connect to Coinbase Wallet\n  const connectCoinbaseWallet = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && window.ethereum.isCoinbaseWallet) {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\n        const signer = await provider.getSigner();\n        \n        setProvider(provider);\n        setSigner(signer);\n        setAccount(accounts[0]);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n      } else {\n        alert('Coinbase Wallet is not installed. Please install Coinbase Wallet first!');\n      }\n    } catch (error) {\n      console.error('Error connecting to Coinbase Wallet:', error);\n      alert('Failed to connect to Coinbase Wallet');\n    }\n  };\n\n  // Connect to any injected wallet\n  const connectInjectedWallet = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined' && !window.ethereum.isMetaMask && !window.ethereum.isCoinbaseWallet) {\n        // Request account access\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        \n        // Check if we're on a testnet\n        const chainId = await window.ethereum.request({ method: 'eth_chainId' });\n        const networkName = getNetworkInfo(chainId).name;\n        setCurrentNetwork({ chainId, name: networkName });\n        \n        if (!isTestnet(chainId)) {\n          const networkInfo = getNetworkInfo(chainId);\n          alert(`⚠️ SAFETY WARNING: You're connected to ${networkInfo.name} (${chainId})!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch to a testnet like Sepolia, Goerli, or Mumbai before trading.`);\n          return;\n        }\n        \n        if (!isNetworkAllowed(chainId)) {\n          alert(`⚠️ NETWORK BLOCKED: ${getNetworkInfo(chainId).name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          return;\n        }\n        \n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        \n        setAccount(accounts[0]);\n        setProvider(provider);\n        setSigner(signer);\n        setIsConnected(true);\n        setShowWalletOptions(false);\n        \n        console.log(`✅ Connected to ${networkName} testnet safely`);\n        \n        // Load user orders after connecting\n        setTimeout(() => {\n          loadUserOrders();\n        }, 1000);\n        \n        // Listen for network changes\n        window.ethereum.on('chainChanged', async (newChainId) => {\n          const newNetworkInfo = getNetworkInfo(newChainId);\n          setCurrentNetwork({ chainId: newChainId, name: newNetworkInfo.name });\n          \n          if (!isTestnet(newChainId)) {\n            alert(`⚠️ NETWORK CHANGED: You're now on ${newNetworkInfo.name}!\\n\\nThis is NOT a testnet and could use real funds.\\n\\nPlease switch back to a testnet for safe testing.`);\n          }\n          \n          if (!isNetworkAllowed(newChainId)) {\n            alert(`⚠️ NETWORK BLOCKED: ${newNetworkInfo.name} is not allowed in this environment.\\n\\nPlease switch to an allowed testnet.`);\n          }\n        });\n      } else {\n        alert('No injected wallet found!');\n      }\n    } catch (error) {\n      console.error('Error connecting to injected wallet:', error);\n      alert('Failed to connect to wallet: ' + error.message);\n    }\n  };\n\n  // Disconnect wallet\n  const disconnectWallet = () => {\n    setAccount(null);\n    setProvider(null);\n    setSigner(null);\n    setIsConnected(false);\n    setShowWalletOptions(false);\n  };\n\n  // Handle market tab change\n  const handleMarketChange = (market) => {\n    setActiveMarket(market);\n    setOrderForm(prev => ({\n      ...prev,\n      market: market\n    }));\n  };\n\n  // Handle form input changes\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setOrderForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Place order\n  const placeOrder = async (e) => {\n    e.preventDefault();\n    \n    console.log('=== PLACING ORDER ===');\n    console.log('Order form data:', orderForm);\n    console.log('Selected market ID:', selectedMarketId);\n    console.log('Active market:', activeMarket);\n    console.log('=====================');\n    \n    if (!isConnected) {\n      alert('Please connect your wallet first');\n      return;\n    }\n\n    if (!orderForm.marketId) {\n      alert('Please select a prediction market first');\n      return;\n    }\n\n    if (!orderForm.price || !orderForm.quantity) {\n      alert('Please fill in all fields');\n      return;\n    }\n\n    const price = parseFloat(orderForm.price);\n    const quantity = parseInt(orderForm.quantity);\n\n    if (price < 0 || price > 1 || quantity <= 0 || !Number.isInteger(quantity)) {\n      alert('Invalid price or quantity. Price must be between 0 and 1, quantity must be a positive integer.');\n      return;\n    }\n\n    try {\n      // Create order object for API\n      const orderData = {\n        marketId: orderForm.marketId,\n        market: activeMarket, // Use activeMarket instead of orderForm.market\n        side: orderForm.side,\n        price: price,\n        qty: quantity,\n        user: account\n      };\n\n      // Call the actual CLOB backend API\n      const response = await fetch('http://localhost:3001/api/orders', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(orderData)\n      });\n\n      const result = await response.json();\n\n      if (response.ok) {\n        // Add to orders list with backend order ID\n        const order = {\n          id: result.orderId,\n          user: account,\n          side: orderForm.side,\n          price: price,\n          qty: quantity,\n          timestamp: Math.floor(Date.now() / 1000),\n          market: activeMarket,\n          marketId: orderForm.marketId\n        };\n\n        setOrders(prev => [...prev, order]);\n\n        // Handle trades from the backend\n        if (result.trades && result.trades.length > 0) {\n          setTrades(prev => [...result.trades, ...prev]);\n          \n          // Remove matched orders\n          setOrders(prev => prev.filter(o => o.id !== order.id));\n        }\n\n        // Reset form but keep the current market ID\n        setOrderForm(prev => ({\n          ...prev,\n          price: '',\n          quantity: ''\n        }));\n\n        alert('Order placed successfully!');\n        \n        // Refresh order book data immediately and after a short delay\n        refreshOrderBook();\n        setTimeout(() => {\n          refreshOrderBook();\n          // Also refresh user orders\n          loadUserOrders();\n        }, 500); // Refresh again after 500ms to ensure backend has processed\n      } else {\n        alert(`Failed to place order: ${result.error || 'Unknown error'}`);\n      }\n    } catch (error) {\n      console.error('Error placing order:', error);\n      alert('Failed to place order. Please check your connection.');\n    }\n  };\n\n  // Cancel order\n  const cancelOrder = async (orderId) => {\n    if (!account) return;\n    \n    try {\n      console.log('Cancelling order:', orderId);\n      const response = await fetch(`http://localhost:3001/api/orders/${orderId}`, {\n        method: 'DELETE'\n      });\n      \n      if (response.ok) {\n        console.log('Order cancelled successfully');\n        // Remove the order from local state immediately\n        setOrders(prev => prev.filter(o => o.id !== orderId));\n        // Refresh order book to reflect the cancellation\n        refreshOrderBook();\n        // Also refresh after a short delay to ensure backend has processed\n        setTimeout(() => {\n          refreshOrderBook();\n          loadUserOrders(); // Reload user orders to ensure consistency\n        }, 500);\n        alert('Order cancelled successfully!');\n      } else {\n        const errorData = await response.json();\n        console.error('Failed to cancel order:', errorData);\n        alert(`Failed to cancel order: ${errorData.error || 'Unknown error'}`);\n      }\n    } catch (error) {\n      console.error('Error cancelling order:', error);\n      alert('Error cancelling order. Please try again.');\n    }\n  };\n\n  // Get order book for a specific market\n  const getOrderBook = (market) => {\n    return orders.filter(o => o.market === market);\n  };\n\n  // Refresh order book data from backend\n  const refreshOrderBook = async () => {\n    try {\n      console.log('Refreshing order book for market:', activeMarket);\n      console.log('Using marketId:', orderForm.marketId);\n      console.log('Selected prediction market ID:', selectedMarketId);\n      \n      if (!orderForm.marketId) {\n        console.log('No market ID set, skipping order book refresh');\n        return;\n      }\n      \n      const response = await fetch(`http://localhost:3001/api/markets/${orderForm.marketId}/orderbook?market=${activeMarket}`);\n      if (response.ok) {\n        const orderBookData = await response.json();\n        console.log('Received order book data:', orderBookData);\n        console.log('Raw bids:', orderBookData.bids);\n        console.log('Raw asks:', orderBookData.asks);\n        console.log('Bids type:', typeof orderBookData.bids, 'Length:', orderBookData.bids?.length);\n        console.log('Asks type:', typeof orderBookData.asks, 'Length:', orderBookData.asks?.length);\n        \n        const processedData = {\n          bids: orderBookData.bids || [],\n          asks: orderBookData.asks || []\n        };\n        \n        console.log('Processed order book data:', processedData);\n        console.log('Processed bids type:', typeof processedData.bids, 'Length:', processedData.bids.length);\n        console.log('Processed asks type:', typeof processedData.asks, 'Length:', processedData.asks.length);\n        console.log('Processed bids content:', JSON.stringify(processedData.bids));\n        console.log('Processed asks content:', JSON.stringify(processedData.asks));\n        \n        setOrderBookData(processedData);\n        console.log('Order book state updated');\n        \n        // Verify the state was set correctly\n        setTimeout(() => {\n          console.log('Order book state after update:', orderBookData);\n        }, 100);\n      } else {\n        console.error('Failed to fetch order book:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('Error refreshing order book:', error);\n    }\n  };\n\n  // Load user orders from backend\n  const loadUserOrders = async () => {\n    if (!account) return;\n    \n    try {\n      console.log('Loading user orders for account:', account);\n      const response = await fetch(`http://localhost:3001/api/users/${account}/orders`);\n      if (response.ok) {\n        const userOrders = await response.json();\n        console.log('Received user orders:', userOrders);\n        setOrders(userOrders || []);\n      } else {\n        console.error('Failed to fetch user orders:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('Error loading user orders:', error);\n    }\n  };\n\n  // Get best bid and ask for a market\n  const getBestPrices = (market) => {\n    const marketOrders = getOrderBook(market);\n    const bids = marketOrders.filter(o => o.side === 'Buy').sort((a, b) => b.price - a.price);\n    const asks = marketOrders.filter(o => o.side === 'Sell').sort((a, b) => a.price - b.price);\n    \n    return {\n      bestBid: bids.length > 0 ? bids[0].price : 0,\n      bestAsk: asks.length > 0 ? asks[0].price : 1\n    };\n  };\n\n  // Helper functions for network safety\n  const switchToTestnet = async (testnetName) => {\n    try {\n      if (!window.ethereum) {\n        alert('No wallet detected!');\n        return;\n      }\n      \n      let chainId;\n      switch (testnetName) {\n        case 'Sepolia':\n          chainId = '0xaa36a7';\n          break;\n        case 'Goerli':\n          chainId = '0x5';\n          break;\n        case 'Mumbai':\n          chainId = '0x13881';\n          break;\n        default:\n          chainId = '0xaa36a7'; // Default to Sepolia\n      }\n      \n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId }],\n      });\n      \n      console.log(`✅ Switched to ${testnetName} testnet`);\n    } catch (error) {\n      console.error('Error switching networks:', error);\n      alert(`Failed to switch to ${testnetName}: ${error.message}`);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h1>Mini-etf</h1>\n        <p>Central Limit Order Book for Binary Markets of ETFs</p>\n      </header>\n      \n      {/* Safety Banner */}\n      <div className=\"safety-banner\">\n        <div className=\"safety-content\">\n          <span className=\"safety-icon\">⚠️</span>\n          <strong>SAFETY WARNING:</strong> This is a development/testing system. \n          Only connect wallets with testnet accounts. Never use mainnet wallets with real funds!\n          <span className=\"safety-icon\">⚠️</span>\n        </div>\n      </div>\n\n      {/* Navigation */}\n      <div className=\"navigation\">\n        <button \n          className={`nav-button ${currentPage === 'trading' ? 'active' : ''}`}\n          onClick={() => setCurrentPage('trading')}\n        >\n          📊 Trading\n        </button>\n        <button \n          className={`nav-button ${currentPage === 'feeds' ? 'active' : ''}`}\n          onClick={() => setCurrentPage('feeds')}\n        >\n          🔗 Chainlink Feeds\n        </button>\n      </div>\n\n      <div className=\"container\">\n        {/* Wallet Section */}\n        <div className=\"wallet-section\">\n          <h2>🔐 Wallet Connection</h2>\n          \n          {!isConnected ? (\n            <div className=\"wallet-controls\">\n              <button \n                className=\"connect-button\"\n                onClick={() => setShowWalletOptions(!showWalletOptions)}\n              >\n                Connect Wallet\n              </button>\n              \n              {showWalletOptions && (\n                <div className=\"wallet-options\">\n                  {availableWallets.map((wallet) => (\n                    <button\n                      key={wallet.name}\n                      className=\"wallet-option\"\n                      onClick={wallet.connect}\n                    >\n                      <span className=\"wallet-icon\">{wallet.icon}</span>\n                      {wallet.name}\n                    </button>\n                  ))}\n                  {availableWallets.length === 0 && (\n                    <div className=\"no-wallets-message\">\n                      <p>No Web3 wallets detected</p>\n                      <div className=\"wallet-install-links\">\n                        <a href=\"https://metamask.io/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"wallet-link\">\n                          Install MetaMask\n                        </a>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"wallet-info\">\n              <div className=\"account-info\">\n                <strong>Account:</strong> {account.slice(0, 6)}...{account.slice(-4)}\n              </div>\n              \n              {currentNetwork && (\n                <div className=\"network-info\">\n                  <strong>Network:</strong> {currentNetwork.name}\n                  {!isTestnet(currentNetwork.chainId) && (\n                    <span className=\"warning\">⚠️ MAINNET - UNSAFE!</span>\n                  )}\n                  {!isNetworkAllowed(currentNetwork.chainId) && (\n                    <span className=\"warning\">🚫 NETWORK BLOCKED!</span>\n                  )}\n                </div>\n              )}\n              \n              <div className=\"network-controls\">\n                <button \n                  className=\"testnet-button\"\n                  onClick={() => switchToTestnet('Sepolia')}\n                >\n                  Switch to Sepolia\n                </button>\n                <button \n                  className=\"testnet-button\"\n                  onClick={() => switchToTestnet('Goerli')}\n                >\n                  Switch to Goerli\n                </button>\n                <button \n                  className=\"testnet-button\"\n                  onClick={() => switchToTestnet('Mumbai')}\n                >\n                  Switch to Mumbai\n                </button>\n              </div>\n              \n              <button className=\"disconnect-button\" onClick={disconnectWallet}>\n                Disconnect\n              </button>\n            </div>\n          )}\n        </div>\n\n        {currentPage === 'trading' ? (\n          <>\n            {/* Prediction Market Selector */}\n            {createdMarkets.length > 0 ? (\n              <div className=\"prediction-market-selector\">\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '15px' }}>\n                  <h3>🎯 Select Prediction Market</h3>\n                  <div style={{ display: 'flex', gap: '10px' }}>\n                    <button \n                      onClick={loadCreatedMarkets}\n                      style={{\n                        background: '#007bff',\n                        color: 'white',\n                        border: 'none',\n                        padding: '8px 16px',\n                        borderRadius: '4px',\n                        cursor: 'pointer',\n                        fontSize: '12px'\n                      }}\n                    >\n                      🔄 Refresh Markets\n                    </button>\n                    <button \n                      onClick={() => {\n                        console.log('=== MANUAL CHECK ===');\n                        console.log('localStorage createdMarkets:', localStorage.getItem('createdMarkets'));\n                        console.log('State createdMarkets:', createdMarkets);\n                        console.log('State selectedMarketId:', selectedMarketId);\n                        alert('Check console for market data');\n                      }}\n                      style={{\n                        background: '#28a745',\n                        color: 'white',\n                        border: 'none',\n                        padding: '8px 16px',\n                        borderRadius: '4px',\n                        cursor: 'pointer',\n                        fontSize: '12px'\n                      }}\n                    >\n                      🔍 Check Data\n                    </button>\n                  </div>\n                </div>\n                \n                {/* Debug Info */}\n                <div style={{ background: '#f8f9fa', padding: '10px', borderRadius: '4px', marginBottom: '15px', fontSize: '12px' }}>\n                  <strong>Debug:</strong> {createdMarkets.length} markets loaded | Selected: {selectedMarketId || 'None'}\n                </div>\n                \n                <div className=\"market-options\">\n                  {createdMarkets.map(market => (\n                    <div \n                      key={market.id} \n                      className={`market-option ${selectedMarketId === market.id ? 'selected' : ''}`}\n                      onClick={() => handleMarketSelection(market.id)}\n                    >\n                      <div className=\"market-header\">\n                        <span className=\"market-symbols\">{market.symbols.join(', ')}</span>\n                        <span className=\"market-status\">{market.isMock ? '🔄 Mock' : '✅ Live'}</span>\n                      </div>\n                      <div className=\"market-details\">\n                        <span className=\"strike-price\">Strike: ${Number(ethers.formatUnits(market.strike, 18)).toFixed(4)}</span>\n                        <span className=\"price-band\">Band: ${Number(ethers.formatUnits(market.lower, 18)).toFixed(4)} - ${Number(ethers.formatUnits(market.upper, 18)).toFixed(4)}</span>\n                        <span className=\"settlement\">Settle: {new Date(market.settleTs * 1000).toLocaleDateString()}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <div className=\"no-markets-message\">\n                <h3>🎯 No Prediction Markets Available</h3>\n                <p>Create prediction markets on the Chainlink Feeds page to start trading!</p>\n                <button \n                  className=\"nav-button\"\n                  onClick={() => setCurrentPage('feeds')}\n                  style={{ marginTop: '10px' }}\n                >\n                  🔗 Go to Chainlink Feeds\n                </button>\n              </div>\n            )}\n\n            {/* Market Selection Tabs */}\n            <div className=\"market-tabs\">\n              <button \n                className={`market-tab ${activeMarket === 'YES' ? 'active' : ''}`}\n                onClick={() => handleMarketChange('YES')}\n              >\n                YES Market\n              </button>\n              <button \n                className={`market-tab ${activeMarket === 'NO' ? 'active' : ''}`}\n                onClick={() => handleMarketChange('NO')}\n              >\n                NO Market\n              </button>\n            </div>\n\n            {/* Trading Section - Single Market */}\n            <div className=\"trading-section-single\">\n              {/* Selected Market Info */}\n              {selectedMarketId && getSelectedMarket() && (\n                <div className=\"selected-market-info\">\n                  <h4>📊 Trading: {getSelectedMarket().symbols.join(', ')}</h4>\n                  <div className=\"market-trading-details\">\n                    <span>Strike: ${Number(ethers.formatUnits(getSelectedMarket().strike, 18)).toFixed(4)}</span>\n                    <span>Band: ${Number(ethers.formatUnits(getSelectedMarket().lower, 18)).toFixed(4)} - ${Number(ethers.formatUnits(getSelectedMarket().upper, 18)).toFixed(4)}</span>\n                    <span>Settle: {new Date(getSelectedMarket().settleTs * 1000).toLocaleDateString()}</span>\n                  </div>\n                </div>\n              )}\n              \n              <div className=\"market-card\">\n                <h3>{activeMarket} Market</h3>\n                {orderForm.marketId && (\n                  <div style={{ fontSize: '12px', color: '#666', marginBottom: '10px' }}>\n                    Trading on Market ID: {orderForm.marketId}\n                  </div>\n                )}\n                \n                {/* Debug: Show current order form state */}\n                <div style={{ background: '#f0f0f0', padding: '8px', borderRadius: '4px', marginBottom: '15px', fontSize: '11px' }}>\n                  <strong>Form Debug:</strong> marketId={orderForm.marketId || 'null'} | \n                  side={orderForm.side || 'null'} | \n                  price={orderForm.price || 'null'} | \n                  quantity={orderForm.quantity || 'null'}\n                </div>\n                <form className=\"order-form\" onSubmit={placeOrder}>\n                  <input type=\"hidden\" name=\"market\" value={activeMarket} />\n                  \n                  <div className=\"form-group\">\n                    <label>Side:</label>\n                    <select name=\"side\" value={orderForm.side} onChange={handleInputChange}>\n                      <option value=\"Buy\">Buy</option>\n                      <option value=\"Sell\">Sell</option>\n                    </select>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label>Price (0.0 - 1.0):</label>\n                    <input\n                      type=\"number\"\n                      name=\"price\"\n                      value={orderForm.price}\n                      onChange={handleInputChange}\n                      step=\"0.01\"\n                      min=\"0\"\n                      max=\"1\"\n                      required\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label>Quantity (whole shares):</label>\n                    <input\n                      type=\"number\"\n                      name=\"quantity\"\n                      value={orderForm.quantity}\n                      onChange={handleInputChange}\n                      step=\"1\"\n                      min=\"1\"\n                      required\n                    />\n                  </div>\n\n                  <button type=\"submit\" className=\"submit-button\" disabled={!isConnected}>\n                    Place Order\n                  </button>\n                </form>\n\n                {/* Order Book for Active Market */}\n                <div className=\"order-book\">\n                  <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\n                    <h4>Order Book</h4>\n                    <button \n                      onClick={refreshOrderBook}\n                      style={{\n                        background: '#2196F3', \n                        color: 'white', \n                        border: 'none', \n                        padding: '8px 16px', \n                        borderRadius: '4px', \n                        cursor: 'pointer',\n                        fontSize: '12px'\n                      }}\n                    >\n                      🔄 Refresh\n                    </button>\n                  </div>\n                  <div>\n                    {/* Debug: Show raw order book data */}\n                    <div style={{ background: '#f8f9fa', padding: '8px', borderRadius: '4px', marginBottom: '10px', fontSize: '11px' }}>\n                      <strong>Order Book Debug:</strong> Bids: {orderBookData.bids.length} | Asks: {orderBookData.asks.length}\n                    </div>\n                    \n                    <div className=\"order-row\">\n                      <span>Best Bid: <span className=\"bid\">\n                        {orderBookData.bids.length > 0 ? orderBookData.bids[0].price.toFixed(3) : '0.000'}\n                      </span></span>\n                      <span>Best Ask: <span className=\"ask\">\n                        {orderBookData.asks.length > 0 ? orderBookData.asks[0].price.toFixed(3) : '1.000'}\n                      </span></span>\n                    </div>\n                    \n\n                    {/* User's Orders */}\n                    <div className=\"order-section\">\n                      <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\n                        <h5>Your Orders</h5>\n                        <button \n                          onClick={loadUserOrders}\n                          style={{\n                            background: '#4CAF50', \n                            color: 'white', \n                            border: 'none', \n                            padding: '4px 8px', \n                            borderRadius: '4px', \n                            cursor: 'pointer',\n                            fontSize: '10px'\n                          }}\n                        >\n                          🔄\n                        </button>\n                      </div>\n                      {orders.filter(o => o.market === activeMarket).slice(0, 5).map(order => (\n                        <div key={order.id} className=\"order-row\">\n                          <span className={order.side === 'Buy' ? 'bid' : 'ask'}>\n                            {order.side} {order.qty} @ {order.price.toFixed(3)}\n                          </span>\n                          <button \n                            onClick={() => cancelOrder(order.id)}\n                            style={{background: '#f44336', color: 'white', border: 'none', padding: '4px 8px', borderRadius: '4px', cursor: 'pointer'}}\n                          >\n                            Cancel\n                          </button>\n                        </div>\n                      ))}\n                      {orders.filter(o => o.market === activeMarket).length === 0 && (\n                        <p style={{textAlign: 'center', color: '#888', fontStyle: 'italic'}}>\n                          No orders in this market yet\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Recent Trades */}\n            <div className=\"trades-section\">\n              <h3>Recent Trades</h3>\n              {trades.length === 0 ? (\n                <p>No trades yet</p>\n              ) : (\n                trades.slice(0, 10).map(trade => (\n                  <div key={trade.id} className=\"trade-row\">\n                    <span>{trade.market}</span>\n                    <span>{trade.buyer.slice(0, 6)}...{trade.buyer.slice(-4)} → {trade.seller.slice(0, 6)}...{trade.seller.slice(-4)}</span>\n                    <span>{trade.qty} @ {trade.price.toFixed(3)}</span>\n                    <span>{new Date(trade.timestamp * 1000).toLocaleTimeString()}</span>\n                  </div>\n                ))\n              )}\n            </div>\n          </>\n        ) : (\n          <ChainlinkFeeds\n            account={account}\n            provider={provider}\n            signer={signer}\n            isConnected={isConnected}\n            currentNetwork={currentNetwork}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}